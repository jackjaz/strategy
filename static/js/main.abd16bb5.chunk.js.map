{"version":3,"sources":["components/Home.jsx","components/StrategyUseForm.js","common/js/statusTextMap.js","reducer.js","components/Main.jsx","components/Navbar.jsx","common/js/instanceStatusTextMap.js","common/js/formatHelper.js","common/js/instanceStatusHandleForm.js","components/Admin.jsx","components/Auditor.jsx","components/StrategyNewForm.js","components/Strategist.jsx","components/User.jsx","components/Banner.jsx","components/Howtoplay.jsx","App.jsx","locale/cn.js","locale/en.js","locale/intl.js","index.js"],"names":["Home","props","account","quantContract","connected","c","ConnectAccount","ticketPrice","_useState","useParams","referCode","useState","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","allStrategies","setAllStrategies","useEffect","loadData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_allStrategies","wrap","_context","prev","next","console","log","methods","getAllStrategies","call","sent","stop","apply","this","arguments","loadDataAuto","_ref2","_callee2","_context2","setInterval","react_default","createElement","className","map","item","key","strategy_id","toString","name","sender","strategy_startup_amount","take_profit","stop_loss","tp_rate","exchange","status","Option","Select","layout","labelCol","span","wrapperCol","tailLayout","offset","StrategyUseForm","formRef","React","createRef","componentDidMount","formOption","_this","_this$props$formOptio","current","setFieldsValue","strategy_name","apikey","moment","format","secretkey","passphrase","initial_amount","onExchangeChange","value","onFinish","values","new_instance","onReset","resetFields","onFill","es_form","assign","ref","Item","label","rules","required","input","input_number","es_select","placeholder","onChange","allowClear","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","es_button","type","htmlType","onClick","Component","statusTextMap","0","1","2","3","4","5","6","mainContext","createContext","reducer","state","action","objectSpread","locale","strategy","ContextProvider","_useReducer","useReducer","_useReducer2","dispatch","Provider","children","Column","Table","Main","mainLoading","setMainLoading","_useState7","_useState8","_useState9","_useState10","allInstances","setAllInstances","_useContext","useContext","chageStrategy","setTimeout","_allInstances","forEach","id","Date","now","statusText","getStatusText","isExpand","getAllInstances","instance_id","_ref3","_callee3","obj","_context3","send","from","on","confirmationNumber","receipt","error","_x","index","table","dataSource","pagination","position","title","dataIndex","width","ellipsis","showTitle","render","tooltip","placement","text","record","space","size","splice","i item.isExpand: ","changeExpand","components_StrategyUseForm","bind","Navbar","react_router_dom","to","message","defaultMessage","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","concat","substring","length","instanceStatusTextMap","7","8","9","formatAllStrategies","formatAllInstances","instance_status_text","instance_status","isExpand_StrategistPreConfirmed","isExpand_StrategistMidDisagree","isExpand_UserMidDisagree","isExpand_StrategistConfirmed","isExpand_ArbitrateUserWin","isExpand_ArbitrateStrategistWin","isExpand_Settled","Form_StrategistPreConfirmed","set_instance_status_StrategistPreConfirmed","final_amount","Form_StrategistMidDisagree","_this2","set_instance_status_StrategistMidDisagree","Form_UserMidDisagree","_this3","set_instance_status_UserMidDisagree","Form_ArbitrateUserWin","_this4","set_instance_status_ArbitrateUserWin","Form_ArbitrateStrategistWin","_this5","set_instance_status_ArbitrateStrategistWin","Form_StrategistConfirmed","_this6","set_instance_status_StrategistConfirmed","Form_Settled","_this7","set_instance_status_Settled","Admin","set_strategy_status_active","_ref5","_callee5","_context5","set_strategy_status_x_id_status","set_strategy_status_deleted","_ref6","_callee6","_context6","_x2","set_strategy_status_stopped_x_admin","_ref7","_callee7","_context7","_x3","set_strategy_status_deleted_x_admin","_ref8","_callee8","_context8","_x4","_ref10","_callee10","_context10","parseInt","set_instance_status_x_id_status","_x6","_ref11","_callee11","_context11","_x7","_ref13","_callee13","_context13","_x9","Admin_Column","i item.isExpand_ArbitrateUserWin: ","changeExpand_ArbitrateUserWin","i item.isExpand_ArbitrateStrategistWin: ","changeExpand_ArbitrateStrategistWin","i item.isExpand_Settled: ","changeExpand_Settled","instanceStatusHandleForm_Form_ArbitrateUserWin","instanceStatusHandleForm_Form_ArbitrateStrategistWin","instanceStatusHandleForm_Form_Settled","Auditor","_ref4","_callee4","_context4","Auditor_Column","StrategyNewForm","newStrategy","startup_amount","sl_rate","StrategyNewForm_Option","myCreatedStrategies","setMyCreatedStrategies","_myCreatedStrategies","get_all_StrategyInfo_x_strategiest","set_strategy_status_running","set_strategy_status_stop","set_strategy_status_unavailable","_x5","_ref9","_callee9","_context9","_useState11","_useState12","new_strategy","_x8","Strategist_Column","i item.isExpand_StrategistPreConfirmed: ","changeExpand_StrategistPreConfirmed","i item.isExpand_StrategistMidDisagree: ","changeExpand_StrategistMidDisagree","i item.isExpand_StrategistConfirmed: ","changeExpand_StrategistConfirmed","instanceStatusHandleForm_Form_StrategistPreConfirmed","instanceStatusHandleForm_Form_StrategistMidDisagree","instanceStatusHandleForm_Form_StrategistConfirmed","components_StrategyNewForm","allStrategiesOfUser","setAllStrategiesOfUser","allInstancesOfUser","setAllInstancesOfUser","_allStrategiesOfUser","_allInstancesOfUser","getAllStrategiesOfUser","getAllInstancesOfUser","set_instance_status_UserConfirmed","User_Column","i item.isExpand_UserMidDisagree: ","changeExpand_UserMidDisagree","instanceStatusHandleForm_Form_UserMidDisagree","Banner","Howtoplay","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","gameStartDate","Math","pow","loading","assertThisInitialized","setState","loadWeb3","window","ethereum","web3","Web3","enable","loadBlockChatData","currentProvider","alert","eth","getAccounts","accounts","defaultAccount","net","getId","networkId","CONTACT_ADDRESS","CONTACT_ABI","QuantJson","abi","Contract","networkAddress","blockExplorerUrl","switchToPolygonTestNet","request","method","params","chainId","t0","code","chainName","rpcUrls","nativeCurrency","symbol","decimals","blockExplorerUrls","Navbar_Navbar","react_router","path","exact","Strategist_Admin","User_Main","zh_CN","start","switch","main_plear_connect_wallet","nav_quant","nav_main","nav_admin","nav_strategist","nav_user","nav_auditor","nav_faq","nav_rule","nav_donation","nav_contact","rule_time","rule_game_rule","rule_game_rule_1","rule_game_rule_2","rule_game_rule_3","rule_game_rule_4","rule_game_rule_5","rule_game_rule_6","faq_title","faq_question_risk","faq_answer_risk","faq_question_1","faq_answer_1","donation_title","contact_title","zzz","en_US","rule_draw_rule","rule_draw_rule_1","rule_draw_rule_2","rule_reward_rule","rule_reward_rule_1","rule_reward_rule_2","rule_reward_rule_3","rule_reward_rule_4","rule_reward_rule_5","Inter","provider","defaultLocale","messages","val","navigator","language","split","chooseLocale","Root","reducer_ContextProvider","intl","src_App","ReactDom","src_Root","document","getElementById"],"mappings":"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","file":"static/js/main.abd16bb5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport \"../css/CustomButtons.css\"\nimport \"../css/MainBackground.css\"\nimport { useParams } from 'react-router';\nimport { FormattedMessage } from 'react-intl'\n\nexport default function Home(props) {\n    const { account, quantContract, connected, ConnectAccount, ticketPrice } = props;\n    const c = quantContract;\n    const { referCode } = useParams();\n    const [playerRefferalCode, setPlayerRefferalCode] = useState(null);\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allStrategies, setAllStrategies] = useState(null);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const connectToAccount = () => {\n        if (!connected) {\n            setMainLoading(true);\n            ConnectAccount()\n        }\n    }\n\n    const loadData = async () => { \n        console.log(\"loadData\"); \n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n\n    }\n\n    const loadDataAuto = async () => {\n        console.log(\"loadDataAuto\");\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n    }\n    setInterval(() => {\n        if (quantContract) {\n\n            loadDataAuto();\n        }\n    }, 300000);\n\n    return (\n        <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\n            All for quant\n            \n            { allStrategies && allStrategies.map((item) => {\n                return (\n                    <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                        \n                        <p>{item.strategy_id.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.name.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.sender.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.strategy_startup_amount.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.take_profit.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.stop_loss.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.tp_rate.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.exchange.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.status}</p>\n                    </div>\n                )\n                })\n            }\n                \n        </div >\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nimport moment from \"moment\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass StrategyUseForm extends React.Component {\n  formRef = React.createRef();\n  componentDidMount = () => {\n    console.log({formOption: this.props.formOption})\n    const { name, strategy_id, take_profit } = this.props.formOption;\n    this.formRef.current.setFieldsValue({\n      strategy_name: name,\n      strategy_id,\n      apikey: \"your_api_key\"+ moment().format('YYYYMMDDHHmmss'),\n      secretkey: \"your_secret_key\"+ moment().format('YYYYMMDDHHmmss'),\n      passphrase: \"your_passphrase\"+ moment().format('YYYYMMDDHHmmss'),\n      exchange: 'binance',\n      take_profit,\n      initial_amount: 10001,\n      });\n  }\n\n  onExchangeChange = (value) => {\n    switch (value) {\n\t\tcase 'binance':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'okex':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'ok' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'huobi':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t  strategy_name: 'hb' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t\tcase 'other':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tstrategy_name: 'ot' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t  }\n\t};\n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.new_instance(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tstrategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\tstrategy_id: 1,\n\t\tapikey: \"your_api_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\tsecretkey: \"your_secret_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\tpassphrase: \"your_passphrase\"+ moment().format('YYYYMMDDHHmmss'),\n\t\texchange: 'binance',\n\t\ttake_profit: 2000,\n\t\tinitial_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n        name=\"strategy_name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n        <Form.Item\n        name=\"strategy_id\"\n        label=\"Strategy Id\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        {/* <Input /> */}\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"take_profit\"\n        label=\"TakeProfit\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"initial_amount\"\n        label=\"InitialAmount\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"exchange\"\n        label=\"Exchange\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"Select a option and change input text above\"\n          onChange={this.onExchangeChange}\n          allowClear\n        >\n          <Option value=\"okex\">okex</Option>\n          <Option value=\"huobi\">huobi</Option>\n          <Option value=\"binance\">binance</Option>\n        </Select>\n      </Form.Item>\n\n        <Form.Item\n        name=\"apikey\"\n        label=\"ApiKey\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n        <Form.Item\n        name=\"secretkey\"\n        label=\"SecretKey\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      \n      <Form.Item\n        noStyle\n        shouldUpdate={(prevValues, currentValues) => prevValues.exchange !== currentValues.exchange}\n      >\n        {({ getFieldValue }) =>\n          getFieldValue('exchange') === 'okex' ? (\n            <Form.Item\n              name=\"passphrase\"\n              label=\"passphrase\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          ) : null\n        }\n      </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default StrategyUseForm;","/* \nstrategy 状态\n\n0: '未激活',\n1: '运行中',\n2: '停止',\n3: '不可用',\n4: '删除',\n5: '强制停止',\n6: '强制删除',\n*/\n\nexport default {\n    0: '未激活',\n    1: '运行中',\n    2: '停止',\n    3: '不可用',\n    4: '删除',\n    5: '强制停止',\n    6: '强制删除',\n}","import React, { useReducer } from 'react'\nconst CHANGE_LOCALE = 'CHANGE_LOCALE'\nconst CHANGE_STRATEGY = 'CHANGE_STRATEGY'\n\nconst mainContext = React.createContext()\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case CHANGE_LOCALE:\n      return { ...state, locale: action.locale || 'en' }\n    case CHANGE_STRATEGY:\n      return { ...state, strategy: action.strategy }\n    default:\n      return state\n  }\n}\n\nconst ContextProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, {\n    locale: 'zh',\n    strategy: []\n  })\n  return (\n    <mainContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </mainContext.Provider>\n  )\n}\n\nexport { reducer, mainContext, ContextProvider }\n\n","import React, { useEffect, useState } from 'react'\nimport { Table, Tooltip , Space } from 'antd';\n\nimport \"../css/CustomButtons.css\"\nimport \"../css/MainBackground.css\"\nimport { useParams } from 'react-router';\nimport { FormattedMessage } from 'react-intl'\nimport StrategyUseForm from './StrategyUseForm';\nimport statusTextMap from '../common/js/statusTextMap'\nimport { useContext} from 'react'\nimport { mainContext } from '../reducer'\n\nconst { Column } = Table;\n\nexport default function Main(props) {\n    const { account, quantContract, connected, ConnectAccount, ticketPrice } = props;\n    const c = quantContract;\n    const { referCode } = useParams();\n    const [playerRefferalCode, setPlayerRefferalCode] = useState(null);\n    const [mainLoading, setMainLoading] = useState(true);\n    const [newInstanceShowElem, setNewInstanceShowElem] = useState(true);\n    const [allStrategies, setAllStrategies] = useState(null);\n    const [allInstances, setAllInstances] = useState(null);\n\n    const { dispatch, state } = useContext(mainContext);\n    const { locale } = state\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const connectToAccount = () => {\n        if (!connected) {\n            setMainLoading(true);\n            ConnectAccount()\n        }\n    }\n\n    const chageStrategy = (strategy) => {\n        dispatch({\n            type: 'CHANGE_STRATEGY',\n            strategy\n        })\n        setTimeout(()=>{console.log(\"loadData chageStrategy state: after\", state);},300)\n    }\n\n    const loadData = async () => { \n        console.log(\"loadData\"); \n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        // console.log(\"loadData _allStrategies: forEach 1\");\n        _allStrategies.forEach(item => {\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            item.isExpand = false;\n        });\n        // console.log(\"loadData _allStrategies: forEach 2\");\n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n        // console.log(\"loadData chageStrategy _allStrategies: before\", _allStrategies);\n        chageStrategy(_allStrategies);\n        // console.log(\"loadData chageStrategy _allStrategies: after\", _allStrategies);\n        const _allInstances = await c.methods.getAllInstances().call(); \n        _allInstances.forEach(item => {\n            item.instance_id = item.instance_id.toString();\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            // item.isExpand = false;\n        });\n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(_allInstances);\n\n    }\n\n    const loadDataAuto = async () => {\n        console.log(\"loadDataAuto\");\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        _allStrategies.forEach(item => {\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            item.isExpand = false;\n        });\n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n        chageStrategy(_allStrategies)\n        const _allInstances = await c.methods.getAllInstances().call(); \n        _allInstances.forEach(item => {\n            item.instance_id = item.instance_id.toString();\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            // item.isExpand = false;\n        });\n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(_allInstances);\n    }\n    setInterval(() => {\n        if (quantContract) {\n\n            loadDataAuto();\n        }\n    }, 300000);\n\n    const new_instance = async (obj) => {\n        console.log(\"new_instance obj: \", obj);\n        const strategy_name = obj.strategy_name || \"\";\n        const strategy_id = obj.strategy_id;\n        const apikey = obj.apikey;\n        const secretkey = obj.secretkey;\n        const passphrase = obj.passphrase || \"\";\n        const exchange = obj.exchange;\n        // const take_profit = obj.take_profit.toString();\n        const take_profit = obj.take_profit;\n        const initial_amount = obj.initial_amount;\n        console.log(\"new_instance strategy_id: \", strategy_id);\n        console.log(\"new_instance apikey: \", apikey);\n        console.log(\"new_instance secretkey: \", secretkey);\n        console.log(\"new_instance passphrase: \", passphrase);\n        await c.methods.new_instance(strategy_id, initial_amount, apikey, secretkey, passphrase)\n        .send({ from: account, value: take_profit })\n        // .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const use_strategy1 = async (obj) => {\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n    }\n\n    const getStatusText = (status) => {\n        return statusTextMap[status] || '';\n    }\n    const changeExpand = (index) => {\n        allStrategies.splice(index, 1, {...allStrategies[index], isExpand: !allStrategies[index].isExpand, id: allStrategies[index].name + Date.now()})\n        // console.log({'i': allStrategies[index]})\n        console.log({'i item.isExpand: ': allStrategies[index].isExpand})\n        // console.log({'i mainLoading: ': mainLoading})\n        // setAllStrategies(allStrategies);\n        // if (allStrategies[index].isExpand) {\n        //     setMainLoading(true);\n        // } else {\n        //     setMainLoading(false);\n        // }\n        setMainLoading(!mainLoading);\n    }\n\n    return (\n        <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\n            {!connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>请连接钱包</p>\n                </div>\n            } \n            \n            {connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Running Strategies in Main</p>\n                    </div>\n                } \n            \n            {/* {allStrategies && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>   name: {allStrategies[0].name.toString()}  </p>\n                        <br></br>\n                        <p>   isExpand: {allStrategies[0].isExpand.toString()}  </p>\n                        <br></br>\n                        <p>   expand: {mainLoading.toString()}  </p>\n                    </div>\n                }  */}\n            { allStrategies && allStrategies.map((item, index) => {\n                return (\n                    <div key={item.id}>\n                        <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\"\n                                 />\n                                <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" width={160}\n                                ellipsis={ {showTitle: false}}\n                                    render={ sender => (\n                                        <Tooltip placement=\"topLeft\" title={sender}>\n                                            {sender}\n                                        </Tooltip>\n                                        )}\n                                />\n                                <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                <Column\n                                    title=\"Action\"\n                                    key=\"action\"\n                                    render={(text, record) => (\n                                        <Space size=\"middle\">\n                                        <button onClick={() => changeExpand(index)}>使用策略</button>\n                                        </Space>\n                                    )}\n                                />\n                            </Table>\n                        </div>\n                        {\n                            item.isExpand ? \n                                <div className='strategy-form' >\n                                    <br></br>\n                                    <StrategyUseForm formOption={item} new_instance={new_instance.bind(this)}/>\n                                </div>\n                            : null\n                        }\n                    </div>\n                )\n                })\n            }\n            {connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多Running</p>\n                </div>\n            } \n            {connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Stopped Strategies</p>\n                    </div>\n                } \n            {connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多Stopped</p>\n                </div>\n            } \n            {connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>All Instances: Settled</p>\n                </div>\n            } \n            {connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多 Settled Instances</p>\n                </div>\n            } \n            {connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Instances: Unsettled Instances</p>\n                        <p>未结算 Instances</p>\n                    </div>\n                } \n                {connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>更多 Unsettled Instances </p>\n                    </div>\n                } \n            \n            { allInstances && allInstances.map((item) => {\n                    return (\n                        <div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\" />\n                                        <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\" />\n                                        \n                                    </Table> \n                                </div> \n                            </div> \n                        </div> \n                    )\n                })\n            }\n            \n            {connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Will Settled Instances</p>\n                        <p>已结算 Instances</p>\n                    </div>\n                } \n        </div >\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport \"../css/Navbar.css\"\nimport { useContext} from 'react'\nimport { mainContext } from '../reducer'\nimport { FormattedMessage } from 'react-intl'\nexport default function Navbar(props) {\n\n    const { ConnectAccount, account } = props;\n\n    const { dispatch, state } = useContext(mainContext)\n    const { locale } = state\n    const changeLang = () => { // 改变状态里的 语言 进行切换\n        dispatch({\n            type: 'CHANGE_LOCALE',\n            locale: locale === 'zh' ? 'en' : 'zh'\n        })\n    }\n    return (\n        <nav className='navbar  navbar-expand-xl navbar-dark glassNav'>\n            <div className=\"container-fluid px-md-5\">\n                <Link className=\"navbar-brand mx-xl-0 mx-auto \" to=\"/\">\n                    {/* <img className=\"ml-xl-0 ml-5 img-fluid\" src=\"img/logo2.png\" alt=\"\" /> */}\n                    {/* <h3>Lottery (2 in 4)</h3> */}\n                    <h3>\n                        <FormattedMessage\n                            id=\"nav_quant\"\n                            defaultMessage=\"quant\"\n                        />\n\n                    </h3>\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"fontPara navbar-nav me-auto ms-auto mb-2 mb-lg-0 \">\n                        \n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/main\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_main\"\n                                        defaultMessage=\"Main\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/admin\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_admin\"\n                                        defaultMessage=\"Admin\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/strategist\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_strategist\"\n                                        defaultMessage=\"Strategist\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/user\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_user\"\n                                        defaultMessage=\"User\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/auditor\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_auditor\"\n                                        defaultMessage=\"Auditor\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/rule\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_rule\"\n                                        defaultMessage=\"Rule\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li> */}\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/how-to-play\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_faq\"\n                                        defaultMessage=\"FAQ\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/donation\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_donation\"\n                                        defaultMessage=\"Donation\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/contact\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_contact\"\n                                        defaultMessage=\"Contact\"\n                                    /></h4>\n                            </Link>\n                        </li> */}\n\n                    </ul>\n                    <div>\n                        <button onClick={changeLang} className=\"btn btn-lg\"> <FormattedMessage id=\"switch\" ></FormattedMessage></button>\n                    </div>\n                    <button onClick={ConnectAccount} className=\"btn btn-dark btn-lg\">{account ? `${account.substring(0, 3)}...${account.substring(account.length - 4, account.length)} ` : 'Connect'}</button>\n                </div>\n\n            </div>\n        </nav>\n    )\n}\n","/* \ninstance 状态\n\n// _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n// _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n// _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n// _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n// _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n// _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n// _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n// _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n// _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n// _instance_status == 9 set_instance_status_Settled(instance_id);\n\n1: 策略师认可用户的提交信息。\n2: 策略师中途不同意。\n3: 用户中途不同意。\n4: 策略师提交信息，请求用户确认。\n5: 用户认可策略师提交的信息。 \n6: 仲裁，认可用户正确。\n7: 仲裁，认可策略师正确。\n8: 未结算。\n9: 已经结算。\n*/\n\nexport default {\n    1: '策略师认可用户的提交信息', // UserPreConfirmed\n    2: '策略师中途不同意', // StrategistPreConfirmed\n    3: '用户中途不同意', // UserMidDisagree\n    4: '策略师提交信息，请求用户确认', // StrategistConfirmed\n    5: '用户认可策略师提交的信息', // UserConfirmed\n    6: '仲裁，认可用户正确', // ArbitrateUserWin\n    7: '仲裁，认可策略师正确', // ArbitrateStrategistWin\n    8: '未结算', // Unsettled\n    9: '已经结算', // Settled\n}","\nimport statusTextMap from './statusTextMap';\nimport instanceStatusTextMap from './instanceStatusTextMap';\n\nconst getStatusText = (status) => {\n    return statusTextMap[status] || '';\n}\nconst getInstanceStatusText = (status) => {\n    return instanceStatusTextMap[status] || '';\n}\nconst getPassphraseDefaultText = (passphrase) => {\n    return passphrase.toString() || 'your_passphrase';\n}\n\n// 格式化 allStrategies\nconst formatAllStrategies = (_allStrategies) => {\n    \n    _allStrategies.forEach(item => {\n        item.strategy_id = item.strategy_id.toString();\n        item.strategy_startup_amount = item.strategy_startup_amount.toString();\n        item.stop_loss = item.stop_loss.toString();\n        item.status = item.status.toString();\n        item.tp_rate = item.tp_rate.toString();\n        item.take_profit = item.take_profit.toString();\n        item.id = item.name + Date.now();\n\n        item.statusText = getStatusText(item.status);\n        item.isExpand = false;\n    });\n    return _allStrategies\n\n}\n\n// 格式化 allInstances\nconst formatAllInstances = (_allInstances) => {\n    \n    _allInstances.forEach(item => {\n        item.instance_id = item.instance_id.toString();\n        item.strategy_id = item.strategy_id.toString();\n        item.strategy_startup_amount = item.strategy_startup_amount.toString();\n        item.stop_loss = item.stop_loss.toString();\n        item.status = item.status.toString();\n        item.tp_rate = item.tp_rate.toString();\n        item.take_profit = item.take_profit.toString();\n        item.id = item.name + Date.now();\n\n        item.statusText = getStatusText(item.status);\n\n        item.apikey = item.apikey.toString();\n        item.secretkey = item.secretkey.toString();\n        item.passphrase = getPassphraseDefaultText(item.passphrase);\n        item.instance_status_text = getInstanceStatusText(item.instance_status);\n        // item.isExpand = false;\n        item.isExpand_StrategistPreConfirmed = false;\n        item.isExpand_StrategistMidDisagree = false;\n        item.isExpand_UserMidDisagree = false;\n        item.isExpand_StrategistConfirmed = false;\n        item.isExpand_ArbitrateUserWin = false;\n        item.isExpand_ArbitrateStrategistWin = false;\n        item.isExpand_Settled = false;\n    });\n    return _allInstances;\n\n}\n// export default formatAllStrategies;\nexport { formatAllStrategies, formatAllInstances };\n","import React, { useState } from 'react';\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nimport moment from \"moment\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass Form_StrategistPreConfirmed extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_StrategistPreConfirmed(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_StrategistMidDisagree extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_StrategistMidDisagree(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_UserMidDisagree extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_UserMidDisagree(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nclass Form_ArbitrateUserWin extends React.Component {\n  formRef = React.createRef();\n  onExchangeChange = (value) => {\n    switch (value) {\n\t\tcase 'binance':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'okex':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'ok' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'huobi':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t  strategy_name: 'hb' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t\tcase 'other':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tstrategy_name: 'ot' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t  }\n\t};\n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_ArbitrateUserWin({...values, instance_id: this.props.instance_id});\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\t// strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t// strategy_id: 1,\n\t\t// apikey: \"your_api_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\t// secretkey: \"your_secret_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\t// passphrase: \"your_passphrase\"+ moment().format('YYYYMMDDHHmmss'),\n\t\t// exchange: 'binance',\n\t\t// take_profit: 2000,\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nclass Form_ArbitrateStrategistWin extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_ArbitrateStrategistWin(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"instance_id\"\n          label=\"instance_id\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_StrategistConfirmed extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_StrategistConfirmed(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_Settled extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_Settled(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport { \n  Form_StrategistPreConfirmed, \n  Form_StrategistMidDisagree,\n  Form_UserMidDisagree,\n  Form_StrategistConfirmed, \n  Form_ArbitrateUserWin, \n  Form_ArbitrateStrategistWin, \n  Form_Settled, \n};","import React, { useEffect, useState } from 'react'\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport  { Form_StrategistConfirmed, Form_ArbitrateUserWin, Form_ArbitrateStrategistWin, Form_Settled} from '../common/js/instanceStatusHandleForm';\n\n\nconst { Column } = Table;\n\nexport default function Admin(props) {\n    const { quantContract, connected, account } = props;\n    const c = quantContract;\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allStrategiesName, setAllStrategiesName] = useState(null);\n    const [allStrategies, setAllStrategies] = useState(null);\n    // const [strategyStatus, setStrategyStatus] = useState(null);\n    const [allInstances, setAllInstances] = useState(null);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const loadData = async () => {\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(formatAllStrategies(_allStrategies));\n\n        const _allInstances = await c.methods.getAllInstances().call(); \n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(formatAllInstances(_allInstances));\n    }\n\n    // 定时自动刷新\n    const loadDataAuto = async () => {\n        // const _allStrategies = await c.methods.getAllStrategies().call(); \n        // console.log(\"loadDataAuto _allStrategies: \", _allStrategies);\n        // setAllStrategies(_allStrategies);\n        // const _allInstances = await c.methods.getAllInstancesOfUser(account).call(); \n        // console.log(\"loadData _allInstances: \", _allInstances);\n        // setAllInstances(_allInstances);\n        loadData();\n    }\n    setInterval(() => {\n        console.log(\"Date: \", Date())\n        if (quantContract) {\n            loadDataAuto();\n        }\n    }, 300000);\n\n    // start strategy handle ---------------------------------------------------------------------\n    \n    const getAllStrategiesName = async () => {\n        const _allStrategiesName = await c.methods.getAllStrategiesName().call();\n        setAllStrategiesName(_allStrategiesName);\n    }\n\n    const getAllStrategies = async () => {\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"getAllStrategies _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n    }\n\n    // const set_strategy_status_active = async (_strategy_name) => {\n    //     console.log(\"set_strategy_status_active => _strategy_name: \", _strategy_name);\n    //     await c.methods.set_strategy_status_active(_strategy_name)\n    //     .send({ from: account })\n    //     .on('confirmation', (confirmationNumber, receipt) => {\n    //         loadData();\n    //     })\n    //     .on('error', function (error, receipt) {\n    //         loadData();\n    //     });\n    // }\n\n    const set_strategy_status_active = async (id) => {\n        console.log(\"set_strategy_status_active => id: \", id);\n        // await c.methods.set_strategy_status_active(id)\n        await c.methods.set_strategy_status_x_id_status(id, 0)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const set_strategy_status_deleted = async (id) => {\n        // console.log(\"set_strategy_status_deleted => id: \", id);\n        // await c.methods.set_strategy_status_deleted(id)\n        await c.methods.set_strategy_status_x_id_status(id, 4)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const set_strategy_status_stopped_x_admin = async (id) => {\n        // console.log(\"set_strategy_status_deleted => id: \", id);\n        // await c.methods.set_strategy_status_stopped_x_admin(id)\n        await c.methods.set_strategy_status_x_id_status(id, 5)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    \n    const set_strategy_status_deleted_x_admin = async (id) => {\n        // console.log(\"set_strategy_status_deleted => id: \", id);\n        // await c.methods.set_strategy_status_deleted_x_admin(id)\n        await c.methods.set_strategy_status_x_id_status(id, 6)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const getStrategyStatus = async (_strategy_name) => {\n        console.log(\"getStrategyStatus => _strategy_name: \", _strategy_name); \n        // await c.methods.getStrategyStatus(_strategy_name).call();\n        const aStrategyStatus = await c.methods.getStrategyStatus(_strategy_name).call() \n        console.log(\"getStrategyStatus => aStrategyStatus：\", aStrategyStatus); \n        console.log(\"getStrategyStatus => end\");\n        return aStrategyStatus;\n    }\n    // start instance handle ---------------------------------------------------------------------\n    \n    // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n    // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n    // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n    // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n    // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n    // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n    // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n    // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n    // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n    // _instance_status == 9 set_instance_status_Settled(instance_id);\n\n    const set_instance_status_ArbitrateUserWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_ArbitrateUserWin final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_ArbitrateUserWin instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 6, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_ArbitrateStrategistWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        \n        console.log(\"set_instance_status_ArbitrateStrategistWin final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id); \n        console.log(\"set_instance_status_ArbitrateStrategistWin instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 7, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_Unsettled = async (obj) => {\n        const { instance_id, final_amount } = obj;\n        console.log(\"set_instance_status_Unsettled instance_id: \", instance_id, final_amount); \n        await c.methods.set_instance_status_x_id_status(instance_id, 8, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_Settled = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_Settled final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id); \n        console.log(\"set_instance_status_Settled instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 9, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    // helper 函数 -------------------------------------------------------------------\n    // const changeInstanceItemExpand_ArbitrateUserWin = (index) => {\n    const changeExpand_ArbitrateUserWin = (index) => {\n        // allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin, id: allInstances[index].name + Date.now()})\n        allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin})\n        // console.log({'i': allInstances[index]})\n        console.log({'i item.isExpand_ArbitrateUserWin: ': allInstances[index].isExpand_ArbitrateUserWin})\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_ArbitrateStrategistWin = (index) => {\n        allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateStrategistWin: !allInstances[index].isExpand_ArbitrateStrategistWin})\n        console.log({'i item.isExpand_ArbitrateStrategistWin: ': allInstances[index].isExpand_ArbitrateStrategistWin})\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_Settled = (index) => {\n        allInstances.splice(index, 1, {...allInstances[index], isExpand_Settled: !allInstances[index].isExpand_Settled})\n        console.log({'i item.isExpand_Settled: ': allInstances[index].isExpand_Settled})\n        setMainLoading(!mainLoading);\n    }\n\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n    return (\n        <div>\n            <div className=\"row mt-4\"> \n                {!connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>请连接钱包</p>\n                    </div>\n                }\n                \n                {/* \n                // 只取策略名称\n                <div className={buttonColClassName}>\n                    <button onClick={getAllStrategiesName} className={buttonClassName}>Strategy List</button>\n                </div> \n                {\n                    console.log(\"-----------------------------\")\n                }\n                { allStrategiesName && allStrategiesName.map((item) => {\n                        const astatus = getStrategyStatus(item);\n                        astatus.then((res)=>{\n                            console.log(res,\"123\")\n                        })\n                        console.log(\" astatus\", astatus);\n                        // console.log(\" astatus end\") ;\n                        return (\n                            <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                <p>{item}</p>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <button onClick={() => { getStrategyStatus(item) }} >A</button>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <button onClick={() => { set_strategy_status_active(item) }} >Active</button>\n                            </div>\n                        )\n                    })\n                } \n                */}\n\n                {/*                 \n                <div className={buttonColClassName}>\n                    <button onClick={getAllStrategies} className={buttonClassName}>All Strategy List</button>\n                </div>\n                \n                {\n                    console.log(\" allStrategies ----------------------------- \", allStrategies)\n                }\n                 */}\n                {connected && \n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Pending Strategies</p>\n                        </div>\n                    } \n                { allStrategies && allStrategies.map((item) => {\n                        return (\n                            // <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                \n                            //     <p>{item.strategy_id.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.name.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.sender.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.strategy_startup_amount.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.take_profit.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.stop_loss.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.tp_rate.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.exchange.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.status}</p>\n                                \n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_active(item.strategy_id) }} >Active</button>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_deleted(item.strategy_id) }} >Delete</button>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_stopped_x_admin(item.strategy_id) }} >Force Stop</button>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_deleted_x_admin(item.strategy_id) }} >Force Delete</button>\n\n                            // </div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\"  width={160} ellipsis={true}/>\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column\n                                            title=\"Action\"\n                                            key=\"action\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_active(item.strategy_id) }>激活</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"Delete\"\n                                            key=\"delete\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_deleted(item.strategy_id) }>删除</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"Force Stop\"\n                                            key=\"ForceStop\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_stopped_x_admin(item.strategy_id) }>强制删除</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"Force Delete\"\n                                            key=\"ForceDelete\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_deleted_x_admin(item.strategy_id) }>强制删除</button>\n                                                </Space>\n                                            )}\n                                        /> \n                                    </Table>\n                                </div> \n                            </div>\n                        )\n                    })\n                }\n                {connected && \n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Running Strategies in Admin</p>\n                        </div>\n                    } \n                \n                {connected && \n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Stopped Strategies</p>\n                        </div>\n                    } \n                    \n                {connected && \n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Unsettled Instances</p>\n                            <p>未结算 Instances</p>\n                        </div>\n                    } \n                    \n                { allInstances && allInstances.map((item, index) => {\n                    return (\n                        // <div>\n                        //     <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                \n                        //         <p>{item.instance_id.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.strategy_id.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.name.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.sender.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.strategy_startup_amount.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.take_profit.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.stop_loss.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.tp_rate.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.exchange.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.status}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.status}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.user_address}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.apikey}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.secretkey}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.passphrase || \"your_passphrase\"}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_ArbitrateUserWin(item.instance_id) }} >ArbitrateUserWin 仲裁User对</button>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_ArbitrateStrategistWin(item.instance_id) }} >ArbitrateStrategistWin 仲裁Strategist对</button>\n                        //         {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_Unsettled(item.instance_id) }} >Unsettled 未结算</button> */}\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_Settled(item.instance_id) }} >Settled 已经结算</button>\n                                 \n                        //     </div> \n                        // </div>\n                        <div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\"  width={160} ellipsis={true}/>\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\"  width={160} ellipsis={true}/>\n                                        <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\"  width={160} ellipsis={true}/>\n                                        <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\"  width={160} ellipsis={true}/>\n                                        <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                                        <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" />\n                                        {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                                        <Column\n                                            title=\"ArbitrateUserWin\"\n                                            key=\"arbitrateUserWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_ArbitrateUserWin(item.instance_id) }>仲裁User对</button> */}\n                                                <button onClick={() => changeExpand_ArbitrateUserWin(index) }>仲裁User对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"ArbitrateStrategistWin\"\n                                            key=\"arbitrateStrategistWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_ArbitrateStrategistWin(item.instance_id) }>仲裁Strategist对</button> */}\n                                                <button onClick={() => changeExpand_ArbitrateStrategistWin(index) }>仲裁Strategist对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        {/* <Column\n                                            title=\"Unsettled\"\n                                            key=\"Unsettled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_instance_status_Unsettled(item.instance_id) }>未结算</button>\n                                                </Space>\n                                            )}\n                                        /> */}\n                                        <Column\n                                            title=\"Settled\"\n                                            key=\"Settled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_Settled(item.instance_id) }>已经结算</button> */}\n                                                <button onClick={() => changeExpand_Settled(index) }>已经结算</button>\n                                                </Space>\n                                            )}\n                                        /> \n                                    </Table> \n                                </div> \n                                {\n                                    item.isExpand_ArbitrateUserWin ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateUserWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateUserWin instance_id={item.instance_id} set_instance_status_ArbitrateUserWin={set_instance_status_ArbitrateUserWin.bind(this)}/>\n                                            {/* <Form>\n                                                <Form.Item\n                                                    name=\"final_amount\"\n                                                    label=\"Final Amount\"\n                                                    rules={[\n                                                    {\n                                                        required: true,\n                                                    },\n                                                    ]}\n                                                >\n                                                    <InputNumber />\n                                                </Form.Item> \n                                                <Form.Item {...tailLayout}>\n                                                    <Button type=\"primary\" htmlType=\"submit\">\n                                                    Submit\n                                                    </Button>\n                                                    <Button htmlType=\"button\" onClick={this.onReset}>\n                                                    Reset\n                                                    </Button> \n                                                </Form.Item>\n                                            </Form> */}\n                                        </div>\n                                    : null\n                                }\n                                {\n                                    item.isExpand_ArbitrateStrategistWin ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateStrategistWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateStrategistWin set_instance_status_ArbitrateStrategistWin={set_instance_status_ArbitrateStrategistWin.bind(this)}/>\n                                        </div>\n                                    : null\n                                } \n                                {\n                                    item.isExpand_Settled ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_Settled  {item.instance_id}\n                                            <br></br>\n                                            <Form_Settled set_instance_status_Settled={set_instance_status_Settled.bind(this)}/>\n                                        </div>\n                                    : null\n                                }\n                            </div> \n                        </div> \n                    )\n                    })\n                }\n                {connected && \n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Will Settled Instances</p>\n                            <p>已结算 Instances</p>\n                        </div>\n                    } \n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport { Form_StrategistConfirmed, Form_ArbitrateUserWin, Form_ArbitrateStrategistWin, Form_Settled } from '../common/js/instanceStatusHandleForm';\n\nconst { Column } = Table;\n\nexport default function Auditor(props) {\n    const { quantContract, connected, account } = props;\n    const c = quantContract;\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allInstances, setAllInstances] = useState(null);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const loadData = async () => {\n        const _allInstances = await c.methods.getAllInstances().call();\n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(formatAllInstances(_allInstances));\n    }\n\n    // 定时自动刷新\n    const loadDataAuto = async () => {\n        loadData();\n    }\n    setInterval(() => {\n        console.log(\"Date: \", Date())\n        if (quantContract) {\n            loadDataAuto();\n        }\n    }, 300000);\n\n    // start strategy handle ---------------------------------------------------------------------\n\n\n    // start instance handle ---------------------------------------------------------------------\n\n    // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n    // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n    // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n    // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n    // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n    // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n    // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n    // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n    // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n    // _instance_status == 9 set_instance_status_Settled(instance_id);\n\n    const set_instance_status_ArbitrateUserWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_ArbitrateUserWin final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_ArbitrateUserWin instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 6, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_ArbitrateStrategistWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_ArbitrateStrategistWin final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_ArbitrateStrategistWin instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 7, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_Unsettled = async (obj) => {\n        const { instance_id, final_amount } = obj;\n        console.log(\"set_instance_status_Unsettled instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 8, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_Settled = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_Settled final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_Settled instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 9, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n\n    // helper 函数 -------------------------------------------------------------------\n    // const changeInstanceItemExpand_ArbitrateUserWin = (index) => {\n    const changeExpand_ArbitrateUserWin = (index) => {\n        // allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin, id: allInstances[index].name + Date.now()})\n        allInstances.splice(index, 1, { ...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin })\n        // console.log({'i': allInstances[index]})\n        console.log({ 'i item.isExpand_ArbitrateUserWin: ': allInstances[index].isExpand_ArbitrateUserWin })\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_ArbitrateStrategistWin = (index) => {\n        allInstances.splice(index, 1, { ...allInstances[index], isExpand_ArbitrateStrategistWin: !allInstances[index].isExpand_ArbitrateStrategistWin })\n        console.log({ 'i item.isExpand_ArbitrateStrategistWin: ': allInstances[index].isExpand_ArbitrateStrategistWin })\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_Settled = (index) => {\n        allInstances.splice(index, 1, { ...allInstances[index], isExpand_Settled: !allInstances[index].isExpand_Settled })\n        console.log({ 'i item.isExpand_Settled: ': allInstances[index].isExpand_Settled })\n        setMainLoading(!mainLoading);\n    }\n\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n    return (\n        <div>\n            <div className=\"row mt-4\">\n                {!connected &&\n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>请连接钱包</p>\n                    </div>\n                }\n\n                {connected &&\n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Unsettled Instances</p>\n                        <p>未结算 Instances</p>\n                    </div>\n                }\n\n                {allInstances && allInstances.map((item, index) => {\n                    return (\n                        <div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" width={160} ellipsis={true} />\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\" />\n                                        <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\" />\n                                        <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\" />\n                                        <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                                        <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" />\n                                        {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                                        <Column\n                                            title=\"ArbitrateUserWin\"\n                                            key=\"arbitrateUserWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                    {/* <button onClick={() => set_instance_status_ArbitrateUserWin(item.instance_id) }>仲裁User对</button> */}\n                                                    <button onClick={() => changeExpand_ArbitrateUserWin(index)}>仲裁User对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"ArbitrateStrategistWin\"\n                                            key=\"arbitrateStrategistWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                    {/* <button onClick={() => set_instance_status_ArbitrateStrategistWin(item.instance_id) }>仲裁Strategist对</button> */}\n                                                    <button onClick={() => changeExpand_ArbitrateStrategistWin(index)}>仲裁Strategist对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        {/* <Column\n                                            title=\"Unsettled\"\n                                            key=\"Unsettled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_instance_status_Unsettled(item.instance_id) }>未结算</button>\n                                                </Space>\n                                            )}\n                                        /> */}\n                                        <Column\n                                            title=\"Settled\"\n                                            key=\"Settled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                    {/* <button onClick={() => set_instance_status_Settled(item.instance_id) }>已经结算</button> */}\n                                                    <button onClick={() => changeExpand_Settled(index)}>已经结算</button>\n                                                </Space>\n                                            )}\n                                        />\n                                    </Table>\n                                </div>\n                                {\n                                    item.isExpand_ArbitrateUserWin ?\n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateUserWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateUserWin set_instance_status_ArbitrateUserWin={set_instance_status_ArbitrateUserWin.bind(this)} />\n                                        </div>\n                                        : null\n                                }\n                                {\n                                    item.isExpand_ArbitrateStrategistWin ?\n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateStrategistWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateStrategistWin set_instance_status_ArbitrateStrategistWin={set_instance_status_ArbitrateStrategistWin.bind(this)} />\n                                        </div>\n                                        : null\n                                }\n                                {\n                                    item.isExpand_Settled ?\n                                        <div className='strategy-form' >\n                                            set_instance_status_Settled  {item.instance_id}\n                                            <br></br>\n                                            <Form_Settled set_instance_status_Settled={set_instance_status_Settled.bind(this)} />\n                                        </div>\n                                        : null\n                                }\n                            </div>\n                        </div>\n                    )\n                })\n                }\n                {connected &&\n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Will Settled Instances</p>\n                        <p>已结算 Instances</p>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nimport moment from \"moment\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass StrategyNewForm extends React.Component {\n  formRef = React.createRef();\n  onExchangeChange = (value) => {\n    switch (value) {\n\t\tcase 'binance':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'okex':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'ok' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'huobi':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t  strategy_name: 'hb' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t\tcase 'other':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tstrategy_name: 'ot' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t  }\n\t};\n  onFinish = (values) => {\n    console.log(values);\n\tthis.props.newStrategy(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tstrategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\tstartup_amount: 10000,\n\t\ttake_profit: 2000,\n\t\ttp_rate: 30,\n\t\tstop_loss: 1000,\n\t\tsl_rate: 40,\n\t\texchange: 'binance',\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n        name=\"strategy_name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"startup_amount\"\n        label=\"Startup Amount\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"take_profit\"\n        label=\"TakeProfit\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"tp_rate\"\n        label=\"TakeProfitRate\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"stop_loss\"\n        label=\"StopLoss\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"sl_rate\"\n        label=\"StopLossRate\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"exchange\"\n        label=\"Exchange\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"Select a option and change input text above\"\n          onChange={this.onExchangeChange}\n          allowClear\n        >\n          <Option value=\"okex\">okex</Option>\n          <Option value=\"huobi\">huobi</Option>\n          <Option value=\"binance\">binance</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        noStyle\n        shouldUpdate={(prevValues, currentValues) => prevValues.exchange !== currentValues.exchange}\n      >\n        {({ getFieldValue }) =>\n          getFieldValue('exchange') === 'okex' ? (\n            <Form.Item\n              name=\"passphrase\"\n              label=\"passphrase\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          ) : null\n        }\n      </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default StrategyNewForm;","import React, { useEffect, useState } from 'react'\n// import { Modal, Button } from 'antd';\n// import BigNumber from \"bignumber.js\";\n// import { Form, Input, Checkbox } from 'antd';\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport { Form_StrategistPreConfirmed, Form_StrategistMidDisagree, Form_StrategistConfirmed } from '../common/js/instanceStatusHandleForm';\nimport StrategyNewForm from './StrategyNewForm';\n\nconst { Column } = Table;\n\nexport default function Admin(props) {\n  const { quantContract, connected, account } = props;\n  const c = quantContract;\n  const [mainLoading, setMainLoading] = useState(true);\n  const [allStrategiesName, setAllStrategiesName] = useState(null);\n  const [allStrategies, setAllStrategies] = useState(null);\n  const [myCreatedStrategies, setMyCreatedStrategies] = useState([]);\n  const [allInstances, setAllInstances] = useState(null);\n  // const [allInstancesOfStrategist, setAllInstancesOfStrategist] = useState(null);\n\n  useEffect(() => {\n    if (connected) {\n      loadData();\n    }\n  }, [quantContract]);\n\n  const loadData = async () => {\n    // const _allStrategies = await c.methods.getAllStrategies().call(); \n    // console.log(\"loadData _allStrategies: \", _allStrategies);\n    // setAllStrategies(_allStrategies);\n    const _myCreatedStrategies = await c.methods.get_all_StrategyInfo_x_strategiest(account).call();\n    console.log(\"loadData get_all_StrategyInfo_x_strategiest _myCreatedStrategies: \", _myCreatedStrategies);\n    // setMyCreatedStrategies(_myCreatedStrategies);\n    setMyCreatedStrategies(formatAllStrategies(_myCreatedStrategies));\n\n    const _allInstances = await c.methods.getAllInstances().call();\n    console.log(\"loadData _allInstances: \", _allInstances);\n    // setAllInstances(_allInstances);\n    setAllInstances(formatAllInstances(_allInstances));\n\n  }\n\n  // 定时自动刷新\n  const loadDataAuto = async () => {\n    loadData();\n  }\n  setInterval(() => {\n    console.log(\"Date: \", Date())\n    if (quantContract) {\n      loadDataAuto();\n    }\n  }, 300000);\n\n  // start strategy handle ---------------------------------------------------------------------\n\n  const get_all_StrategyInfo_x_strategiest = async (strategist_address) => {\n    console.log(\"get_all_StrategyInfo_x_strategiest => strategist_address: \", strategist_address);\n    const _myCreatedStrategies = await c.methods.get_all_StrategyInfo_x_strategiest(strategist_address).call();\n    console.log(\"getAllStrategies _myCreatedStrategies: \", _myCreatedStrategies);\n    setMyCreatedStrategies(_myCreatedStrategies);\n  }\n\n  const set_strategy_status_running = async (id) => {\n    console.log(\"set_strategy_status_running => id: \", id);\n    // await c.methods.set_strategy_status_running(id)\n    await c.methods.set_strategy_status_x_id_status(id, 1)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  const set_strategy_status_stop = async (id) => {\n    console.log(\"set_strategy_status_stop => id: \", id);\n    // await c.methods.set_strategy_status_stop(id)\n    await c.methods.set_strategy_status_x_id_status(id, 2)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  const set_strategy_status_unavailable = async (id) => {\n    console.log(\"set_strategy_status_unavailable => id: \", id);\n    // await c.methods.set_strategy_status_unavailable(id)\n    await c.methods.set_strategy_status_x_id_status(id, 3)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  // start instance handle ---------------------------------------------------------------------\n\n  // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n  // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n  // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n  // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n  // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n  // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n  // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n  // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n  // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n  // _instance_status == 9 set_instance_status_Settled(instance_id);\n\n  const set_instance_status_StrategistPreConfirmed = async (obj) => {\n    // const { final_amount } = obj;\n    const final_amount = parseInt(obj.final_amount);\n    console.log(\"set_instance_status_StrategistPreConfirmed final_amount: \", final_amount);\n    const instance_id = parseInt(obj.instance_id);\n    console.log(\"set_instance_status_StrategistPreConfirmed instance_id: \", instance_id);\n    await c.methods.set_instance_status_x_id_status(instance_id, 1, final_amount)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n  const set_instance_status_StrategistMidDisagree = async (obj) => {\n    // const { final_amount } = obj;\n    const final_amount = parseInt(obj.final_amount);\n    console.log(\"set_instance_status_StrategistMidDisagree final_amount: \", final_amount);\n    const instance_id = parseInt(obj.instance_id);\n    console.log(\"set_instance_status_StrategistMidDisagree instance_id: \", instance_id);\n    await c.methods.set_instance_status_x_id_status(instance_id, 3, final_amount)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n  const set_instance_status_StrategistConfirmed = async (obj) => {\n    // const { final_amount } = obj;\n    const final_amount = parseInt(obj.final_amount);\n    console.log(\"set_instance_status_StrategistConfirmed final_amount: \", final_amount);\n    const instance_id = parseInt(obj.instance_id);\n    console.log(\"set_instance_status_StrategistConfirmed final_amount: \", final_amount);\n    await c.methods.set_instance_status_x_id_status(instance_id, 4, final_amount)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  // helper 函数 -------------------------------------------------------------------\n  const changeExpand_StrategistPreConfirmed = (index) => {\n    allInstances.splice(index, 1, { ...allInstances[index], isExpand_StrategistPreConfirmed: !allInstances[index].isExpand_StrategistPreConfirmed })\n    console.log({ 'i item.isExpand_StrategistPreConfirmed: ': allInstances[index].isExpand_StrategistPreConfirmed })\n    setMainLoading(!mainLoading);\n  }\n  const changeExpand_StrategistMidDisagree = (index) => {\n    allInstances.splice(index, 1, { ...allInstances[index], isExpand_StrategistMidDisagree: !allInstances[index].isExpand_StrategistMidDisagree })\n    console.log({ 'i item.isExpand_StrategistMidDisagree: ': allInstances[index].isExpand_StrategistMidDisagree })\n    setMainLoading(!mainLoading);\n  }\n  const changeExpand_StrategistConfirmed = (index) => {\n    allInstances.splice(index, 1, { ...allInstances[index], isExpand_StrategistConfirmed: !allInstances[index].isExpand_StrategistConfirmed })\n    console.log({ 'i item.isExpand_StrategistConfirmed: ': allInstances[index].isExpand_StrategistConfirmed })\n    setMainLoading(!mainLoading);\n  }\n  // test --------------------------------------------------\n  const bignubmer_to_string = (bn) => {\n    console.log(\"bignubmer_to_string bn: \", bn)\n    // let x = 1; // new BigNumber(123.4567);\n    // let st =  x.toString();\n    console.log(bn.toString())\n    return bn.toString();\n  }\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const new_strategy = async (obj) => {\n    console.log(\"new_strategy obj: \", obj);\n    const strategy_name = obj.strategy_name;\n    const startup_amount = obj.startup_amount;\n    const take_profit = obj.take_profit;\n    const tp_rate = obj.tp_rate;\n    const stop_loss = obj.stop_loss;\n    const sl_rate = obj.sl_rate;\n    const exchange = obj.exchange;\n    await c.methods.new_strategy(strategy_name, startup_amount, take_profit, tp_rate, stop_loss, sl_rate, exchange)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n  // new_strategy(string memory _strategy_name, uint256 _strategy_startup_amount, uint256 _take_profit, uint256 _tp_rate, string memory _exchange) public payable returns (bool result) {\n\n  const getStrategyStatus = async (_strategy_name) => {\n    console.log(\"getStrategyStatus => _strategy_name: \", _strategy_name);\n    // await c.methods.getStrategyStatus(_strategy_name).call();\n    const aStrategyStatus = await c.methods.getStrategyStatus(_strategy_name).call()\n    console.log(\"getStrategyStatus => aStrategyStatus：\", aStrategyStatus);\n    console.log(\"getStrategyStatus => end\");\n    return aStrategyStatus;\n  }\n\n  const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n  const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n  return (\n    <div>\n      <div className=\"row mt-4\">\n        {!connected &&\n          <div className=\"d-flex justify-content-center align-items-center \">\n            <p>请连接钱包</p>\n          </div>\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 &&\n          <div className=\"d-flex justify-content-center align-items-center \">\n            {/* <p>我创建的</p> */}\n            <p>我创建的策略列表</p>\n          </div>\n        }\n        {\n          console.log(\" myCreatedStrategies ----------------------------- \", myCreatedStrategies)\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 && myCreatedStrategies.map((item) => {\n          console.log(\" item ----------------------------- \", item)\n\n          return (\n            // <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n            //   <p>{item.strategy_id.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.name.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.sender.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.strategy_startup_amount.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.take_profit.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.tp_rate.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.stop_loss.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.sl_rate.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.exchange.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.status}</p>\n            //    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <button onClick={() => { set_strategy_status_running(item.strategy_id) }} >Run</button>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <button onClick={() => { set_strategy_status_stop(item.strategy_id) }} >Stop</button>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <button onClick={() => { set_strategy_status_unavailable(item.strategy_id) }} >Unavailable</button>\n            // </div>\n            <div key={item.id}>\n            <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                    <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                    <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                    <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                    <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                    <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                    <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                    <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                    <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                    <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                    <Column\n                        title=\"Run\"\n                        key=\"Run\"\n                        render={(text, record) => (\n                            <Space size=\"middle\">\n                            <button onClick={() => set_strategy_status_running(item.strategy_id) }>运行</button>\n                            </Space>\n                        )}\n                    />\n                    <Column\n                        title=\"Stop\"\n                        key=\"Stop\"\n                        render={(text, record) => (\n                            <Space size=\"middle\">\n                            <button onClick={() => set_strategy_status_stop(item.strategy_id) }>停止</button>\n                            </Space>\n                        )}\n                    />\n                    <Column\n                        title=\"Unavailable\"\n                        key=\"Unavailable\"\n                        render={(text, record) => (\n                            <Space size=\"middle\">\n                            <button onClick={() => set_strategy_status_unavailable(item.strategy_id) }>不可用</button>\n                            </Space>\n                        )}\n                    /> \n                </Table>\n            </div> \n        </div>\n          )\n        })\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 &&\n          <div className=\"d-flex justify-content-center align-items-center \">\n            {/* <p>我创建的</p> */}\n            <p>我的 客户/实例 列表</p>\n          </div>\n        }\n\n        {/* {allInstances && allInstances.map((item) => {\n          if (item.sender == account) {\n            return (\n              <div>\n                <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n\n                  <p>{item.instance_id.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.strategy_id.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.name.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.sender.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.strategy_startup_amount.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.take_profit.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.stop_loss.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.tp_rate.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.exchange.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.status}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.status}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.user_address}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.apikey}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button onClick={() => { set_instance_status_StrategistPreConfirmed(item.instance_id, 10010) }} >StrategistPreConfirmed 参与时确认</button>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button onClick={() => { set_instance_status_StrategistMidDisagree(item.instance_id, 10010) }} >StrategistMidDisagree 中途不同意</button>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button onClick={() => { set_instance_status_StrategistConfirmed(item.instance_id, 10010) }} >StrategistConfirmed 策略停止运行确认</button>\n\n\n                </div> \n              </div>\n            )\n          }\n        })\n        } */}\n        { myCreatedStrategies && myCreatedStrategies.length > 0 && allInstances && allInstances.map((item, index) => {\n          if (item.sender == account) {\n            return (\n              <div>\n                <div key={item.id}>\n                  <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                      <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                      <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                      <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                      <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                      <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                      <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                      <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                      <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                      <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                      <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                      <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\" />\n                      <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\" />\n                      <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\" />\n                      <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                      <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" />\n                      {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                      <Column\n                        title=\"StrategistPreConfirmed\"\n                        key=\"StrategistPreConfirmed\"\n                        render={(text, record) => (\n                          <Space size=\"middle\">\n                            {/* <button onClick={() => set_instance_status_StrategistPreConfirmed(item.instance_id) }>仲裁User对</button> */}\n                            <button onClick={() => changeExpand_StrategistPreConfirmed(index)}>实例运行前确认</button>\n                          </Space>\n                        )}\n                      />\n                      <Column\n                        title=\"StrategistMidDisagree\"\n                        key=\"StrategistMidDisagree\"\n                        render={(text, record) => (\n                          <Space size=\"middle\">\n                            {/* <button onClick={() => set_instance_status_StrategistMidDisagree(item.instance_id) }>仲裁Strategist对</button> */}\n                            <button onClick={() => changeExpand_StrategistMidDisagree(index)}>策略师不同意</button>\n                          </Space>\n                        )}\n                      />\n                      <Column\n                        title=\"StrategistConfirmed\"\n                        key=\"StrategistConfirmed\"\n                        render={(text, record) => (\n                          <Space size=\"middle\">\n                            {/* <button onClick={() => set_instance_status_StrategistConfirmed(item.instance_id) }>已经结算</button> */}\n                            <button onClick={() => changeExpand_StrategistConfirmed(index)}>实例运行后确认</button>\n                          </Space>\n                        )}\n                      />\n                    </Table>\n                  </div>\n                  {\n                    item.isExpand_StrategistPreConfirmed ?\n                      <div className='strategy-form' >\n                        set_instance_status_StrategistPreConfirmed  {item.instance_id}\n                        <br></br>\n                        <Form_StrategistPreConfirmed set_instance_status_StrategistPreConfirmed={set_instance_status_StrategistPreConfirmed.bind(this)} />\n                      </div>\n                      : null\n                  }\n                  {\n                    item.isExpand_StrategistMidDisagree ?\n                      <div className='strategy-form' >\n                        set_instance_status_StrategistMidDisagree  {item.instance_id}\n                        <br></br>\n                        <Form_StrategistMidDisagree set_instance_status_StrategistMidDisagree={set_instance_status_StrategistMidDisagree.bind(this)} />\n                      </div>\n                      : null\n                  }\n                  {\n                    item.isExpand_StrategistConfirmed ?\n                      <div className='strategy-form' >\n                        set_instance_status_StrategistConfirmed  {item.instance_id}\n                        <br></br>\n                        <Form_StrategistConfirmed set_instance_status_StrategistConfirmed={set_instance_status_StrategistConfirmed.bind(this)} />\n                      </div>\n                      : null\n                  }\n                </div>\n              </div>\n            )\n          }\n        })\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length == 0 &&\n          <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n            <p>成为策略师？</p>\n          </div>\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 &&\n          <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n            <p>添加一个新策略！</p>\n            <div> \n              <StrategyNewForm newStrategy={new_strategy.bind(this)} />\n            </div>\n          </div>\n        }  \n\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport \"../css/CustomButtons.css\"\nimport \"../css/MainBackground.css\"\nimport { useParams } from 'react-router';\nimport { FormattedMessage } from 'react-intl'\nimport StrategyUseForm from './StrategyUseForm';\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport  { Form_UserMidDisagree } from '../common/js/instanceStatusHandleForm';\n\nconst { Column } = Table;\n\nexport default function Main(props) {\n    const { account, quantContract, connected, ConnectAccount, ticketPrice } = props;\n    const c = quantContract;\n    const { referCode } = useParams();\n    const [playerRefferalCode, setPlayerRefferalCode] = useState(null);\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allStrategiesOfUser, setAllStrategiesOfUser] = useState(null);\n    const [allInstancesOfUser, setAllInstancesOfUser] = useState(null);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const connectToAccount = () => {\n        if (!connected) {\n            setMainLoading(true);\n            ConnectAccount()\n        }\n    }\n\n    const loadData = async () => { \n        console.log(\"loadData\"); \n        const _allStrategiesOfUser = await c.methods.getAllStrategiesOfUser(account).call(); \n        console.log(\"loadData _allStrategiesOfUser: \", _allStrategiesOfUser);\n        setAllStrategiesOfUser(formatAllStrategies(_allStrategiesOfUser));\n        const _allInstancesOfUser = await c.methods.getAllInstancesOfUser(account).call(); \n        console.log(\"loadData _allInstancesOfUser: \", _allInstancesOfUser);\n        setAllInstancesOfUser(formatAllInstances(_allInstancesOfUser));\n\n    }\n\n    const loadDataAuto = async () => {\n        console.log(\"loadDataAuto\");\n        loadData();\n    }\n    setInterval(() => {\n        if (quantContract) {\n\n            loadDataAuto();\n        }\n    }, 300000);\n\n    // start instance handle ---------------------------------------------------------------------\n    \n\n    const new_instance = async (obj) => {\n        console.log(\"new_instance obj: \", obj);\n        const strategy_name = obj.strategy_name || \"\";\n        const strategy_id = obj.strategy_id;\n        const apikey = obj.apikey;\n        const secretkey = obj.secretkey;\n        const passphrase = obj.passphrase || \"\";\n        const exchange = obj.exchange;\n        // const take_profit = obj.take_profit.toString();\n        const take_profit = obj.take_profit;\n        const initial_amount = obj.initial_amount;\n        console.log(\"new_instance strategy_id: \", strategy_id);\n        console.log(\"new_instance apikey: \", apikey);\n        console.log(\"new_instance secretkey: \", secretkey);\n        console.log(\"new_instance passphrase: \", passphrase);\n        await c.methods.new_instance(strategy_id, initial_amount, apikey, secretkey, passphrase)\n        .send({ from: account, value: take_profit })\n        // .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n    // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n    // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n    // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n    // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n    // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n    // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n    // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n    // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n    // _instance_status == 9 set_instance_status_Settled(instance_id);\n    const set_instance_status_UserPreConfirmed = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_UserPreConfirmed final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_UserPreConfirmed instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 0, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const set_instance_status_UserMidDisagree = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_UserMidDisagree final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_UserMidDisagree instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 2, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_UserConfirmed = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = 0;\n        console.log(\"set_instance_status_UserConfirmed final_amount: \", final_amount); \n        console.log(\"set_instance_status_UserConfirmed instance_id: \", instance_id); \n        // const instance_id = new Number(obj.instance_id);\n        // const instance_id = Number(obj.instance_id);\n        const instance_id = parseInt(obj.instance_id);\n        // const instance_id = 1;\n        console.log(\"set_instance_status_UserConfirmed instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 5, 0)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const changeExpand = (index) => {\n        allStrategiesOfUser.splice(index, 1, {...allStrategiesOfUser[index], isExpand: !allStrategiesOfUser[index].isExpand, id: allStrategiesOfUser[index].name + Date.now()})\n        console.log({'i item.isExpand: ': allStrategiesOfUser[index].isExpand}) \n        setMainLoading(!mainLoading);\n    }\n\n    const changeExpand_UserMidDisagree = (index) => {\n        allInstancesOfUser.splice(index, 1, {...allInstancesOfUser[index], isExpand_UserMidDisagree: !allInstancesOfUser[index].isExpand_UserMidDisagree})\n        console.log({'i item.isExpand_UserMidDisagree: ': allInstancesOfUser[index].isExpand_UserMidDisagree})\n        setMainLoading(!mainLoading);\n    }\n\n    const use_strategy1 = async (obj) => {\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n    }\n\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n    return (\n        // <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\n        <div className=\"row mt-4\"> \n            {!connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>请连接钱包</p>\n                </div>\n            } \n            \n            {connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Strategies</p>\n                    </div>\n                }\n            \n            {/* { allStrategiesOfUser && allStrategiesOfUser.map((item) => {\n                return (\n                    <div>\n                        <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            \n                            <p>{item.strategy_id.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.name.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.sender.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.strategy_startup_amount.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.take_profit.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.stop_loss.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.tp_rate.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.exchange.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.status}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button>再次使用</button>\n                        </div>\n                    \n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            \n                        </div>\n                        <div>\n                            <br></br>\n                            <StrategyUseForm new_instance={new_instance.bind(this)}/>\n                        </div>\n                    </div> \n                )\n                })\n            } */}\n            { allStrategiesOfUser && allStrategiesOfUser.map((item, index) => {\n                return (\n                    <div key={item.id}>\n                        <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                                <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                <Column\n                                    title=\"Action\"\n                                    key=\"action\"\n                                    render={(text, record) => (\n                                        <Space size=\"middle\">\n                                        <button onClick={() => changeExpand(index)}>使用策略</button>\n                                        </Space>\n                                    )}\n                                />\n                            </Table>\n                        </div>\n                        {\n                            item.isExpand ? \n                                <div className='strategy-form' >\n                                    <br></br>\n                                    <StrategyUseForm new_instance={new_instance.bind(this)}/>\n                                </div>\n                            : null\n                        }\n                    </div>\n                )\n                })\n            }\n            {connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>All Instances</p>\n                </div>\n            } \n            \n            { allInstancesOfUser && allInstancesOfUser.map((item, index) => {\n                return (\n                    <div>\n                        {/* <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            \n                            <p>{item.instance_id.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.strategy_id.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.name.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.sender.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.strategy_startup_amount.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.take_profit.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.stop_loss.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.tp_rate.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.exchange.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.status}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.status}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.user_address}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.apikey}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button onClick={() => { set_instance_status_UserMidDisagree(item.instance_id) }} >UserMidDisagree 中途不同意</button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button onClick={() => { set_instance_status_UserConfirmed(item.instance_id) }} >UserConfirmed 策略停止运行确认</button>\n                            \n\n                        </div>  */}\n\n                        <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\" />\n                                        <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\" />\n                                        <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\" />\n                                        <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                                        <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" />\n                                        {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                                        <Column\n                                            title=\"UserMidDisagree\"\n                                            key=\"UserMidDisagree\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_UserMidDisagree(item.instance_id) }>User不同意</button> */}\n                                                <button onClick={() => changeExpand_UserMidDisagree(index) }>User不同意</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"UserConfirmed\"\n                                            key=\"UserConfirmed\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_instance_status_UserConfirmed({instance_id:item.instance_id}) }>策略停止运行，确认</button>\n                                                </Space>\n                                            )}\n                                        /> \n                                    </Table> \n                                </div>\n                                {\n                                    item.isExpand_UserMidDisagree ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_UserMidDisagree  {item.instance_id}\n                                            <br></br>\n                                            <Form_UserMidDisagree set_instance_status_UserMidDisagree={set_instance_status_UserMidDisagree.bind(this)}/>\n                                        </div>\n                                    : null\n                                }\n                            </div> \n                    </div>\n                )\n                })\n            }\n        </div >\n    )\n}\n","import React, { useEffect, useState } from 'react'\n\nexport default function Banner(props) {\n    \n    return (\n        <div className=\"banner-img-bg mx-md-5 text-light  py-4 \">\n            <div className=\"d-md-flex align-items-center justify-content-between text-center\">\n                    <div className=\"glow-div2 glassBg-box-timer text-center\">\n                        <h2 className=\"my-4\">Play Game</h2>\n                    </div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nexport default function Howtoplay() {\n    return (\n        <div className=\"text-light glassBg-box p-5 m-5\">\n            <h1><FormattedMessage id=\"faq_title\" defaultMessage=\"FAQ\"/></h1>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_risk\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_risk\" defaultMessage=\"answer\"/></p>\n            \n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_1\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_1\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_2\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_2\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_3\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_3\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_4\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_4\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_5\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_5\" defaultMessage=\"answer\"/></p>\n            \n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\n\nimport Web3 from \"web3\";\nimport QuantJson from \"./abis/Quant.json\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nimport Home from \"./components/Home\";\nimport Main from \"./components/Main\";\n\nimport \"./css/main.css\";\nimport Navbar from \"./components/Navbar\";\nimport Admin from \"./components/Admin\";\nimport Auditor from \"./components/Auditor\";\nimport Strategist from \"./components/Strategist\";\nimport User from \"./components/User\";\nimport Banner from \"./components/Banner\";\nimport Howtoplay from \"./components/Howtoplay\";\nimport Rule from \"./components/Rule\";\nimport Donation from \"./components/Donation\";\nimport Contact from \"./components/Contact\";\n\nclass App extends Component {\n\n  async componentWillMount() {\n    this.setState({ loading: false });\n  }\n\n  async ConnectAccount() {\n    await this.loadWeb3();\n  };\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      this.loadBlockChatData();\n\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n      this.loadBlockChatData();\n\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n \n  async loadBlockChatData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    web3.eth.defaultAccount = accounts[0];\n    this.setState({ account: accounts[0] });\n\n    const networkId = await web3.eth.net.getId();\n    console.log(\"app.jsx loadBlockChatData networkId: \", networkId);\n\n    // const networkData = LotteryJson.networks[networkId];\n    \n    // if (networkData) {\n    if (networkId === 80001 || networkId === 137 || networkId == 1337) {\n      this.setState({ connected: true });\n      const CONTACT_ADDRESS = '0x5A41E5B354d411968ffB903E75DaF5d8Fe61EC7b';\n      // const CONTACT_ADDRESS = '0x4202E7A3d5947A7A780a0ec2c1A29519342B5Cc2';\n      console.log(\"CONTACT_ADDRESS\");\n      console.log(CONTACT_ADDRESS);\n      // const quantContract = await web3.eth.Contract(LotteryJson.abi, networkAddress);\n      const CONTACT_ABI = QuantJson.abi;\n\t    const quantContract = await web3.eth.Contract(CONTACT_ABI, CONTACT_ADDRESS);\n      const networkAddress = CONTACT_ADDRESS;\n      this.setState({ quantContract });\n      this.setState({ networkAddress });\n      this.setState({ networkId });\n      if (networkId === 80001) {\n          this.setState({ blockExplorerUrl: \"https://mumbai.polygonscan.com/address/\"+networkAddress });\n      } else if (networkId === 137) {\n          this.setState({ blockExplorerUrl: \"https://polygonscan.com/address/\"+networkAddress });\n      } else if (networkId === 1337) {\n        this.setState({ blockExplorerUrl: \"https://polygonscan.com/address/\"+networkAddress });\n      } else {\n        this.setState({ blockExplorerUrl: \"https://polygonscan.com/address/\"+networkAddress });\n      }\n      this.setState({ ticketPrice: \"1\" });\n\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Blockchat contract not deployed to detected network.\");\n      this.switchToPolygonTestNet()\n    }\n  }\n\n  \n  async switchToPolygonTestNet(){\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x13881\" }],\n      });\n      this.loadBlockChatData();\n    } catch (error) {\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: \"0x13881\",\n                chainName: \"Polygon TestNet Mumbai\",\n                rpcUrls: [\"https://rpc-mumbai.maticvigil.com/\"],\n                nativeCurrency: {\n                  name: \"Matic\",\n                  symbol: \"Matic\",\n                  decimals: 18,\n                },\n                // blockExplorerUrls: [\"https://explorer-mumbai.maticvigil.com\"],\n                blockExplorerUrls: [\"https://mumbai.polygonscan.com\"],\n              },\n            ],\n          });\n          this.loadBlockChatData();\n\n        } catch (error) {\n        }\n      }\n    }\n  }\n\n\n  async switchToPolygonMainnet() {\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x89\" }],\n      });\n      this.loadBlockChatData();\n    } catch (error) {\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: \"0x89\",\n                chainName: \"Polygon Mainnet\",\n                rpcUrls: [\"https://rpc-mainnet.maticvigil.com/\"],\n                nativeCurrency: {\n                  name: \"Matic\",\n                  symbol: \"Matic\",\n                  decimals: 18,\n                },\n                // blockExplorerUrls: [\"https://explorer.matic.network/\"],\n                blockExplorerUrls: [\"https://polygonscan.com/\"],\n              },\n            ],\n          });\n          this.loadBlockChatData();\n\n        } catch (error) {\n        }\n      }\n    }\n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      connected: false,\n      account: \"\",\n      gameStartDate: 0,\n      quantContract: null,\n      ticketPrice: 10**18,\n      // ticketPrice: 0.1 * 10**18, // 0.1 matic\n      loading: true,\n    };\n    // console.log(\" this.state \", this.state)\n    this.ConnectAccount = this.ConnectAccount.bind(this)\n  }\n\n  render() {\n    return (!this.state.loading\n      ?\n      <HashRouter>\n        <Navbar account={this.state.account} ConnectAccount={this.ConnectAccount} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Banner gameStartDate={this.state.gameStartDate} />\n            <Home account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n          \n          <Route path=\"/main\" exact>\n            <Banner gameStartDate={this.state.gameStartDate} />\n            <Main account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/admin\" exact>\n            <Admin account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/strategist\" exact>\n            <Strategist account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/user\" exact>\n            <User account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/auditor\" exact>\n            <Auditor account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/how-to-play\" exact>\n            <Howtoplay />\n          </Route >\n\n          {/* <Route path=\"/rule\" exact>\n            <Rule />\n          </Route >\n\n          <Route path=\"/donation\" exact>\n            <Donation />\n          </Route >\n\n          <Route path=\"/contact\" exact>\n            <Contact />\n          </Route > */}\n\n        </Switch >\n      </HashRouter >\n      :\n      <div className=\"text-center\">\n        loading...\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const zh_CN = {\n    start: '开始',\n    // switch: 'English',\n    switch: 'EN',\n\n    main_plear_connect_wallet:\"请登录\", // \"请连接钱包登录\"\n    \n    nav_quant:\"Q\", // \"Quant\", // 左上角标签\n    nav_main:\"广场\",\n    nav_admin:\"管理员\",\n    nav_strategist:\"师傅\", // \"策略师\",\n    nav_user:\"用户\",\n    nav_auditor:\"审核员\",\n    nav_faq:\"问题\",\n    nav_rule:\"规则\",\n    nav_donation:\"捐赠\",\n    nav_contact:\"联系\",\n\n\n    rule_time:\"规则\",\n    rule_game_rule:\"活动规则\",\n    rule_game_rule_1:\"\",\n    rule_game_rule_2:\"\",\n    rule_game_rule_3:\"\",\n    rule_game_rule_4:\"\",\n    rule_game_rule_5:\"\",\n    rule_game_rule_6:\"\",\n\n\n    faq_title:\"常见问题\",\n    faq_question_risk:\"实例什么时候结束？\",\n    faq_answer_risk:\"实例状态为：5，6，7，8，9 时。\",\n\n    faq_question_1:\"实例状态数值分别代表什么意思？\",\n    faq_answer_1:\"0: 用户参与, 请策略师确认用户提交信息（包含：apikey 与 初始金额）。1: 策略师认可用户的提交信息。2: 用户中途不同意。3: 策略师中途不同意。4: 策略师提交信息，请求用户确认。5: 用户认可策略师提交的信息（包含：最终金额）。 6: 仲裁，认可用户正确。7: 仲裁，认可策略师正确。8: 未结算。9: 已经结算。\",\n\n    donation_title:\"为这次游戏捐赠吧！\",\n    contact_title:\"联系方式\",\n\n    zzz: \"zzz\",\n  }\nexport default zh_CN\n  \n","const en_US = {\n    start: 'start',\n    switch: 'CN',\n\n    main_plear_connect_wallet:\"Please Connect to your Wallet for play game\",\n\n    nav_quant:\"Q\",\n    nav_main:\"Strategies\",\n    nav_admin:\"Admin\",\n    nav_strategist:\"Strategist\",\n    nav_user:\"User\",\n    nav_auditor:\"Auditor\",\n    nav_faq:\"FAQ\",\n    nav_rule:\"Rule\",\n    nav_donation:\"Donation\",\n    nav_contact:\"Contact\",  \n\n    rule_time:\"Rule\",\n    rule_game_rule:\"Rules of the game\",\n    // rule_game_rule_1:\"Rule 1\",\n    // rule_game_rule_2:\"Rule 2\",\n    // rule_game_rule_3:\"Rule 3\",\n    // rule_game_rule_4:\"Rule 4\",\n    // rule_game_rule_5:\"Rule 5\",\n    // rule_game_rule_6:\"Rule 6\",\n    rule_game_rule_1:\"\",\n    rule_game_rule_2:\"\",\n    rule_game_rule_3:\"\",\n    rule_game_rule_4:\"\",\n    rule_game_rule_5:\"\",\n    rule_game_rule_6:\"\",\n    \n    rule_draw_rule:\"\",\n    rule_draw_rule_1:\"\",\n    rule_draw_rule_2:\"\",\n    \n    rule_reward_rule: \"\",\n    rule_reward_rule_1:\"\",\n    rule_reward_rule_2:\"\",\n    rule_reward_rule_3:\"\",\n    rule_reward_rule_4:\"\",\n    rule_reward_rule_5:\"\",\n\n    faq_title:\"Frequently Asked Question\",\n    // faq_question_1:\"\",\n    // faq_answer_1:\"\",\n    // faq_question_2:\"\",\n    // faq_answer_2:\"\",\n    // faq_question_3:\"\",\n    // faq_answer_3:\"\",\n    // faq_question_4:\"\",\n    // faq_answer_4:\"\",\n    // faq_question_5:\"\",\n    // faq_answer_5:\"\",\n\n    donation_title:\"Please donate for this game.\",\n    contact_title:\"Contact\",\n    \n    zzz: \"zzz\",\n  }\nexport default en_US\n  \n","import React, { useContext } from 'react'\nimport { IntlProvider } from 'react-intl' // 包裹在需要语言国际化的组件的最外层，和react-redux的Provider一样 让组件和组件内的子组件都能使用react-intl提供的api和方法\nimport { mainContext } from '../reducer' // 这里使用的是useReducer 简单的在根目录下创建一个 来控制语言的全局状态维护\nimport zh_CN from './cn' // 中文包\nimport en_US from './en' // 英文包\n\nconst Inter = (props) => {\n    // 获取默认的语言设置 也可以配合一些全局状态管理进行结合使用 如redux Mobx或者react自身提供的useReducer等\n  const { state } = useContext(mainContext)\n  const chooseLocale = (val) => { \n    let _val = val || navigator.language.split('_')[0]\n    switch (_val) {\n      case 'en':\n        return en_US\n      case 'zh':\n        return zh_CN\n      default:\n        return en_US\n    }\n  }\n  let locale = state.locale || 'en' // 获取 locale\n  let { children } = props\n  // 包裹子组件 让子组件共享react-intl的api 实现多语言\n  return (\n    <IntlProvider\n      key={locale}\n      locale={locale}\n      defaultLocale='en'\n      messages={chooseLocale(locale)}\n    >\n      {children}\n    </IntlProvider>\n  )\n}\n\nexport default Inter\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nimport { ContextProvider } from './reducer'\nimport Inter from './locale/intl'\nconst Root = () => {\n    return (\n      <ContextProvider>\n        <Inter>\n          <App />\n        </Inter>\n      </ContextProvider>\n    );\n\n};\n\nReactDom.render(\n    <Root />,\n    // <App/>,\n    document.getElementById('root')\n)"],"sourceRoot":""}