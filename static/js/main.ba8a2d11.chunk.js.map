{"version":3,"sources":["components/Home.jsx","components/StrategyUseForm.js","common/js/statusTextMap.js","reducer.js","components/Main.jsx","components/Navbar.jsx","common/js/instanceStatusTextMap.js","common/js/formatHelper.js","common/js/instanceStatusHandleForm.js","components/Admin.jsx","components/Auditor.jsx","components/StrategyNewForm.js","components/Strategist.jsx","components/User.jsx","components/Banner.jsx","components/Howtoplay.jsx","App.jsx","locale/cn.js","locale/en.js","locale/intl.js","index.js"],"names":["Home","props","account","quantContract","connected","c","ConnectAccount","ticketPrice","_useState","useParams","referCode","useState","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","setAllStrategies","useEffect","loadData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_allStrategies","wrap","_context","prev","next","console","log","methods","getAllStrategies","call","sent","stop","apply","this","arguments","loadDataAuto","_ref2","_callee2","_context2","setInterval","react_default","createElement","className","Option","Select","layout","labelCol","span","wrapperCol","tailLayout","offset","StrategyUseForm","formRef","React","createRef","componentDidMount","formOption","_this","_this$props$formOptio","name","strategy_id","take_profit","current","setFieldsValue","strategy_name","apikey","moment","format","secretkey","passphrase","exchange","initial_amount","onExchangeChange","value","onFinish","values","new_instance","onReset","resetFields","onFill","es_form","assign","ref","Item","label","rules","required","input","input_number","es_select","placeholder","onChange","allowClear","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","es_button","type","htmlType","onClick","Component","statusTextMap","0","1","2","3","4","5","6","mainContext","createContext","reducer","state","action","objectSpread","locale","strategy","ContextProvider","_useReducer","useReducer","_useReducer2","dispatch","Provider","children","Column","Table","Main","mainLoading","setMainLoading","_useState7","_useState8","allStrategies","_useState9","_useState10","allInstances","setAllInstances","_useState11","_useState12","splitInstance","_useContext","useContext","chageStrategy","setTimeout","_allInstances","forEach","item","toString","strategy_startup_amount","stop_loss","status","tp_rate","id","Date","now","statusText","getStatusText","isExpand","getAllInstances","instance_id","_ref3","_callee3","obj","_context3","send","from","on","confirmationNumber","receipt","error","_x","map","index","key","table","dataSource","pagination","position","title","dataIndex","width","ellipsis","showTitle","render","sender","tooltip","placement","text","record","space","size","splice","i item.isExpand: ","changeExpand","components_StrategyUseForm","bind","Navbar","react_router_dom","to","message","defaultMessage","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","concat","substring","length","instanceStatusTextMap","7","8","9","formatAllStrategies","formatAllInstances","instance_status_text","instance_status","isExpand_StrategistPreConfirmed","isExpand_StrategistMidDisagree","isExpand_UserMidDisagree","isExpand_StrategistConfirmed","isExpand_ArbitrateUserWin","isExpand_ArbitrateStrategistWin","isExpand_Settled","Form_StrategistPreConfirmed","set_instance_status_StrategistPreConfirmed","final_amount","Form_StrategistMidDisagree","_this2","set_instance_status_StrategistMidDisagree","Form_UserMidDisagree","_this3","set_instance_status_UserMidDisagree","Form_ArbitrateUserWin","_this4","set_instance_status_ArbitrateUserWin","Form_ArbitrateStrategistWin","_this5","set_instance_status_ArbitrateStrategistWin","Form_StrategistConfirmed","_this6","set_instance_status_StrategistConfirmed","Form_Settled","_this7","set_instance_status_Settled","Admin","set_strategy_status_active","_ref5","_callee5","_context5","set_strategy_status_x_id_status","set_strategy_status_deleted","_ref6","_callee6","_context6","_x2","set_strategy_status_stopped_x_admin","_ref7","_callee7","_context7","_x3","set_strategy_status_deleted_x_admin","_ref8","_callee8","_context8","_x4","_ref10","_callee10","_context10","parseInt","set_instance_status_x_id_status","_x6","_ref11","_callee11","_context11","_x7","_ref13","_callee13","_context13","_x9","Admin_Column","i item.isExpand_ArbitrateUserWin: ","changeExpand_ArbitrateUserWin","i item.isExpand_ArbitrateStrategistWin: ","changeExpand_ArbitrateStrategistWin","i item.isExpand_Settled: ","changeExpand_Settled","instanceStatusHandleForm_Form_ArbitrateUserWin","instanceStatusHandleForm_Form_ArbitrateStrategistWin","instanceStatusHandleForm_Form_Settled","Auditor","_ref4","_callee4","_context4","Auditor_Column","StrategyNewForm","newStrategy","startup_amount","sl_rate","StrategyNewForm_Option","myCreatedStrategies","setMyCreatedStrategies","_myCreatedStrategies","get_all_StrategyInfo_x_strategiest","set_strategy_status_running","set_strategy_status_stop","set_strategy_status_unavailable","_x5","_ref9","_callee9","_context9","new_strategy","_x8","Strategist_Column","i item.isExpand_StrategistPreConfirmed: ","changeExpand_StrategistPreConfirmed","i item.isExpand_StrategistMidDisagree: ","changeExpand_StrategistMidDisagree","i item.isExpand_StrategistConfirmed: ","changeExpand_StrategistConfirmed","instanceStatusHandleForm_Form_StrategistPreConfirmed","instanceStatusHandleForm_Form_StrategistMidDisagree","instanceStatusHandleForm_Form_StrategistConfirmed","components_StrategyNewForm","allStrategiesOfUser","setAllStrategiesOfUser","allInstancesOfUser","setAllInstancesOfUser","_allStrategiesOfUser","_allInstancesOfUser","getAllStrategiesOfUser","getAllInstancesOfUser","set_instance_status_UserConfirmed","User_Column","i item.isExpand_UserMidDisagree: ","changeExpand_UserMidDisagree","instanceStatusHandleForm_Form_UserMidDisagree","Banner","Howtoplay","App","classCallCheck","_super","gameStartDate","Math","pow","loading","assertThisInitialized","setState","loadWeb3","window","ethereum","web3","Web3","enable","loadBlockChatData","currentProvider","alert","accounts","networkId","CONTACT_ADDRESS","CONTACT_ABI","networkAddress","eth","getAccounts","defaultAccount","net","getId","QuantJson","abi","Contract","blockExplorerUrl","switchToPolygonTestNet","request","method","params","chainId","t0","code","chainName","rpcUrls","nativeCurrency","symbol","decimals","blockExplorerUrls","t1","Navbar_Navbar","react_router","path","exact","Strategist_Admin","User_Main","zh_CN","start","switch","main_plear_connect_wallet","nav_quant","nav_main","nav_admin","nav_strategist","nav_user","nav_auditor","nav_faq","nav_rule","nav_donation","nav_contact","rule_time","rule_game_rule","rule_game_rule_1","rule_game_rule_2","rule_game_rule_3","rule_game_rule_4","rule_game_rule_5","rule_game_rule_6","faq_title","faq_question_risk","faq_answer_risk","faq_question_1","faq_answer_1","donation_title","contact_title","zzz","en_US","rule_draw_rule","rule_draw_rule_1","rule_draw_rule_2","rule_reward_rule","rule_reward_rule_1","rule_reward_rule_2","rule_reward_rule_3","rule_reward_rule_4","rule_reward_rule_5","Inter","provider","defaultLocale","messages","val","navigator","language","split","chooseLocale","Root","reducer_ContextProvider","intl","src_App","ReactDom","src_Root","document","getElementById"],"mappings":"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","file":"static/js/main.ba8a2d11.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport \"../css/CustomButtons.css\"\nimport \"../css/MainBackground.css\"\nimport { useParams } from 'react-router';\nimport { FormattedMessage } from 'react-intl'\n\nexport default function Home(props) {\n    const { account, quantContract, connected, ConnectAccount, ticketPrice } = props;\n    const c = quantContract;\n    const { referCode } = useParams();\n    const [playerRefferalCode, setPlayerRefferalCode] = useState(null);\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allStrategies, setAllStrategies] = useState(null);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const connectToAccount = () => {\n        if (!connected) {\n            setMainLoading(true);\n            ConnectAccount()\n        }\n    }\n\n    const loadData = async () => { \n        console.log(\"loadData\"); \n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n\n    }\n\n    const loadDataAuto = async () => {\n        console.log(\"loadDataAuto\");\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n    }\n    setInterval(() => {\n        if (quantContract) {\n\n            loadDataAuto();\n        }\n    }, 300000);\n\n    return (\n        <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\n            \n            {/* <p>All for quant</p> */}\n            <h4>为交易而热血！</h4>\n            \n            {/* { allStrategies && allStrategies.map((item) => {\n                return (\n                    <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                        \n                        <p>{item.strategy_id.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.name.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.sender.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.strategy_startup_amount.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.take_profit.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.stop_loss.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.tp_rate.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.exchange.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.status}</p>\n                    </div>\n                )\n                })\n            } */}\n                \n        </div >\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nimport moment from \"moment\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass StrategyUseForm extends React.Component {\n  formRef = React.createRef();\n  componentDidMount = () => {\n    console.log({formOption: this.props.formOption})\n    const { name, strategy_id, take_profit } = this.props.formOption;\n    this.formRef.current.setFieldsValue({\n      strategy_name: name,\n      strategy_id,\n      apikey: \"your_api_key\"+ moment().format('YYYYMMDDHHmmss'),\n      secretkey: \"your_secret_key\"+ moment().format('YYYYMMDDHHmmss'),\n      passphrase: \"your_passphrase\"+ moment().format('YYYYMMDDHHmmss'),\n      exchange: 'binance',\n      take_profit,\n      initial_amount: 10001,\n      });\n  }\n\n  onExchangeChange = (value) => {\n    switch (value) {\n\t\tcase 'binance':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'okex':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'ok' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'huobi':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t  strategy_name: 'hb' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t\tcase 'other':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tstrategy_name: 'ot' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t  }\n\t};\n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.new_instance(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tstrategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\tstrategy_id: 1,\n\t\tapikey: \"your_api_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\tsecretkey: \"your_secret_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\tpassphrase: \"your_passphrase\"+ moment().format('YYYYMMDDHHmmss'),\n\t\texchange: 'binance',\n\t\ttake_profit: 2000,\n\t\tinitial_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n        name=\"strategy_name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n        <Form.Item\n        name=\"strategy_id\"\n        label=\"Strategy Id\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        {/* <Input /> */}\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"take_profit\"\n        label=\"TakeProfit\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"initial_amount\"\n        label=\"InitialAmount\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"exchange\"\n        label=\"Exchange\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"Select a option and change input text above\"\n          onChange={this.onExchangeChange}\n          allowClear\n        >\n          <Option value=\"okex\">okex</Option>\n          <Option value=\"huobi\">huobi</Option>\n          <Option value=\"binance\">binance</Option>\n        </Select>\n      </Form.Item>\n\n        <Form.Item\n        name=\"apikey\"\n        label=\"ApiKey\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n        <Form.Item\n        name=\"secretkey\"\n        label=\"SecretKey\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      \n      <Form.Item\n        noStyle\n        shouldUpdate={(prevValues, currentValues) => prevValues.exchange !== currentValues.exchange}\n      >\n        {({ getFieldValue }) =>\n          getFieldValue('exchange') === 'okex' ? (\n            <Form.Item\n              name=\"passphrase\"\n              label=\"passphrase\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          ) : null\n        }\n      </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default StrategyUseForm;","/* \nstrategy 状态\n\n0: '未激活',\n1: '运行中',\n2: '停止',\n3: '不可用',\n4: '删除',\n5: '强制停止',\n6: '强制删除',\n*/\n\nexport default {\n    0: '未激活',\n    1: '运行中',\n    2: '停止',\n    3: '不可用',\n    4: '删除',\n    5: '强制停止',\n    6: '强制删除',\n}","import React, { useReducer } from 'react'\nconst CHANGE_LOCALE = 'CHANGE_LOCALE'\nconst CHANGE_STRATEGY = 'CHANGE_STRATEGY'\n\nconst mainContext = React.createContext()\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case CHANGE_LOCALE:\n      return { ...state, locale: action.locale || 'en' }\n    case CHANGE_STRATEGY:\n      return { ...state, strategy: action.strategy }\n    default:\n      return state\n  }\n}\n\nconst ContextProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, {\n    locale: 'zh',\n    strategy: []\n  })\n  return (\n    <mainContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </mainContext.Provider>\n  )\n}\n\nexport { reducer, mainContext, ContextProvider }\n\n","import React, { useEffect, useState } from 'react'\nimport { Table, Tooltip , Space } from 'antd';\n\nimport \"../css/CustomButtons.css\"\nimport \"../css/MainBackground.css\"\nimport { useParams } from 'react-router';\nimport { FormattedMessage } from 'react-intl'\nimport StrategyUseForm from './StrategyUseForm';\nimport statusTextMap from '../common/js/statusTextMap'\nimport { useContext} from 'react'\nimport { mainContext } from '../reducer'\n\nconst { Column } = Table;\n\nexport default function Main(props) {\n    const { account, quantContract, connected, ConnectAccount, ticketPrice } = props;\n    const c = quantContract;\n    const { referCode } = useParams();\n    const [playerRefferalCode, setPlayerRefferalCode] = useState(null);\n    const [mainLoading, setMainLoading] = useState(true);\n    const [newInstanceShowElem, setNewInstanceShowElem] = useState(true);\n    const [allStrategies, setAllStrategies] = useState(null);\n    const [allInstances, setAllInstances] = useState(null);\n    const [splitInstance, setSplitInstance] = useState(false);\n\n    const { dispatch, state } = useContext(mainContext);\n    const { locale } = state\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const connectToAccount = () => {\n        if (!connected) {\n            setMainLoading(true);\n            ConnectAccount()\n        }\n    }\n\n    const chageStrategy = (strategy) => {\n        dispatch({\n            type: 'CHANGE_STRATEGY',\n            strategy\n        })\n        setTimeout(()=>{console.log(\"loadData chageStrategy state: after\", state);},300)\n    }\n\n    const loadData = async () => { \n        console.log(\"loadData\"); \n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        // console.log(\"loadData _allStrategies: forEach 1\");\n        _allStrategies.forEach(item => {\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            item.isExpand = false;\n        });\n        // console.log(\"loadData _allStrategies: forEach 2\");\n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n        // console.log(\"loadData chageStrategy _allStrategies: before\", _allStrategies);\n        chageStrategy(_allStrategies);\n        // console.log(\"loadData chageStrategy _allStrategies: after\", _allStrategies);\n        const _allInstances = await c.methods.getAllInstances().call(); \n        _allInstances.forEach(item => {\n            item.instance_id = item.instance_id.toString();\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            // item.isExpand = false;\n        });\n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(_allInstances);\n\n    }\n\n    const loadDataAuto = async () => {\n        console.log(\"loadDataAuto\");\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        _allStrategies.forEach(item => {\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            item.isExpand = false;\n        });\n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n        chageStrategy(_allStrategies)\n        const _allInstances = await c.methods.getAllInstances().call(); \n        _allInstances.forEach(item => {\n            item.instance_id = item.instance_id.toString();\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            // item.isExpand = false;\n        });\n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(_allInstances);\n    }\n    setInterval(() => {\n        if (quantContract) {\n\n            loadDataAuto();\n        }\n    }, 300000);\n\n    const new_instance = async (obj) => {\n        console.log(\"new_instance obj: \", obj);\n        const strategy_name = obj.strategy_name || \"\";\n        const strategy_id = obj.strategy_id;\n        const apikey = obj.apikey;\n        const secretkey = obj.secretkey;\n        const passphrase = obj.passphrase || \"\";\n        const exchange = obj.exchange;\n        // const take_profit = obj.take_profit.toString();\n        const take_profit = obj.take_profit;\n        const initial_amount = obj.initial_amount;\n        console.log(\"new_instance strategy_id: \", strategy_id);\n        console.log(\"new_instance apikey: \", apikey);\n        console.log(\"new_instance secretkey: \", secretkey);\n        console.log(\"new_instance passphrase: \", passphrase);\n        await c.methods.new_instance(strategy_id, initial_amount, apikey, secretkey, passphrase)\n        .send({ from: account, value: take_profit })\n        // .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const use_strategy1 = async (obj) => {\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n    }\n\n    const getStatusText = (status) => {\n        return statusTextMap[status] || '';\n    }\n    const changeExpand = (index) => {\n        allStrategies.splice(index, 1, {...allStrategies[index], isExpand: !allStrategies[index].isExpand, id: allStrategies[index].name + Date.now()})\n        // console.log({'i': allStrategies[index]})\n        console.log({'i item.isExpand: ': allStrategies[index].isExpand})\n        // console.log({'i mainLoading: ': mainLoading})\n        // setAllStrategies(allStrategies);\n        // if (allStrategies[index].isExpand) {\n        //     setMainLoading(true);\n        // } else {\n        //     setMainLoading(false);\n        // }\n        setMainLoading(!mainLoading);\n    }\n\n    return (\n        <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\n            {!connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <h3>请连接钱包</h3>\n                </div>\n            } \n            \n            {connected && !splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        {/* <p>All Running Strategies in Main</p> */}\n                        {/* <p>All Strategies in Main</p> */}\n                        <h3>所有策略</h3>\n                    </div>\n                }\n            \n            {/* {allStrategies && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>   name: {allStrategies[0].name.toString()}  </p>\n                        <br></br>\n                        <p>   isExpand: {allStrategies[0].isExpand.toString()}  </p>\n                        <br></br>\n                        <p>   expand: {mainLoading.toString()}  </p>\n                    </div>\n                }  */}\n            { allStrategies && allStrategies.map((item, index) => {\n                return (\n                    <div key={item.id}>\n                        <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\"\n                                 />\n                                <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" width={160}\n                                ellipsis={ {showTitle: false}}\n                                    render={ sender => (\n                                        <Tooltip placement=\"topLeft\" title={sender}>\n                                            {sender}\n                                        </Tooltip>\n                                        )}\n                                />\n                                <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                <Column\n                                    title=\"Action\"\n                                    key=\"action\"\n                                    render={(text, record) => (\n                                        <Space size=\"middle\">\n                                        <button onClick={() => changeExpand(index)}>使用策略</button>\n                                        </Space>\n                                    )}\n                                />\n                            </Table>\n                        </div>\n                        {\n                            item.isExpand ? \n                                <div className='strategy-form' >\n                                    <br></br>\n                                    <StrategyUseForm formOption={item} new_instance={new_instance.bind(this)}/>\n                                </div>\n                            : null\n                        }\n                    </div>\n                )\n                })\n            }\n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多Running</p>\n                </div>\n            } \n            {connected && splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Stopped Strategies</p>\n                    </div>\n                } \n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多Stopped</p>\n                </div>\n            } \n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>All Instances: Settled</p>\n                </div>\n            } \n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多 Settled Instances</p>\n                </div>\n            } \n            {connected && splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Instances: Unsettled Instances</p>\n                        <p>未结算 Instances</p>\n                    </div>\n                } \n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多 Unsettled Instances </p>\n                </div>\n            } \n            {connected && !splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <h3>所有实例</h3>\n                </div>\n            } \n            \n            { allInstances && allInstances.map((item) => {\n                    return (\n                        <div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\" />\n                                        <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\" />\n                                        \n                                    </Table> \n                                </div> \n                            </div> \n                        </div> \n                    )\n                })\n            }\n            \n            { connected && splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Will Settled Instances</p>\n                        <p>已结算 Instances</p>\n                    </div>\n                } \n        </div >\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport \"../css/Navbar.css\"\nimport { useContext} from 'react'\nimport { mainContext } from '../reducer'\nimport { FormattedMessage } from 'react-intl'\nexport default function Navbar(props) {\n\n    const { ConnectAccount, account } = props;\n\n    const { dispatch, state } = useContext(mainContext)\n    const { locale } = state\n    const changeLang = () => { // 改变状态里的 语言 进行切换\n        dispatch({\n            type: 'CHANGE_LOCALE',\n            locale: locale === 'zh' ? 'en' : 'zh'\n        })\n    }\n    return (\n        <nav className='navbar  navbar-expand-xl navbar-dark glassNav'>\n            <div className=\"container-fluid px-md-5\">\n                <Link className=\"navbar-brand mx-xl-0 mx-auto \" to=\"/\">\n                    {/* <img className=\"ml-xl-0 ml-5 img-fluid\" src=\"img/logo2.png\" alt=\"\" /> */}\n                    {/* <h3>Lottery (2 in 4)</h3> */}\n                    <h3>\n                        <FormattedMessage\n                            id=\"nav_quant\"\n                            defaultMessage=\"quant\"\n                        />\n\n                    </h3>\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"fontPara navbar-nav me-auto ms-auto mb-2 mb-lg-0 \">\n                        \n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/main\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_main\"\n                                        defaultMessage=\"Main\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/admin\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_admin\"\n                                        defaultMessage=\"Admin\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/strategist\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_strategist\"\n                                        defaultMessage=\"Strategist\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/user\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_user\"\n                                        defaultMessage=\"User\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/auditor\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_auditor\"\n                                        defaultMessage=\"Auditor\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/rule\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_rule\"\n                                        defaultMessage=\"Rule\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li> */}\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/how-to-play\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_faq\"\n                                        defaultMessage=\"FAQ\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/donation\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_donation\"\n                                        defaultMessage=\"Donation\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/contact\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_contact\"\n                                        defaultMessage=\"Contact\"\n                                    /></h4>\n                            </Link>\n                        </li> */}\n\n                    </ul>\n                    <div>\n                        <button onClick={changeLang} className=\"btn btn-lg\"> <FormattedMessage id=\"switch\" ></FormattedMessage></button>\n                    </div>\n                    <button onClick={ConnectAccount} className=\"btn btn-dark btn-lg\">{account ? `${account.substring(0, 3)}...${account.substring(account.length - 4, account.length)} ` : 'Connect'}</button>\n                </div>\n\n            </div>\n        </nav>\n    )\n}\n","/* \ninstance 状态\n\n// _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n// _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n// _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n// _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n// _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n// _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n// _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n// _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n// _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n// _instance_status == 9 set_instance_status_Settled(instance_id);\n\n1: 策略师认可用户的提交信息。\n2: 策略师中途不同意。\n3: 用户中途不同意。\n4: 策略师提交信息，请求用户确认。\n5: 用户认可策略师提交的信息。 \n6: 仲裁，认可用户正确。\n7: 仲裁，认可策略师正确。\n8: 未结算。\n9: 已经结算。\n*/\n\nexport default {\n    1: '策略师认可用户的提交信息', // UserPreConfirmed\n    2: '策略师中途不同意', // StrategistPreConfirmed\n    3: '用户中途不同意', // UserMidDisagree\n    4: '策略师提交信息，请求用户确认', // StrategistConfirmed\n    5: '用户认可策略师提交的信息', // UserConfirmed\n    6: '仲裁，认可用户正确', // ArbitrateUserWin\n    7: '仲裁，认可策略师正确', // ArbitrateStrategistWin\n    8: '未结算', // Unsettled\n    9: '已经结算', // Settled\n}","\nimport statusTextMap from './statusTextMap';\nimport instanceStatusTextMap from './instanceStatusTextMap';\n\nconst getStatusText = (status) => {\n    return statusTextMap[status] || '';\n}\nconst getInstanceStatusText = (status) => {\n    return instanceStatusTextMap[status] || '';\n}\nconst getPassphraseDefaultText = (passphrase) => {\n    return passphrase.toString() || 'your_passphrase';\n}\n\n// 格式化 allStrategies\nconst formatAllStrategies = (_allStrategies) => {\n    \n    _allStrategies.forEach(item => {\n        item.strategy_id = item.strategy_id.toString();\n        item.strategy_startup_amount = item.strategy_startup_amount.toString();\n        item.stop_loss = item.stop_loss.toString();\n        item.status = item.status.toString();\n        item.tp_rate = item.tp_rate.toString();\n        item.take_profit = item.take_profit.toString();\n        item.id = item.name + Date.now();\n\n        item.statusText = getStatusText(item.status);\n        item.isExpand = false;\n    });\n    return _allStrategies\n\n}\n\n// 格式化 allInstances\nconst formatAllInstances = (_allInstances) => {\n    \n    _allInstances.forEach(item => {\n        item.instance_id = item.instance_id.toString();\n        item.strategy_id = item.strategy_id.toString();\n        item.strategy_startup_amount = item.strategy_startup_amount.toString();\n        item.stop_loss = item.stop_loss.toString();\n        item.status = item.status.toString();\n        item.tp_rate = item.tp_rate.toString();\n        item.take_profit = item.take_profit.toString();\n        item.id = item.name + Date.now();\n\n        item.statusText = getStatusText(item.status);\n\n        item.apikey = item.apikey.toString();\n        item.secretkey = item.secretkey.toString();\n        item.passphrase = getPassphraseDefaultText(item.passphrase);\n        item.instance_status_text = getInstanceStatusText(item.instance_status);\n        // item.isExpand = false;\n        item.isExpand_StrategistPreConfirmed = false;\n        item.isExpand_StrategistMidDisagree = false;\n        item.isExpand_UserMidDisagree = false;\n        item.isExpand_StrategistConfirmed = false;\n        item.isExpand_ArbitrateUserWin = false;\n        item.isExpand_ArbitrateStrategistWin = false;\n        item.isExpand_Settled = false;\n    });\n    return _allInstances;\n\n}\n// export default formatAllStrategies;\nexport { formatAllStrategies, formatAllInstances };\n","import React, { useState } from 'react';\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nimport moment from \"moment\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass Form_StrategistPreConfirmed extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_StrategistPreConfirmed(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_StrategistMidDisagree extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_StrategistMidDisagree(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_UserMidDisagree extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_UserMidDisagree(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nclass Form_ArbitrateUserWin extends React.Component {\n  formRef = React.createRef();\n  onExchangeChange = (value) => {\n    switch (value) {\n\t\tcase 'binance':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'okex':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'ok' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'huobi':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t  strategy_name: 'hb' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t\tcase 'other':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tstrategy_name: 'ot' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t  }\n\t};\n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_ArbitrateUserWin({...values, instance_id: this.props.instance_id});\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\t// strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t// strategy_id: 1,\n\t\t// apikey: \"your_api_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\t// secretkey: \"your_secret_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\t// passphrase: \"your_passphrase\"+ moment().format('YYYYMMDDHHmmss'),\n\t\t// exchange: 'binance',\n\t\t// take_profit: 2000,\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nclass Form_ArbitrateStrategistWin extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_ArbitrateStrategistWin(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"instance_id\"\n          label=\"instance_id\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_StrategistConfirmed extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_StrategistConfirmed(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_Settled extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_Settled(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport { \n  Form_StrategistPreConfirmed, \n  Form_StrategistMidDisagree,\n  Form_UserMidDisagree,\n  Form_StrategistConfirmed, \n  Form_ArbitrateUserWin, \n  Form_ArbitrateStrategistWin, \n  Form_Settled, \n};","import React, { useEffect, useState } from 'react'\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport  { Form_StrategistConfirmed, Form_ArbitrateUserWin, Form_ArbitrateStrategistWin, Form_Settled} from '../common/js/instanceStatusHandleForm';\n\n\nconst { Column } = Table;\n\nexport default function Admin(props) {\n    const { quantContract, connected, account } = props;\n    const c = quantContract;\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allStrategiesName, setAllStrategiesName] = useState(null);\n    const [allStrategies, setAllStrategies] = useState(null);\n    // const [strategyStatus, setStrategyStatus] = useState(null);\n    const [allInstances, setAllInstances] = useState(null);\n    const [splitInstance, setSplitInstance] = useState(false);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const loadData = async () => {\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(formatAllStrategies(_allStrategies));\n\n        const _allInstances = await c.methods.getAllInstances().call(); \n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(formatAllInstances(_allInstances));\n    }\n\n    // 定时自动刷新\n    const loadDataAuto = async () => {\n        // const _allStrategies = await c.methods.getAllStrategies().call(); \n        // console.log(\"loadDataAuto _allStrategies: \", _allStrategies);\n        // setAllStrategies(_allStrategies);\n        // const _allInstances = await c.methods.getAllInstancesOfUser(account).call(); \n        // console.log(\"loadData _allInstances: \", _allInstances);\n        // setAllInstances(_allInstances);\n        loadData();\n    }\n    setInterval(() => {\n        console.log(\"Date: \", Date())\n        if (quantContract) {\n            loadDataAuto();\n        }\n    }, 300000);\n\n    // start strategy handle ---------------------------------------------------------------------\n    \n    const getAllStrategiesName = async () => {\n        const _allStrategiesName = await c.methods.getAllStrategiesName().call();\n        setAllStrategiesName(_allStrategiesName);\n    }\n\n    const getAllStrategies = async () => {\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"getAllStrategies _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n    }\n\n    // const set_strategy_status_active = async (_strategy_name) => {\n    //     console.log(\"set_strategy_status_active => _strategy_name: \", _strategy_name);\n    //     await c.methods.set_strategy_status_active(_strategy_name)\n    //     .send({ from: account })\n    //     .on('confirmation', (confirmationNumber, receipt) => {\n    //         loadData();\n    //     })\n    //     .on('error', function (error, receipt) {\n    //         loadData();\n    //     });\n    // }\n\n    const set_strategy_status_active = async (id) => {\n        console.log(\"set_strategy_status_active => id: \", id);\n        // await c.methods.set_strategy_status_active(id)\n        await c.methods.set_strategy_status_x_id_status(id, 0)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const set_strategy_status_deleted = async (id) => {\n        // console.log(\"set_strategy_status_deleted => id: \", id);\n        // await c.methods.set_strategy_status_deleted(id)\n        await c.methods.set_strategy_status_x_id_status(id, 4)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const set_strategy_status_stopped_x_admin = async (id) => {\n        // console.log(\"set_strategy_status_deleted => id: \", id);\n        // await c.methods.set_strategy_status_stopped_x_admin(id)\n        await c.methods.set_strategy_status_x_id_status(id, 5)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    \n    const set_strategy_status_deleted_x_admin = async (id) => {\n        // console.log(\"set_strategy_status_deleted => id: \", id);\n        // await c.methods.set_strategy_status_deleted_x_admin(id)\n        await c.methods.set_strategy_status_x_id_status(id, 6)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const getStrategyStatus = async (_strategy_name) => {\n        console.log(\"getStrategyStatus => _strategy_name: \", _strategy_name); \n        // await c.methods.getStrategyStatus(_strategy_name).call();\n        const aStrategyStatus = await c.methods.getStrategyStatus(_strategy_name).call() \n        console.log(\"getStrategyStatus => aStrategyStatus：\", aStrategyStatus); \n        console.log(\"getStrategyStatus => end\");\n        return aStrategyStatus;\n    }\n    // start instance handle ---------------------------------------------------------------------\n    \n    // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n    // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n    // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n    // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n    // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n    // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n    // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n    // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n    // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n    // _instance_status == 9 set_instance_status_Settled(instance_id);\n\n    const set_instance_status_ArbitrateUserWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_ArbitrateUserWin final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_ArbitrateUserWin instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 6, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_ArbitrateStrategistWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        \n        console.log(\"set_instance_status_ArbitrateStrategistWin final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id); \n        console.log(\"set_instance_status_ArbitrateStrategistWin instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 7, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_Unsettled = async (obj) => {\n        const { instance_id, final_amount } = obj;\n        console.log(\"set_instance_status_Unsettled instance_id: \", instance_id, final_amount); \n        await c.methods.set_instance_status_x_id_status(instance_id, 8, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_Settled = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_Settled final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id); \n        console.log(\"set_instance_status_Settled instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 9, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    // helper 函数 -------------------------------------------------------------------\n    // const changeInstanceItemExpand_ArbitrateUserWin = (index) => {\n    const changeExpand_ArbitrateUserWin = (index) => {\n        // allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin, id: allInstances[index].name + Date.now()})\n        allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin})\n        // console.log({'i': allInstances[index]})\n        console.log({'i item.isExpand_ArbitrateUserWin: ': allInstances[index].isExpand_ArbitrateUserWin})\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_ArbitrateStrategistWin = (index) => {\n        allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateStrategistWin: !allInstances[index].isExpand_ArbitrateStrategistWin})\n        console.log({'i item.isExpand_ArbitrateStrategistWin: ': allInstances[index].isExpand_ArbitrateStrategistWin})\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_Settled = (index) => {\n        allInstances.splice(index, 1, {...allInstances[index], isExpand_Settled: !allInstances[index].isExpand_Settled})\n        console.log({'i item.isExpand_Settled: ': allInstances[index].isExpand_Settled})\n        setMainLoading(!mainLoading);\n    }\n\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n    return (\n        <div>\n            <div className=\"row mt-4\"> \n                {!connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <h3>请连接钱包</h3>\n                    </div>\n                }\n                \n                {/* \n                // 只取策略名称\n                <div className={buttonColClassName}>\n                    <button onClick={getAllStrategiesName} className={buttonClassName}>Strategy List</button>\n                </div> \n                {\n                    console.log(\"-----------------------------\")\n                }\n                { allStrategiesName && allStrategiesName.map((item) => {\n                        const astatus = getStrategyStatus(item);\n                        astatus.then((res)=>{\n                            console.log(res,\"123\")\n                        })\n                        console.log(\" astatus\", astatus);\n                        // console.log(\" astatus end\") ;\n                        return (\n                            <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                <p>{item}</p>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <button onClick={() => { getStrategyStatus(item) }} >A</button>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <button onClick={() => { set_strategy_status_active(item) }} >Active</button>\n                            </div>\n                        )\n                    })\n                } \n                */}\n\n                {/*                 \n                <div className={buttonColClassName}>\n                    <button onClick={getAllStrategies} className={buttonClassName}>All Strategy List</button>\n                </div>\n                \n                {\n                    console.log(\" allStrategies ----------------------------- \", allStrategies)\n                }\n                 */}\n                {connected && !splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <h3>所有策略</h3>\n                        </div>\n                    } \n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Pending Strategies</p>\n                        </div>\n                    } \n                { allStrategies && allStrategies.map((item) => {\n                        return (\n                            // <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                \n                            //     <p>{item.strategy_id.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.name.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.sender.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.strategy_startup_amount.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.take_profit.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.stop_loss.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.tp_rate.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.exchange.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.status}</p>\n                                \n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_active(item.strategy_id) }} >Active</button>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_deleted(item.strategy_id) }} >Delete</button>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_stopped_x_admin(item.strategy_id) }} >Force Stop</button>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_deleted_x_admin(item.strategy_id) }} >Force Delete</button>\n\n                            // </div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\"  width={160} ellipsis={true}/>\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column\n                                            title=\"Action\"\n                                            key=\"action\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_active(item.strategy_id) }>激活</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"Delete\"\n                                            key=\"delete\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_deleted(item.strategy_id) }>删除</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"Force Stop\"\n                                            key=\"ForceStop\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_stopped_x_admin(item.strategy_id) }>强制删除</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"Force Delete\"\n                                            key=\"ForceDelete\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_deleted_x_admin(item.strategy_id) }>强制删除</button>\n                                                </Space>\n                                            )}\n                                        /> \n                                    </Table>\n                                </div> \n                            </div>\n                        )\n                    })\n                }\n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Running Strategies in Admin</p>\n                        </div>\n                    } \n                \n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Stopped Strategies</p>\n                        </div>\n                    } \n                    \n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Unsettled Instances</p>\n                            <p>未结算 Instances</p>\n                        </div>\n                    } \n                    \n                {connected && !splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <h3>所有实例</h3>\n                        </div>\n                    } \n                { allInstances && allInstances.map((item, index) => {\n                    return (\n                        // <div>\n                        //     <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                \n                        //         <p>{item.instance_id.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.strategy_id.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.name.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.sender.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.strategy_startup_amount.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.take_profit.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.stop_loss.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.tp_rate.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.exchange.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.status}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.status}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.user_address}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.apikey}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.secretkey}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.passphrase || \"your_passphrase\"}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_ArbitrateUserWin(item.instance_id) }} >ArbitrateUserWin 仲裁User对</button>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_ArbitrateStrategistWin(item.instance_id) }} >ArbitrateStrategistWin 仲裁Strategist对</button>\n                        //         {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_Unsettled(item.instance_id) }} >Unsettled 未结算</button> */}\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_Settled(item.instance_id) }} >Settled 已经结算</button>\n                                 \n                        //     </div> \n                        // </div>\n                        <div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\"  width={160} ellipsis={true}/>\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\"  width={160} ellipsis={true}/>\n                                        <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\"  width={160} ellipsis={true}/>\n                                        <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\"  width={160} ellipsis={true}/>\n                                        <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                                        <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" />\n                                        {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                                        <Column\n                                            title=\"ArbitrateUserWin\"\n                                            key=\"arbitrateUserWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_ArbitrateUserWin(item.instance_id) }>仲裁User对</button> */}\n                                                <button onClick={() => changeExpand_ArbitrateUserWin(index) }>仲裁User对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"ArbitrateStrategistWin\"\n                                            key=\"arbitrateStrategistWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_ArbitrateStrategistWin(item.instance_id) }>仲裁Strategist对</button> */}\n                                                <button onClick={() => changeExpand_ArbitrateStrategistWin(index) }>仲裁Strategist对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        {/* <Column\n                                            title=\"Unsettled\"\n                                            key=\"Unsettled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_instance_status_Unsettled(item.instance_id) }>未结算</button>\n                                                </Space>\n                                            )}\n                                        /> */}\n                                        <Column\n                                            title=\"Settled\"\n                                            key=\"Settled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_Settled(item.instance_id) }>已经结算</button> */}\n                                                <button onClick={() => changeExpand_Settled(index) }>已经结算</button>\n                                                </Space>\n                                            )}\n                                        /> \n                                    </Table> \n                                </div> \n                                {\n                                    item.isExpand_ArbitrateUserWin ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateUserWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateUserWin instance_id={item.instance_id} set_instance_status_ArbitrateUserWin={set_instance_status_ArbitrateUserWin.bind(this)}/>\n                                            {/* <Form>\n                                                <Form.Item\n                                                    name=\"final_amount\"\n                                                    label=\"Final Amount\"\n                                                    rules={[\n                                                    {\n                                                        required: true,\n                                                    },\n                                                    ]}\n                                                >\n                                                    <InputNumber />\n                                                </Form.Item> \n                                                <Form.Item {...tailLayout}>\n                                                    <Button type=\"primary\" htmlType=\"submit\">\n                                                    Submit\n                                                    </Button>\n                                                    <Button htmlType=\"button\" onClick={this.onReset}>\n                                                    Reset\n                                                    </Button> \n                                                </Form.Item>\n                                            </Form> */}\n                                        </div>\n                                    : null\n                                }\n                                {\n                                    item.isExpand_ArbitrateStrategistWin ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateStrategistWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateStrategistWin set_instance_status_ArbitrateStrategistWin={set_instance_status_ArbitrateStrategistWin.bind(this)}/>\n                                        </div>\n                                    : null\n                                } \n                                {\n                                    item.isExpand_Settled ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_Settled  {item.instance_id}\n                                            <br></br>\n                                            <Form_Settled set_instance_status_Settled={set_instance_status_Settled.bind(this)}/>\n                                        </div>\n                                    : null\n                                }\n                            </div> \n                        </div> \n                    )\n                    })\n                }\n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Will Settled Instances</p>\n                            <p>已结算 Instances</p>\n                        </div>\n                    } \n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport { Form_StrategistConfirmed, Form_ArbitrateUserWin, Form_ArbitrateStrategistWin, Form_Settled } from '../common/js/instanceStatusHandleForm';\n\nconst { Column } = Table;\n\nexport default function Auditor(props) {\n    const { quantContract, connected, account } = props;\n    const c = quantContract;\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allInstances, setAllInstances] = useState(null);\n    const [splitInstance, setSplitInstance] = useState(false);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const loadData = async () => {\n        const _allInstances = await c.methods.getAllInstances().call();\n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(formatAllInstances(_allInstances));\n    }\n\n    // 定时自动刷新\n    const loadDataAuto = async () => {\n        loadData();\n    }\n    setInterval(() => {\n        console.log(\"Date: \", Date())\n        if (quantContract) {\n            loadDataAuto();\n        }\n    }, 300000);\n\n    // start strategy handle ---------------------------------------------------------------------\n\n\n    // start instance handle ---------------------------------------------------------------------\n\n    // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n    // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n    // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n    // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n    // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n    // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n    // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n    // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n    // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n    // _instance_status == 9 set_instance_status_Settled(instance_id);\n\n    const set_instance_status_ArbitrateUserWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_ArbitrateUserWin final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_ArbitrateUserWin instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 6, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_ArbitrateStrategistWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_ArbitrateStrategistWin final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_ArbitrateStrategistWin instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 7, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_Unsettled = async (obj) => {\n        const { instance_id, final_amount } = obj;\n        console.log(\"set_instance_status_Unsettled instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 8, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_Settled = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_Settled final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_Settled instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 9, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n\n    // helper 函数 -------------------------------------------------------------------\n    // const changeInstanceItemExpand_ArbitrateUserWin = (index) => {\n    const changeExpand_ArbitrateUserWin = (index) => {\n        // allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin, id: allInstances[index].name + Date.now()})\n        allInstances.splice(index, 1, { ...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin })\n        // console.log({'i': allInstances[index]})\n        console.log({ 'i item.isExpand_ArbitrateUserWin: ': allInstances[index].isExpand_ArbitrateUserWin })\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_ArbitrateStrategistWin = (index) => {\n        allInstances.splice(index, 1, { ...allInstances[index], isExpand_ArbitrateStrategistWin: !allInstances[index].isExpand_ArbitrateStrategistWin })\n        console.log({ 'i item.isExpand_ArbitrateStrategistWin: ': allInstances[index].isExpand_ArbitrateStrategistWin })\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_Settled = (index) => {\n        allInstances.splice(index, 1, { ...allInstances[index], isExpand_Settled: !allInstances[index].isExpand_Settled })\n        console.log({ 'i item.isExpand_Settled: ': allInstances[index].isExpand_Settled })\n        setMainLoading(!mainLoading);\n    }\n\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n    return (\n        <div>\n            <div className=\"row mt-4\">\n                {!connected &&\n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <h3>请连接钱包</h3>\n                    </div>\n                }\n\n                {connected && !splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        {/* <p>All Unsettled Instances</p> */}\n                        <h3>所有实例</h3>\n                    </div>\n                }\n                {connected && splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        {/* <p>All Unsettled Instances</p> */}\n                        <h3>未结算实例</h3>\n                    </div>\n                }\n\n                {allInstances && allInstances.map((item, index) => {\n                    return (\n                        <div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" width={160} ellipsis={true} />\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\" />\n                                        <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\" />\n                                        <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\" />\n                                        <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                                        <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" />\n                                        {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                                        <Column\n                                            title=\"ArbitrateUserWin\"\n                                            key=\"arbitrateUserWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                    {/* <button onClick={() => set_instance_status_ArbitrateUserWin(item.instance_id) }>仲裁User对</button> */}\n                                                    <button onClick={() => changeExpand_ArbitrateUserWin(index)}>仲裁User对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"ArbitrateStrategistWin\"\n                                            key=\"arbitrateStrategistWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                    {/* <button onClick={() => set_instance_status_ArbitrateStrategistWin(item.instance_id) }>仲裁Strategist对</button> */}\n                                                    <button onClick={() => changeExpand_ArbitrateStrategistWin(index)}>仲裁Strategist对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        {/* <Column\n                                            title=\"Unsettled\"\n                                            key=\"Unsettled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_instance_status_Unsettled(item.instance_id) }>未结算</button>\n                                                </Space>\n                                            )}\n                                        /> */}\n                                        <Column\n                                            title=\"Settled\"\n                                            key=\"Settled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                    {/* <button onClick={() => set_instance_status_Settled(item.instance_id) }>已经结算</button> */}\n                                                    <button onClick={() => changeExpand_Settled(index)}>已经结算</button>\n                                                </Space>\n                                            )}\n                                        />\n                                    </Table>\n                                </div>\n                                {\n                                    item.isExpand_ArbitrateUserWin ?\n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateUserWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateUserWin set_instance_status_ArbitrateUserWin={set_instance_status_ArbitrateUserWin.bind(this)} />\n                                        </div>\n                                        : null\n                                }\n                                {\n                                    item.isExpand_ArbitrateStrategistWin ?\n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateStrategistWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateStrategistWin set_instance_status_ArbitrateStrategistWin={set_instance_status_ArbitrateStrategistWin.bind(this)} />\n                                        </div>\n                                        : null\n                                }\n                                {\n                                    item.isExpand_Settled ?\n                                        <div className='strategy-form' >\n                                            set_instance_status_Settled  {item.instance_id}\n                                            <br></br>\n                                            <Form_Settled set_instance_status_Settled={set_instance_status_Settled.bind(this)} />\n                                        </div>\n                                        : null\n                                }\n                            </div>\n                        </div>\n                    )\n                })\n                }\n                {connected && splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        {/* <p>All Will Settled Instances</p> */}\n                        <h3>已结算 实例</h3>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nimport moment from \"moment\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass StrategyNewForm extends React.Component {\n  formRef = React.createRef();\n  onExchangeChange = (value) => {\n    switch (value) {\n\t\tcase 'binance':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'okex':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'ok' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'huobi':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t  strategy_name: 'hb' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t\tcase 'other':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tstrategy_name: 'ot' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t  }\n\t};\n  onFinish = (values) => {\n    console.log(values);\n\tthis.props.newStrategy(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tstrategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\tstartup_amount: 10000,\n\t\ttake_profit: 2000,\n\t\ttp_rate: 30,\n\t\tstop_loss: 1000,\n\t\tsl_rate: 40,\n\t\texchange: 'binance',\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n        name=\"strategy_name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"startup_amount\"\n        label=\"Startup Amount\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"take_profit\"\n        label=\"TakeProfit\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"tp_rate\"\n        label=\"TakeProfitRate\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"stop_loss\"\n        label=\"StopLoss\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"sl_rate\"\n        label=\"StopLossRate\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"exchange\"\n        label=\"Exchange\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"Select a option and change input text above\"\n          onChange={this.onExchangeChange}\n          allowClear\n        >\n          <Option value=\"okex\">okex</Option>\n          <Option value=\"huobi\">huobi</Option>\n          <Option value=\"binance\">binance</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        noStyle\n        shouldUpdate={(prevValues, currentValues) => prevValues.exchange !== currentValues.exchange}\n      >\n        {({ getFieldValue }) =>\n          getFieldValue('exchange') === 'okex' ? (\n            <Form.Item\n              name=\"passphrase\"\n              label=\"passphrase\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          ) : null\n        }\n      </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default StrategyNewForm;","import React, { useEffect, useState } from 'react'\n// import { Modal, Button } from 'antd';\n// import BigNumber from \"bignumber.js\";\n// import { Form, Input, Checkbox } from 'antd';\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport { Form_StrategistPreConfirmed, Form_StrategistMidDisagree, Form_StrategistConfirmed } from '../common/js/instanceStatusHandleForm';\nimport StrategyNewForm from './StrategyNewForm';\n\nconst { Column } = Table;\n\nexport default function Admin(props) {\n  const { quantContract, connected, account } = props;\n  const c = quantContract;\n  const [mainLoading, setMainLoading] = useState(true);\n  const [allStrategiesName, setAllStrategiesName] = useState(null);\n  const [allStrategies, setAllStrategies] = useState(null);\n  const [myCreatedStrategies, setMyCreatedStrategies] = useState([]);\n  const [allInstances, setAllInstances] = useState(null);\n  // const [allInstancesOfStrategist, setAllInstancesOfStrategist] = useState(null);\n\n  useEffect(() => {\n    if (connected) {\n      loadData();\n    }\n  }, [quantContract]);\n\n  const loadData = async () => {\n    // const _allStrategies = await c.methods.getAllStrategies().call(); \n    // console.log(\"loadData _allStrategies: \", _allStrategies);\n    // setAllStrategies(_allStrategies);\n    const _myCreatedStrategies = await c.methods.get_all_StrategyInfo_x_strategiest(account).call();\n    console.log(\"loadData get_all_StrategyInfo_x_strategiest _myCreatedStrategies: \", _myCreatedStrategies);\n    // setMyCreatedStrategies(_myCreatedStrategies);\n    setMyCreatedStrategies(formatAllStrategies(_myCreatedStrategies));\n\n    const _allInstances = await c.methods.getAllInstances().call();\n    console.log(\"loadData _allInstances: \", _allInstances);\n    // setAllInstances(_allInstances);\n    setAllInstances(formatAllInstances(_allInstances));\n\n  }\n\n  // 定时自动刷新\n  const loadDataAuto = async () => {\n    loadData();\n  }\n  setInterval(() => {\n    console.log(\"Date: \", Date())\n    if (quantContract) {\n      loadDataAuto();\n    }\n  }, 300000);\n\n  // start strategy handle ---------------------------------------------------------------------\n\n  const get_all_StrategyInfo_x_strategiest = async (strategist_address) => {\n    console.log(\"get_all_StrategyInfo_x_strategiest => strategist_address: \", strategist_address);\n    const _myCreatedStrategies = await c.methods.get_all_StrategyInfo_x_strategiest(strategist_address).call();\n    console.log(\"getAllStrategies _myCreatedStrategies: \", _myCreatedStrategies);\n    setMyCreatedStrategies(_myCreatedStrategies);\n  }\n\n  const set_strategy_status_running = async (id) => {\n    console.log(\"set_strategy_status_running => id: \", id);\n    // await c.methods.set_strategy_status_running(id)\n    await c.methods.set_strategy_status_x_id_status(id, 1)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  const set_strategy_status_stop = async (id) => {\n    console.log(\"set_strategy_status_stop => id: \", id);\n    // await c.methods.set_strategy_status_stop(id)\n    await c.methods.set_strategy_status_x_id_status(id, 2)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  const set_strategy_status_unavailable = async (id) => {\n    console.log(\"set_strategy_status_unavailable => id: \", id);\n    // await c.methods.set_strategy_status_unavailable(id)\n    await c.methods.set_strategy_status_x_id_status(id, 3)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  // start instance handle ---------------------------------------------------------------------\n\n  // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n  // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n  // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n  // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n  // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n  // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n  // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n  // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n  // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n  // _instance_status == 9 set_instance_status_Settled(instance_id);\n\n  const set_instance_status_StrategistPreConfirmed = async (obj) => {\n    // const { final_amount } = obj;\n    const final_amount = parseInt(obj.final_amount);\n    console.log(\"set_instance_status_StrategistPreConfirmed final_amount: \", final_amount);\n    const instance_id = parseInt(obj.instance_id);\n    console.log(\"set_instance_status_StrategistPreConfirmed instance_id: \", instance_id);\n    await c.methods.set_instance_status_x_id_status(instance_id, 1, final_amount)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n  const set_instance_status_StrategistMidDisagree = async (obj) => {\n    // const { final_amount } = obj;\n    const final_amount = parseInt(obj.final_amount);\n    console.log(\"set_instance_status_StrategistMidDisagree final_amount: \", final_amount);\n    const instance_id = parseInt(obj.instance_id);\n    console.log(\"set_instance_status_StrategistMidDisagree instance_id: \", instance_id);\n    await c.methods.set_instance_status_x_id_status(instance_id, 3, final_amount)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n  const set_instance_status_StrategistConfirmed = async (obj) => {\n    // const { final_amount } = obj;\n    const final_amount = parseInt(obj.final_amount);\n    console.log(\"set_instance_status_StrategistConfirmed final_amount: \", final_amount);\n    const instance_id = parseInt(obj.instance_id);\n    console.log(\"set_instance_status_StrategistConfirmed final_amount: \", final_amount);\n    await c.methods.set_instance_status_x_id_status(instance_id, 4, final_amount)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  // helper 函数 -------------------------------------------------------------------\n  const changeExpand_StrategistPreConfirmed = (index) => {\n    allInstances.splice(index, 1, { ...allInstances[index], isExpand_StrategistPreConfirmed: !allInstances[index].isExpand_StrategistPreConfirmed })\n    console.log({ 'i item.isExpand_StrategistPreConfirmed: ': allInstances[index].isExpand_StrategistPreConfirmed })\n    setMainLoading(!mainLoading);\n  }\n  const changeExpand_StrategistMidDisagree = (index) => {\n    allInstances.splice(index, 1, { ...allInstances[index], isExpand_StrategistMidDisagree: !allInstances[index].isExpand_StrategistMidDisagree })\n    console.log({ 'i item.isExpand_StrategistMidDisagree: ': allInstances[index].isExpand_StrategistMidDisagree })\n    setMainLoading(!mainLoading);\n  }\n  const changeExpand_StrategistConfirmed = (index) => {\n    allInstances.splice(index, 1, { ...allInstances[index], isExpand_StrategistConfirmed: !allInstances[index].isExpand_StrategistConfirmed })\n    console.log({ 'i item.isExpand_StrategistConfirmed: ': allInstances[index].isExpand_StrategistConfirmed })\n    setMainLoading(!mainLoading);\n  }\n  // test --------------------------------------------------\n  const bignubmer_to_string = (bn) => {\n    console.log(\"bignubmer_to_string bn: \", bn)\n    // let x = 1; // new BigNumber(123.4567);\n    // let st =  x.toString();\n    console.log(bn.toString())\n    return bn.toString();\n  }\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const new_strategy = async (obj) => {\n    console.log(\"new_strategy obj: \", obj);\n    const strategy_name = obj.strategy_name;\n    const startup_amount = obj.startup_amount;\n    const take_profit = obj.take_profit;\n    const tp_rate = obj.tp_rate;\n    const stop_loss = obj.stop_loss;\n    const sl_rate = obj.sl_rate;\n    const exchange = obj.exchange;\n    await c.methods.new_strategy(strategy_name, startup_amount, take_profit, tp_rate, stop_loss, sl_rate, exchange)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n  // new_strategy(string memory _strategy_name, uint256 _strategy_startup_amount, uint256 _take_profit, uint256 _tp_rate, string memory _exchange) public payable returns (bool result) {\n\n  const getStrategyStatus = async (_strategy_name) => {\n    console.log(\"getStrategyStatus => _strategy_name: \", _strategy_name);\n    // await c.methods.getStrategyStatus(_strategy_name).call();\n    const aStrategyStatus = await c.methods.getStrategyStatus(_strategy_name).call()\n    console.log(\"getStrategyStatus => aStrategyStatus：\", aStrategyStatus);\n    console.log(\"getStrategyStatus => end\");\n    return aStrategyStatus;\n  }\n\n  const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n  const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n  return (\n    <div>\n      <div className=\"row mt-4\">\n        {!connected &&\n          <div className=\"d-flex justify-content-center align-items-center \">\n            <h3>请连接钱包</h3>\n          </div>\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 &&\n          <div className=\"d-flex justify-content-center align-items-center \">\n            {/* <p>我创建的</p> */}\n            {/* <p>我创建的策略列表</p> */}\n            <h3>我创建的策略列表</h3>\n          </div>\n        }\n        {\n          console.log(\" myCreatedStrategies ----------------------------- \", myCreatedStrategies)\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 && myCreatedStrategies.map((item) => {\n          console.log(\" item ----------------------------- \", item)\n\n          return (\n            // <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n            //   <p>{item.strategy_id.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.name.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.sender.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.strategy_startup_amount.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.take_profit.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.tp_rate.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.stop_loss.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.sl_rate.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.exchange.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.status}</p>\n            //    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <button onClick={() => { set_strategy_status_running(item.strategy_id) }} >Run</button>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <button onClick={() => { set_strategy_status_stop(item.strategy_id) }} >Stop</button>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <button onClick={() => { set_strategy_status_unavailable(item.strategy_id) }} >Unavailable</button>\n            // </div>\n            <div key={item.id}>\n            <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                    <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                    <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                    <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                    <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                    <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                    <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                    <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                    <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                    <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                    <Column\n                        title=\"Run\"\n                        key=\"Run\"\n                        render={(text, record) => (\n                            <Space size=\"middle\">\n                            <button onClick={() => set_strategy_status_running(item.strategy_id) }>运行</button>\n                            </Space>\n                        )}\n                    />\n                    <Column\n                        title=\"Stop\"\n                        key=\"Stop\"\n                        render={(text, record) => (\n                            <Space size=\"middle\">\n                            <button onClick={() => set_strategy_status_stop(item.strategy_id) }>停止</button>\n                            </Space>\n                        )}\n                    />\n                    <Column\n                        title=\"Unavailable\"\n                        key=\"Unavailable\"\n                        render={(text, record) => (\n                            <Space size=\"middle\">\n                            <button onClick={() => set_strategy_status_unavailable(item.strategy_id) }>不可用</button>\n                            </Space>\n                        )}\n                    /> \n                </Table>\n            </div> \n        </div>\n          )\n        })\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 &&\n          <div className=\"d-flex justify-content-center align-items-center \">\n            {/* <p>我创建的</p> */}\n            <h3>我的 客户/实例 列表</h3>\n          </div>\n        }\n\n        {/* {allInstances && allInstances.map((item) => {\n          if (item.sender == account) {\n            return (\n              <div>\n                <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n\n                  <p>{item.instance_id.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.strategy_id.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.name.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.sender.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.strategy_startup_amount.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.take_profit.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.stop_loss.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.tp_rate.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.exchange.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.status}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.status}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.user_address}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.apikey}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button onClick={() => { set_instance_status_StrategistPreConfirmed(item.instance_id, 10010) }} >StrategistPreConfirmed 参与时确认</button>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button onClick={() => { set_instance_status_StrategistMidDisagree(item.instance_id, 10010) }} >StrategistMidDisagree 中途不同意</button>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button onClick={() => { set_instance_status_StrategistConfirmed(item.instance_id, 10010) }} >StrategistConfirmed 策略停止运行确认</button>\n\n\n                </div> \n              </div>\n            )\n          }\n        })\n        } */}\n        { myCreatedStrategies && myCreatedStrategies.length > 0 && allInstances && allInstances.map((item, index) => {\n          if (item.sender == account) {\n            return (\n              <div>\n                <div key={item.id}>\n                  <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                      <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                      <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                      <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                      <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                      <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                      <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                      <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                      <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                      <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                      <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                      <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\" />\n                      <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\" />\n                      <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\" />\n                      <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                      <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" />\n                      {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                      <Column\n                        title=\"StrategistPreConfirmed\"\n                        key=\"StrategistPreConfirmed\"\n                        render={(text, record) => (\n                          <Space size=\"middle\">\n                            {/* <button onClick={() => set_instance_status_StrategistPreConfirmed(item.instance_id) }>仲裁User对</button> */}\n                            <button onClick={() => changeExpand_StrategistPreConfirmed(index)}>实例运行前确认</button>\n                          </Space>\n                        )}\n                      />\n                      <Column\n                        title=\"StrategistMidDisagree\"\n                        key=\"StrategistMidDisagree\"\n                        render={(text, record) => (\n                          <Space size=\"middle\">\n                            {/* <button onClick={() => set_instance_status_StrategistMidDisagree(item.instance_id) }>仲裁Strategist对</button> */}\n                            <button onClick={() => changeExpand_StrategistMidDisagree(index)}>策略师不同意</button>\n                          </Space>\n                        )}\n                      />\n                      <Column\n                        title=\"StrategistConfirmed\"\n                        key=\"StrategistConfirmed\"\n                        render={(text, record) => (\n                          <Space size=\"middle\">\n                            {/* <button onClick={() => set_instance_status_StrategistConfirmed(item.instance_id) }>已经结算</button> */}\n                            <button onClick={() => changeExpand_StrategistConfirmed(index)}>实例运行后确认</button>\n                          </Space>\n                        )}\n                      />\n                    </Table>\n                  </div>\n                  {\n                    item.isExpand_StrategistPreConfirmed ?\n                      <div className='strategy-form' >\n                        set_instance_status_StrategistPreConfirmed  {item.instance_id}\n                        <br></br>\n                        <Form_StrategistPreConfirmed set_instance_status_StrategistPreConfirmed={set_instance_status_StrategistPreConfirmed.bind(this)} />\n                      </div>\n                      : null\n                  }\n                  {\n                    item.isExpand_StrategistMidDisagree ?\n                      <div className='strategy-form' >\n                        set_instance_status_StrategistMidDisagree  {item.instance_id}\n                        <br></br>\n                        <Form_StrategistMidDisagree set_instance_status_StrategistMidDisagree={set_instance_status_StrategistMidDisagree.bind(this)} />\n                      </div>\n                      : null\n                  }\n                  {\n                    item.isExpand_StrategistConfirmed ?\n                      <div className='strategy-form' >\n                        set_instance_status_StrategistConfirmed  {item.instance_id}\n                        <br></br>\n                        <Form_StrategistConfirmed set_instance_status_StrategistConfirmed={set_instance_status_StrategistConfirmed.bind(this)} />\n                      </div>\n                      : null\n                  }\n                </div>\n              </div>\n            )\n          }\n        })\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length == 0 &&\n          <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n            <h3>成为策略师？</h3>\n          </div>\n        }\n        {connected && // myCreatedStrategies && myCreatedStrategies.length > 0 &&\n          <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n            <h3>添加一个新策略！ </h3>\n            <h3>填写右边表单</h3>\n            <div>\n              <StrategyNewForm newStrategy={new_strategy.bind(this)} />\n            </div>\n          </div>\n        }  \n\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport \"../css/CustomButtons.css\"\nimport \"../css/MainBackground.css\"\nimport { useParams } from 'react-router';\nimport { FormattedMessage } from 'react-intl'\nimport StrategyUseForm from './StrategyUseForm';\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport  { Form_UserMidDisagree } from '../common/js/instanceStatusHandleForm';\n\nconst { Column } = Table;\n\nexport default function Main(props) {\n    const { account, quantContract, connected, ConnectAccount, ticketPrice } = props;\n    const c = quantContract;\n    const { referCode } = useParams();\n    const [playerRefferalCode, setPlayerRefferalCode] = useState(null);\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allStrategiesOfUser, setAllStrategiesOfUser] = useState(null);\n    const [allInstancesOfUser, setAllInstancesOfUser] = useState(null);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const connectToAccount = () => {\n        if (!connected) {\n            setMainLoading(true);\n            ConnectAccount()\n        }\n    }\n\n    const loadData = async () => { \n        console.log(\"loadData\"); \n        const _allStrategiesOfUser = await c.methods.getAllStrategiesOfUser(account).call(); \n        console.log(\"loadData _allStrategiesOfUser: \", _allStrategiesOfUser);\n        setAllStrategiesOfUser(formatAllStrategies(_allStrategiesOfUser));\n        const _allInstancesOfUser = await c.methods.getAllInstancesOfUser(account).call(); \n        console.log(\"loadData _allInstancesOfUser: \", _allInstancesOfUser);\n        setAllInstancesOfUser(formatAllInstances(_allInstancesOfUser));\n\n    }\n\n    const loadDataAuto = async () => {\n        console.log(\"loadDataAuto\");\n        loadData();\n    }\n    setInterval(() => {\n        if (quantContract) {\n\n            loadDataAuto();\n        }\n    }, 300000);\n\n    // start instance handle ---------------------------------------------------------------------\n    \n\n    const new_instance = async (obj) => {\n        console.log(\"new_instance obj: \", obj);\n        const strategy_name = obj.strategy_name || \"\";\n        const strategy_id = obj.strategy_id;\n        const apikey = obj.apikey;\n        const secretkey = obj.secretkey;\n        const passphrase = obj.passphrase || \"\";\n        const exchange = obj.exchange;\n        // const take_profit = obj.take_profit.toString();\n        const take_profit = obj.take_profit;\n        const initial_amount = obj.initial_amount;\n        console.log(\"new_instance strategy_id: \", strategy_id);\n        console.log(\"new_instance apikey: \", apikey);\n        console.log(\"new_instance secretkey: \", secretkey);\n        console.log(\"new_instance passphrase: \", passphrase);\n        await c.methods.new_instance(strategy_id, initial_amount, apikey, secretkey, passphrase)\n        .send({ from: account, value: take_profit })\n        // .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n    // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n    // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n    // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n    // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n    // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n    // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n    // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n    // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n    // _instance_status == 9 set_instance_status_Settled(instance_id);\n    const set_instance_status_UserPreConfirmed = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_UserPreConfirmed final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_UserPreConfirmed instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 0, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const set_instance_status_UserMidDisagree = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_UserMidDisagree final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_UserMidDisagree instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 2, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_UserConfirmed = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = 0;\n        console.log(\"set_instance_status_UserConfirmed final_amount: \", final_amount); \n        console.log(\"set_instance_status_UserConfirmed instance_id: \", instance_id); \n        // const instance_id = new Number(obj.instance_id);\n        // const instance_id = Number(obj.instance_id);\n        const instance_id = parseInt(obj.instance_id);\n        // const instance_id = 1;\n        console.log(\"set_instance_status_UserConfirmed instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 5, 0)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const changeExpand = (index) => {\n        allStrategiesOfUser.splice(index, 1, {...allStrategiesOfUser[index], isExpand: !allStrategiesOfUser[index].isExpand, id: allStrategiesOfUser[index].name + Date.now()})\n        console.log({'i item.isExpand: ': allStrategiesOfUser[index].isExpand}) \n        setMainLoading(!mainLoading);\n    }\n\n    const changeExpand_UserMidDisagree = (index) => {\n        allInstancesOfUser.splice(index, 1, {...allInstancesOfUser[index], isExpand_UserMidDisagree: !allInstancesOfUser[index].isExpand_UserMidDisagree})\n        console.log({'i item.isExpand_UserMidDisagree: ': allInstancesOfUser[index].isExpand_UserMidDisagree})\n        setMainLoading(!mainLoading);\n    }\n\n    const use_strategy1 = async (obj) => {\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n    }\n\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n    return (\n        // <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\n        <div className=\"row mt-4\"> \n            {!connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <h3>请连接钱包</h3>\n                </div>\n            } \n            \n            {connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <h3>所有策略</h3>\n                    </div>\n                }\n            \n            {/* { allStrategiesOfUser && allStrategiesOfUser.map((item) => {\n                return (\n                    <div>\n                        <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            \n                            <p>{item.strategy_id.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.name.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.sender.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.strategy_startup_amount.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.take_profit.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.stop_loss.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.tp_rate.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.exchange.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.status}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button>再次使用</button>\n                        </div>\n                    \n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            \n                        </div>\n                        <div>\n                            <br></br>\n                            <StrategyUseForm new_instance={new_instance.bind(this)}/>\n                        </div>\n                    </div> \n                )\n                })\n            } */}\n            { allStrategiesOfUser && allStrategiesOfUser.map((item, index) => {\n                return (\n                    <div key={item.id}>\n                        <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                                <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                <Column\n                                    title=\"Action\"\n                                    key=\"action\"\n                                    render={(text, record) => (\n                                        <Space size=\"middle\">\n                                        <button onClick={() => changeExpand(index)}>使用策略</button>\n                                        </Space>\n                                    )}\n                                />\n                            </Table>\n                        </div>\n                        {\n                            item.isExpand ? \n                                <div className='strategy-form' >\n                                    <br></br>\n                                    <StrategyUseForm formOption={item} new_instance={new_instance.bind(this)}/>\n                                </div>\n                            : null\n                        }\n                    </div>\n                )\n                })\n            }\n            {connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    {/* <p>All Instances</p> */}\n                    <h3>所有实例</h3>\n                </div>\n            } \n            \n            { allInstancesOfUser && allInstancesOfUser.map((item, index) => {\n                return (\n                    <div>\n                        {/* <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            \n                            <p>{item.instance_id.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.strategy_id.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.name.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.sender.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.strategy_startup_amount.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.take_profit.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.stop_loss.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.tp_rate.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.exchange.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.status}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.status}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.user_address}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.apikey}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button onClick={() => { set_instance_status_UserMidDisagree(item.instance_id) }} >UserMidDisagree 中途不同意</button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button onClick={() => { set_instance_status_UserConfirmed(item.instance_id) }} >UserConfirmed 策略停止运行确认</button>\n                            \n\n                        </div>  */}\n\n                        <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" />\n                                        <Column title=\"strategy_id\" dataIndex=\"strategy_id\" key=\"strategy_id\" />\n                                        <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\n                                        <Column title=\"sender\" dataIndex=\"sender\" key=\"sender\" />\n                                        <Column title=\"strategy_startup_amount\" dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title=\"take_profit\" dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title=\"stop_loss\" dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title=\"tp_rate\" dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title=\"exchange\" dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title=\"status\" dataIndex=\"statusText\" key=\"status\" />\n                                        <Column title=\"user_address\" dataIndex=\"user_address\" key=\"user_address\" />\n                                        <Column title=\"apikey\" dataIndex=\"apikey\" key=\"apikey\" />\n                                        <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\" />\n                                        <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                                        <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" />\n                                        {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                                        <Column\n                                            title=\"UserMidDisagree\"\n                                            key=\"UserMidDisagree\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_UserMidDisagree(item.instance_id) }>User不同意</button> */}\n                                                <button onClick={() => changeExpand_UserMidDisagree(index) }>User不同意</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"UserConfirmed\"\n                                            key=\"UserConfirmed\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_instance_status_UserConfirmed({instance_id:item.instance_id}) }>策略停止运行，确认</button>\n                                                </Space>\n                                            )}\n                                        /> \n                                    </Table> \n                                </div>\n                                {\n                                    item.isExpand_UserMidDisagree ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_UserMidDisagree  {item.instance_id}\n                                            <br></br>\n                                            <Form_UserMidDisagree set_instance_status_UserMidDisagree={set_instance_status_UserMidDisagree.bind(this)}/>\n                                        </div>\n                                    : null\n                                }\n                            </div> \n                    </div>\n                )\n                })\n            }\n        </div >\n    )\n}\n","import React, { useEffect, useState } from 'react'\n\nexport default function Banner(props) {\n    \n    return (\n        <div className=\"banner-img-bg mx-md-5 text-light  py-4 \">\n            <div className=\"d-md-flex align-items-center justify-content-between text-center\">\n                    <div className=\"glow-div2 glassBg-box-timer text-center\">\n                        <h2 className=\"my-4\">Play Game</h2>\n                    </div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nexport default function Howtoplay() {\n    return (\n        <div className=\"text-light glassBg-box p-5 m-5\">\n            <h1><FormattedMessage id=\"faq_title\" defaultMessage=\"FAQ\"/></h1>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_risk\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_risk\" defaultMessage=\"answer\"/></p>\n            \n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_1\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_1\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_2\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_2\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_3\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_3\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_4\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_4\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_5\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_5\" defaultMessage=\"answer\"/></p>\n            \n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\n\nimport Web3 from \"web3\";\nimport QuantJson from \"./abis/Quant.json\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nimport Home from \"./components/Home\";\nimport Main from \"./components/Main\";\n\nimport \"./css/main.css\";\nimport Navbar from \"./components/Navbar\";\nimport Admin from \"./components/Admin\";\nimport Auditor from \"./components/Auditor\";\nimport Strategist from \"./components/Strategist\";\nimport User from \"./components/User\";\nimport Banner from \"./components/Banner\";\nimport Howtoplay from \"./components/Howtoplay\";\nimport Rule from \"./components/Rule\";\nimport Donation from \"./components/Donation\";\nimport Contact from \"./components/Contact\";\n\nclass App extends Component {\n\n  async componentWillMount() {\n    this.setState({ loading: false });\n  }\n\n  async ConnectAccount() {\n    await this.loadWeb3();\n  };\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      this.loadBlockChatData();\n\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n      this.loadBlockChatData();\n\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n \n  async loadBlockChatData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    web3.eth.defaultAccount = accounts[0];\n    this.setState({ account: accounts[0] });\n\n    const networkId = await web3.eth.net.getId();\n    console.log(\"app.jsx loadBlockChatData networkId: \", networkId);\n\n    // const networkData = LotteryJson.networks[networkId];\n    \n    // if (networkData) {\n    if (networkId === 80001 || networkId === 137 || networkId == 1337) {\n      this.setState({ connected: true });\n      const CONTACT_ADDRESS = '0x5A41E5B354d411968ffB903E75DaF5d8Fe61EC7b';\n      // const CONTACT_ADDRESS = '0x4202E7A3d5947A7A780a0ec2c1A29519342B5Cc2';\n      console.log(\"CONTACT_ADDRESS\");\n      console.log(CONTACT_ADDRESS);\n      // const quantContract = await web3.eth.Contract(LotteryJson.abi, networkAddress);\n      const CONTACT_ABI = QuantJson.abi;\n\t    const quantContract = await web3.eth.Contract(CONTACT_ABI, CONTACT_ADDRESS);\n      const networkAddress = CONTACT_ADDRESS;\n      this.setState({ quantContract });\n      this.setState({ networkAddress });\n      this.setState({ networkId });\n      if (networkId === 80001) {\n          this.setState({ blockExplorerUrl: \"https://mumbai.polygonscan.com/address/\"+networkAddress });\n      } else if (networkId === 137) {\n          this.setState({ blockExplorerUrl: \"https://polygonscan.com/address/\"+networkAddress });\n      } else if (networkId === 1337) {\n        this.setState({ blockExplorerUrl: \"https://polygonscan.com/address/\"+networkAddress });\n      } else {\n        this.setState({ blockExplorerUrl: \"https://polygonscan.com/address/\"+networkAddress });\n      }\n      this.setState({ ticketPrice: \"1\" });\n\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Blockchat contract not deployed to detected network.\");\n      this.switchToPolygonTestNet()\n    }\n  }\n\n  \n  async switchToPolygonTestNet(){\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x13881\" }],\n      });\n      this.loadBlockChatData();\n    } catch (error) {\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: \"0x13881\",\n                chainName: \"Polygon TestNet Mumbai\",\n                rpcUrls: [\"https://rpc-mumbai.maticvigil.com/\"],\n                nativeCurrency: {\n                  name: \"Matic\",\n                  symbol: \"Matic\",\n                  decimals: 18,\n                },\n                // blockExplorerUrls: [\"https://explorer-mumbai.maticvigil.com\"],\n                blockExplorerUrls: [\"https://mumbai.polygonscan.com\"],\n              },\n            ],\n          });\n          this.loadBlockChatData();\n\n        } catch (error) {\n        }\n      }\n    }\n  }\n\n\n  async switchToPolygonMainnet() {\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x89\" }],\n      });\n      this.loadBlockChatData();\n    } catch (error) {\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: \"0x89\",\n                chainName: \"Polygon Mainnet\",\n                rpcUrls: [\"https://rpc-mainnet.maticvigil.com/\"],\n                nativeCurrency: {\n                  name: \"Matic\",\n                  symbol: \"Matic\",\n                  decimals: 18,\n                },\n                // blockExplorerUrls: [\"https://explorer.matic.network/\"],\n                blockExplorerUrls: [\"https://polygonscan.com/\"],\n              },\n            ],\n          });\n          this.loadBlockChatData();\n\n        } catch (error) {\n        }\n      }\n    }\n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      connected: false,\n      account: \"\",\n      gameStartDate: 0,\n      quantContract: null,\n      ticketPrice: 10**18,\n      // ticketPrice: 0.1 * 10**18, // 0.1 matic\n      loading: true,\n    };\n    // console.log(\" this.state \", this.state)\n    this.ConnectAccount = this.ConnectAccount.bind(this)\n  }\n\n  render() {\n    return (!this.state.loading\n      ?\n      <HashRouter>\n        <Navbar account={this.state.account} ConnectAccount={this.ConnectAccount} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Banner gameStartDate={this.state.gameStartDate} />\n            <Home account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n          \n          <Route path=\"/main\" exact>\n            <Banner gameStartDate={this.state.gameStartDate} />\n            <Main account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/admin\" exact>\n            <Admin account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/strategist\" exact>\n            <Strategist account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/user\" exact>\n            <User account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/auditor\" exact>\n            <Auditor account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/how-to-play\" exact>\n            <Howtoplay />\n          </Route >\n\n          {/* <Route path=\"/rule\" exact>\n            <Rule />\n          </Route >\n\n          <Route path=\"/donation\" exact>\n            <Donation />\n          </Route >\n\n          <Route path=\"/contact\" exact>\n            <Contact />\n          </Route > */}\n\n        </Switch >\n      </HashRouter >\n      :\n      <div className=\"text-center\">\n        loading...\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const zh_CN = {\n    start: '开始',\n    // switch: 'English',\n    switch: 'EN',\n\n    main_plear_connect_wallet:\"请登录\", // \"请连接钱包登录\"\n    \n    nav_quant:\"Q\", // \"Quant\", // 左上角标签\n    nav_main:\"广场\",\n    nav_admin:\"管理员\",\n    nav_strategist:\"策略师\", // \"策略师\", // \"师傅\", \n    nav_user:\"用户\",\n    nav_auditor:\"审核员\",\n    nav_faq:\"问题\",\n    nav_rule:\"规则\",\n    nav_donation:\"捐赠\",\n    nav_contact:\"联系\",\n\n\n    rule_time:\"规则\",\n    rule_game_rule:\"活动规则\",\n    rule_game_rule_1:\"\",\n    rule_game_rule_2:\"\",\n    rule_game_rule_3:\"\",\n    rule_game_rule_4:\"\",\n    rule_game_rule_5:\"\",\n    rule_game_rule_6:\"\",\n\n\n    faq_title:\"常见问题\",\n    faq_question_risk:\"实例什么时候结束？\",\n    faq_answer_risk:\"实例状态为：5，6，7，8，9 时。\",\n\n    faq_question_1:\"实例状态数值分别代表什么意思？\",\n    faq_answer_1:\"0: 用户参与, 请策略师确认用户提交信息（包含：apikey 与 初始金额）。1: 策略师认可用户的提交信息。2: 用户中途不同意。3: 策略师中途不同意。4: 策略师提交信息，请求用户确认。5: 用户认可策略师提交的信息（包含：最终金额）。 6: 仲裁，认可用户正确。7: 仲裁，认可策略师正确。8: 未结算。9: 已经结算。\",\n\n    donation_title:\"为这次游戏捐赠吧！\",\n    contact_title:\"联系方式\",\n\n    zzz: \"zzz\",\n  }\nexport default zh_CN\n  \n","const en_US = {\n    start: 'start',\n    switch: 'CN',\n\n    main_plear_connect_wallet:\"Please Connect to your Wallet for play game\",\n\n    nav_quant:\"Q\",\n    nav_main:\"Strategies\",\n    nav_admin:\"Admin\",\n    nav_strategist:\"Strategist\",\n    nav_user:\"User\",\n    nav_auditor:\"Auditor\",\n    nav_faq:\"FAQ\",\n    nav_rule:\"Rule\",\n    nav_donation:\"Donation\",\n    nav_contact:\"Contact\",  \n\n    rule_time:\"Rule\",\n    rule_game_rule:\"Rules of the game\",\n    // rule_game_rule_1:\"Rule 1\",\n    // rule_game_rule_2:\"Rule 2\",\n    // rule_game_rule_3:\"Rule 3\",\n    // rule_game_rule_4:\"Rule 4\",\n    // rule_game_rule_5:\"Rule 5\",\n    // rule_game_rule_6:\"Rule 6\",\n    rule_game_rule_1:\"\",\n    rule_game_rule_2:\"\",\n    rule_game_rule_3:\"\",\n    rule_game_rule_4:\"\",\n    rule_game_rule_5:\"\",\n    rule_game_rule_6:\"\",\n    \n    rule_draw_rule:\"\",\n    rule_draw_rule_1:\"\",\n    rule_draw_rule_2:\"\",\n    \n    rule_reward_rule: \"\",\n    rule_reward_rule_1:\"\",\n    rule_reward_rule_2:\"\",\n    rule_reward_rule_3:\"\",\n    rule_reward_rule_4:\"\",\n    rule_reward_rule_5:\"\",\n\n    faq_title:\"Frequently Asked Question\",\n    // faq_question_1:\"\",\n    // faq_answer_1:\"\",\n    // faq_question_2:\"\",\n    // faq_answer_2:\"\",\n    // faq_question_3:\"\",\n    // faq_answer_3:\"\",\n    // faq_question_4:\"\",\n    // faq_answer_4:\"\",\n    // faq_question_5:\"\",\n    // faq_answer_5:\"\",\n\n    donation_title:\"Please donate for this game.\",\n    contact_title:\"Contact\",\n    \n    zzz: \"zzz\",\n  }\nexport default en_US\n  \n","import React, { useContext } from 'react'\nimport { IntlProvider } from 'react-intl' // 包裹在需要语言国际化的组件的最外层，和react-redux的Provider一样 让组件和组件内的子组件都能使用react-intl提供的api和方法\nimport { mainContext } from '../reducer' // 这里使用的是useReducer 简单的在根目录下创建一个 来控制语言的全局状态维护\nimport zh_CN from './cn' // 中文包\nimport en_US from './en' // 英文包\n\nconst Inter = (props) => {\n    // 获取默认的语言设置 也可以配合一些全局状态管理进行结合使用 如redux Mobx或者react自身提供的useReducer等\n  const { state } = useContext(mainContext)\n  const chooseLocale = (val) => { \n    let _val = val || navigator.language.split('_')[0]\n    switch (_val) {\n      case 'en':\n        return en_US\n      case 'zh':\n        return zh_CN\n      default:\n        return en_US\n    }\n  }\n  let locale = state.locale || 'en' // 获取 locale\n  let { children } = props\n  // 包裹子组件 让子组件共享react-intl的api 实现多语言\n  return (\n    <IntlProvider\n      key={locale}\n      locale={locale}\n      defaultLocale='en'\n      messages={chooseLocale(locale)}\n    >\n      {children}\n    </IntlProvider>\n  )\n}\n\nexport default Inter\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nimport { ContextProvider } from './reducer'\nimport Inter from './locale/intl'\nconst Root = () => {\n    return (\n      <ContextProvider>\n        <Inter>\n          <App />\n        </Inter>\n      </ContextProvider>\n    );\n\n};\n\nReactDom.render(\n    <Root />,\n    // <App/>,\n    document.getElementById('root')\n)"],"sourceRoot":""}