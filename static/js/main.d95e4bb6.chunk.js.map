{"version":3,"sources":["components/Home.jsx","components/StrategyUseForm.js","common/js/statusTextMap.js","common/js/strategyTitleTextMap.js","common/js/tableTitle.js","common/js/tableTitleColumn.js","reducer.js","components/Main.jsx","components/Navbar.jsx","common/js/instanceStatusTextMap.js","common/js/formatHelper.js","common/js/instanceStatusHandleForm.js","common/js/configMap.js","components/Admin.jsx","components/Auditor.jsx","components/StrategyNewForm.js","components/Strategist.jsx","components/User.jsx","components/Banner.jsx","components/Howtoplay.jsx","App.jsx","locale/cn.js","locale/en.js","locale/intl.js","index.js"],"names":["Home","props","account","quantContract","connected","c","ConnectAccount","ticketPrice","_useState","useParams","referCode","useState","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","setAllStrategies","useEffect","loadData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_allStrategies","wrap","_context","prev","next","console","log","methods","getAllStrategies","call","sent","stop","apply","this","arguments","loadDataAuto","_ref2","_callee2","_context2","setInterval","react_default","createElement","className","Option","Select","layout","labelCol","span","wrapperCol","tailLayout","offset","StrategyUseForm","formRef","React","createRef","componentDidMount","formOption","_this","_this$props$formOptio","name","strategy_id","take_profit","current","setFieldsValue","strategy_name","apikey","moment","format","secretkey","passphrase","exchange","initial_amount","onExchangeChange","value","onFinish","values","new_instance","onReset","resetFields","onFill","es_form","assign","ref","Item","label","rules","required","input","input_number","es_select","placeholder","onChange","allowClear","noStyle","shouldUpdate","prevValues","currentValues","getFieldValue","es_button","type","htmlType","onClick","Component","statusTextMap","0","1","2","3","4","5","6","strategyTitleTextMap","sender","strategy_startup_amount","stop_loss","tp_rate","sl_rate","status","Action","instance_id","user_address","instance_status","getStrategyTitleText","Column","Table","getColumn","item","title","dataIndex","key","width","ellipsis","showTitle","render","tooltip","placement","mainContext","createContext","reducer","state","action","objectSpread","locale","strategy","ContextProvider","_useReducer","useReducer","_useReducer2","dispatch","Provider","children","Main","mainLoading","setMainLoading","_useState7","_useState8","allStrategies","_useState9","_useState10","allInstances","setAllInstances","_useState11","_useState12","splitInstance","_useContext","useContext","chageStrategy","setTimeout","_allInstances","forEach","toString","id","Date","now","statusText","getStatusText","isExpand","getAllInstances","_ref3","_callee3","obj","_context3","send","from","on","confirmationNumber","receipt","error","_x","map","index","table","dataSource","pagination","position","Main_Column","text","record","space","size","splice","i item.isExpand: ","changeExpand","components_StrategyUseForm","bind","Navbar","react_router_dom","to","message","defaultMessage","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","concat","substring","length","instanceStatusTextMap","7","8","9","formatAllStrategies","formatAllInstances","instance_status_text","isExpand_StrategistPreConfirmed","isExpand_StrategistMidDisagree","isExpand_UserMidDisagree","isExpand_StrategistConfirmed","isExpand_ArbitrateUserWin","isExpand_ArbitrateStrategistWin","isExpand_Settled","Form_StrategistPreConfirmed","set_instance_status_StrategistPreConfirmed","final_amount","Form_StrategistMidDisagree","_this2","set_instance_status_StrategistMidDisagree","Form_UserMidDisagree","_this3","set_instance_status_UserMidDisagree","Form_ArbitrateUserWin","_this4","set_instance_status_ArbitrateUserWin","Form_ArbitrateStrategistWin","_this5","set_instance_status_ArbitrateStrategistWin","Form_StrategistConfirmed","_this6","set_instance_status_StrategistConfirmed","Form_Settled","_this7","set_instance_status_Settled","configMap","contact_address","admin_address","auditor_address","Admin","set_strategy_status_active","_ref5","_callee5","_context5","set_strategy_status_x_id_status","set_strategy_status_deleted","_ref6","_callee6","_context6","_x2","set_strategy_status_stopped_x_admin","_ref7","_callee7","_context7","_x3","set_strategy_status_deleted_x_admin","_ref8","_callee8","_context8","_x4","_ref10","_callee10","_context10","parseInt","set_instance_status_x_id_status","_x6","_ref11","_callee11","_context11","_x7","_ref13","_callee13","_context13","_x9","includes","Admin_Column","i item.isExpand_ArbitrateUserWin: ","changeExpand_ArbitrateUserWin","i item.isExpand_ArbitrateStrategistWin: ","changeExpand_ArbitrateStrategistWin","i item.isExpand_Settled: ","changeExpand_Settled","instanceStatusHandleForm_Form_ArbitrateUserWin","instanceStatusHandleForm_Form_ArbitrateStrategistWin","instanceStatusHandleForm_Form_Settled","Auditor","_ref4","_callee4","_context4","Auditor_Column","StrategyNewForm","newStrategy","startup_amount","StrategyNewForm_Option","myCreatedStrategies","setMyCreatedStrategies","_myCreatedStrategies","get_all_StrategyInfo_x_strategiest","set_strategy_status_running","set_strategy_status_stop","set_strategy_status_unavailable","_x5","_ref9","_callee9","_context9","new_strategy","_x8","Strategist_Column","i item.isExpand_StrategistPreConfirmed: ","changeExpand_StrategistPreConfirmed","i item.isExpand_StrategistMidDisagree: ","changeExpand_StrategistMidDisagree","i item.isExpand_StrategistConfirmed: ","changeExpand_StrategistConfirmed","instanceStatusHandleForm_Form_StrategistPreConfirmed","instanceStatusHandleForm_Form_StrategistMidDisagree","instanceStatusHandleForm_Form_StrategistConfirmed","components_StrategyNewForm","allStrategiesOfUser","setAllStrategiesOfUser","allInstancesOfUser","setAllInstancesOfUser","_allStrategiesOfUser","_allInstancesOfUser","getAllStrategiesOfUser","getAllInstancesOfUser","set_instance_status_UserConfirmed","User_Column","i item.isExpand_UserMidDisagree: ","changeExpand_UserMidDisagree","instanceStatusHandleForm_Form_UserMidDisagree","Banner","Howtoplay","App","classCallCheck","_super","gameStartDate","Math","pow","loading","assertThisInitialized","setState","loadWeb3","window","ethereum","web3","Web3","enable","loadBlockChatData","currentProvider","alert","accounts","networkId","CONTACT_ADDRESS","CONTACT_ABI","networkAddress","eth","getAccounts","defaultAccount","net","getId","QuantJson","abi","Contract","blockExplorerUrl","switchToPolygonTestNet","request","method","params","chainId","t0","code","chainName","rpcUrls","nativeCurrency","symbol","decimals","blockExplorerUrls","t1","Navbar_Navbar","react_router","path","exact","Strategist_Admin","User_Main","zh_CN","start","switch","main_plear_connect_wallet","nav_quant","nav_main","nav_admin","nav_strategist","nav_user","nav_auditor","nav_faq","nav_rule","nav_donation","nav_contact","rule_time","rule_game_rule","rule_game_rule_1","rule_game_rule_2","rule_game_rule_3","rule_game_rule_4","rule_game_rule_5","rule_game_rule_6","faq_title","faq_question_risk","faq_answer_risk","faq_question_1","faq_answer_1","donation_title","contact_title","zzz","en_US","rule_draw_rule","rule_draw_rule_1","rule_draw_rule_2","rule_reward_rule","rule_reward_rule_1","rule_reward_rule_2","rule_reward_rule_3","rule_reward_rule_4","rule_reward_rule_5","Inter","provider","defaultLocale","messages","val","navigator","language","split","chooseLocale","Root","reducer_ContextProvider","intl","src_App","ReactDom","src_Root","document","getElementById"],"mappings":"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","file":"static/js/main.d95e4bb6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport \"../css/CustomButtons.css\"\nimport \"../css/MainBackground.css\"\nimport { useParams } from 'react-router';\nimport { FormattedMessage } from 'react-intl'\n\nexport default function Home(props) {\n    const { account, quantContract, connected, ConnectAccount, ticketPrice } = props;\n    const c = quantContract;\n    const { referCode } = useParams();\n    const [playerRefferalCode, setPlayerRefferalCode] = useState(null);\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allStrategies, setAllStrategies] = useState(null);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const connectToAccount = () => {\n        if (!connected) {\n            setMainLoading(true);\n            ConnectAccount()\n        }\n    }\n\n    const loadData = async () => { \n        console.log(\"loadData\"); \n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n\n    }\n\n    const loadDataAuto = async () => {\n        console.log(\"loadDataAuto\");\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n    }\n    setInterval(() => {\n        if (quantContract) {\n\n            loadDataAuto();\n        }\n    }, 300000);\n\n    return (\n        <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\n            \n            {/* <p>All for quant</p> */}\n            <h4>为交易而热血！</h4>\n            \n            {/* { allStrategies && allStrategies.map((item) => {\n                return (\n                    <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                        \n                        <p>{item.strategy_id.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.name.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.sender.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.strategy_startup_amount.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.take_profit.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.stop_loss.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.tp_rate.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.exchange.toString()}</p>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <p>{item.status}</p>\n                    </div>\n                )\n                })\n            } */}\n                \n        </div >\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nimport moment from \"moment\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass StrategyUseForm extends React.Component {\n  formRef = React.createRef();\n  componentDidMount = () => {\n    console.log({formOption: this.props.formOption})\n    const { name, strategy_id, take_profit } = this.props.formOption;\n    this.formRef.current.setFieldsValue({\n      strategy_name: name,\n      strategy_id,\n      apikey: \"your_api_key\"+ moment().format('YYYYMMDDHHmmss'),\n      secretkey: \"your_secret_key\"+ moment().format('YYYYMMDDHHmmss'),\n      passphrase: \"your_passphrase\"+ moment().format('YYYYMMDDHHmmss'),\n      exchange: 'binance',\n      take_profit,\n      initial_amount: 10001,\n      });\n  }\n\n  onExchangeChange = (value) => {\n    switch (value) {\n\t\tcase 'binance':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'okex':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'ok' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'huobi':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t  strategy_name: 'hb' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t\tcase 'other':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tstrategy_name: 'ot' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t  }\n\t};\n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.new_instance(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tstrategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\tstrategy_id: 1,\n\t\tapikey: \"your_api_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\tsecretkey: \"your_secret_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\tpassphrase: \"your_passphrase\"+ moment().format('YYYYMMDDHHmmss'),\n\t\texchange: 'binance',\n\t\ttake_profit: 2000,\n\t\tinitial_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n        name=\"strategy_name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n        <Form.Item\n        name=\"strategy_id\"\n        label=\"Strategy Id\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        {/* <Input /> */}\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"take_profit\"\n        label=\"TakeProfit\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"initial_amount\"\n        label=\"InitialAmount\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"exchange\"\n        label=\"Exchange\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"Select a option and change input text above\"\n          onChange={this.onExchangeChange}\n          allowClear\n        >\n          <Option value=\"okex\">okex</Option>\n          <Option value=\"huobi\">huobi</Option>\n          <Option value=\"binance\">binance</Option>\n        </Select>\n      </Form.Item>\n\n        <Form.Item\n        name=\"apikey\"\n        label=\"ApiKey\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n        <Form.Item\n        name=\"secretkey\"\n        label=\"SecretKey\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      \n      <Form.Item\n        noStyle\n        shouldUpdate={(prevValues, currentValues) => prevValues.exchange !== currentValues.exchange}\n      >\n        {({ getFieldValue }) =>\n          getFieldValue('exchange') === 'okex' ? (\n            <Form.Item\n              name=\"passphrase\"\n              label=\"passphrase\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          ) : null\n        }\n      </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default StrategyUseForm;","/* \nstrategy 状态\n\n0: '未激活',\n1: '运行中',\n2: '停止',\n3: '不可用',\n4: '删除',\n5: '强制停止',\n6: '强制删除',\n*/\n\nexport default {\n    0: '未激活',\n    1: '运行中',\n    2: '停止',\n    3: '不可用',\n    4: '删除',\n    5: '强制停止',\n    6: '强制删除',\n}","/* \nstrategy table title\n策略表格标题，汉化\n*/\n\nexport default {\n    \"strategy_id\": \"ID\",\n    \"name\": \"名称\",\n    \"sender\": \"创建者\",\n    \"strategy_startup_amount\": '起步金额',\n    \"take_profit\": \"盈利金额\",\n    \"stop_loss\": \"损失金额\",\n    \"tp_rate\": \"盈利分红比例\",\n    \"sl_rate\": \"损失赔偿比例\",\n    \"exchange\": \"交易所\",\n    \"status\": \"状态\",\n    \"Action\": \"操作\",\n\n    \"instance_id\": \"实例ID\",\n    \"user_address\":\"用户\",\n    \"apikey\":\"apikey\",\n    \"secretkey\":\"secretkey\",\n    \"passphrase\":\"passphrase\",\n    \"instance_status\":\"实例状态\",\n}","\r\nimport strategyTitleTextMap from './strategyTitleTextMap';\r\nimport instanceTitleTextMap from './instanceTitleTextMap';\r\n\r\nconst getStrategyTitleText = (status) => {\r\n    return strategyTitleTextMap[status] || '';\r\n}\r\n\r\nconst getInstanceTitleText = (status) => {\r\n    return instanceTitleTextMap[status] || '';\r\n}\r\n\r\n\r\nexport { \r\n    getStrategyTitleText, \r\n    getInstanceTitleText,\r\n};","import React, { useState } from 'react';\nimport { getStrategyTitleText } from './tableTitle';\nimport { Table, Tooltip } from 'antd';\nconst { Column } = Table;\n\nconst getColumn = (item) => {\n  if (item == \"instance_id\") {\n    // return <Column title=\"instance_id\" dataIndex=\"instance_id\" key=\"instance_id\" width={50}/>;\n    return <Column title={getStrategyTitleText(\"instance_id\")} dataIndex=\"instance_id\" key=\"instance_id\" width={50} />;\n  } else if (item == \"strategy_id\") {\n    return <Column title={getStrategyTitleText(\"strategy_id\")} dataIndex=\"strategy_id\" key=\"strategy_id\" width={50} />\n  } else if (item == \"name\") {\n    return <Column title={getStrategyTitleText(\"name\")} dataIndex=\"name\" key=\"name\" width={100} />\n  } else if (item == \"sender\") {\n    return <Column title={getStrategyTitleText(\"sender\")} dataIndex=\"sender\" key=\"sender\" width={160}\n      ellipsis={{ showTitle: false }}\n      render={sender => (\n        <Tooltip placement=\"topLeft\" title={sender}>\n          {sender}\n        </Tooltip>\n      )}\n    />\n  } else if (item == \"strategy_startup_amount\") {\n    return <Column title={getStrategyTitleText(\"strategy_startup_amount\")} dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n  } else if (item == \"take_profit\") {\n    return <Column title={getStrategyTitleText(\"take_profit\")} dataIndex=\"take_profit\" key=\"take_profit\" />\n  } else if (item == \"stop_loss\") {\n    return <Column title={getStrategyTitleText(\"stop_loss\")} dataIndex=\"stop_loss\" key=\"stop_loss\" />\n  } else if (item == \"tp_rate\") {\n    return <Column title={getStrategyTitleText(\"tp_rate\")} dataIndex=\"tp_rate\" key=\"tp_rate\" />\n  } else if (item == \"sl_rate\") {\n    return <Column title={getStrategyTitleText(\"sl_rate\")} dataIndex=\"sl_rate\" key=\"sl_rate\" />\n  } else if (item == \"exchange\") {\n    return <Column title={getStrategyTitleText(\"exchange\")} dataIndex=\"exchange\" key=\"exchange\" />\n  } else if (item == \"status\") {\n    return <Column title={getStrategyTitleText(\"status\")} dataIndex=\"statusText\" key=\"status\" />\n  } else if (item == \"user_address\") {\n    return <Column title={getStrategyTitleText(\"user_address\")} dataIndex=\"user_address\" key=\"user_address\" width={160}\n      ellipsis={{ showTitle: false }}\n      render={sender => (\n        <Tooltip placement=\"topLeft\" title={sender}>\n          {sender}\n        </Tooltip>\n      )} />\n  } else if (item == \"apikey\") {\n    return <Column title={getStrategyTitleText(\"apikey\")} dataIndex=\"apikey\" key=\"apikey\"\n      ellipsis={{ showTitle: false }}\n      render={sender => (\n        <Tooltip placement=\"topLeft\" title={sender}>\n          {sender}\n        </Tooltip>\n      )} />\n\n  } else if (item == \"secretkey\") {\n    return <Column title={getStrategyTitleText(\"secretkey\")} dataIndex=\"secretkey\" key=\"secretkey\" width={160} ellipsis={true} />\n  } else if (item == \"passphrase\") {\n    return <Column title={getStrategyTitleText(\"passphrase\")} dataIndex=\"passphrase\" key=\"passphrase\" />\n  } else if (item == \"instance_status\") {\n    return <Column title={getStrategyTitleText(\"instance_status\")} dataIndex=\"instance_status_text\" key=\"instance_status\" />\n  }\n}\n\nexport {\n  getColumn\n};","import React, { useReducer } from 'react'\nconst CHANGE_LOCALE = 'CHANGE_LOCALE'\nconst CHANGE_STRATEGY = 'CHANGE_STRATEGY'\n\nconst mainContext = React.createContext()\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case CHANGE_LOCALE:\n      return { ...state, locale: action.locale || 'en' }\n    case CHANGE_STRATEGY:\n      return { ...state, strategy: action.strategy }\n    default:\n      return state\n  }\n}\n\nconst ContextProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, {\n    locale: 'zh',\n    strategy: []\n  })\n  return (\n    <mainContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </mainContext.Provider>\n  )\n}\n\nexport { reducer, mainContext, ContextProvider }\n\n","import React, { useEffect, useState } from 'react'\nimport { Table, Tooltip , Space } from 'antd';\n\nimport \"../css/CustomButtons.css\"\nimport \"../css/MainBackground.css\"\nimport { useParams } from 'react-router';\nimport { FormattedMessage } from 'react-intl'\nimport StrategyUseForm from './StrategyUseForm';\nimport statusTextMap from '../common/js/statusTextMap';\nimport { getStrategyTitleText } from '../common/js/tableTitle';\nimport { getColumn } from '../common/js/tableTitleColumn';\nimport { useContext} from 'react'\nimport { mainContext } from '../reducer'\n\nconst { Column } = Table;\n\nexport default function Main(props) {\n    const { account, quantContract, connected, ConnectAccount, ticketPrice } = props;\n    const c = quantContract;\n    const { referCode } = useParams();\n    const [playerRefferalCode, setPlayerRefferalCode] = useState(null);\n    const [mainLoading, setMainLoading] = useState(true);\n    const [newInstanceShowElem, setNewInstanceShowElem] = useState(true);\n    const [allStrategies, setAllStrategies] = useState(null);\n    const [allInstances, setAllInstances] = useState(null);\n    const [splitInstance, setSplitInstance] = useState(false);\n\n    const { dispatch, state } = useContext(mainContext);\n    const { locale } = state\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const connectToAccount = () => {\n        if (!connected) {\n            setMainLoading(true);\n            ConnectAccount()\n        }\n    }\n\n    const chageStrategy = (strategy) => {\n        dispatch({\n            type: 'CHANGE_STRATEGY',\n            strategy\n        })\n        setTimeout(()=>{console.log(\"loadData chageStrategy state: after\", state);},300)\n    }\n\n    const loadData = async () => { \n        console.log(\"loadData\"); \n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        // console.log(\"loadData _allStrategies: forEach 1\");\n        _allStrategies.forEach(item => {\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            item.isExpand = false;\n        });\n        // console.log(\"loadData _allStrategies: forEach 2\");\n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n        // console.log(\"loadData chageStrategy _allStrategies: before\", _allStrategies);\n        chageStrategy(_allStrategies);\n        // console.log(\"loadData chageStrategy _allStrategies: after\", _allStrategies);\n        const _allInstances = await c.methods.getAllInstances().call(); \n        _allInstances.forEach(item => {\n            item.instance_id = item.instance_id.toString();\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            // item.isExpand = false;\n        });\n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(_allInstances);\n\n    }\n\n    const loadDataAuto = async () => {\n        console.log(\"loadDataAuto\");\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        _allStrategies.forEach(item => {\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            item.isExpand = false;\n        });\n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n        chageStrategy(_allStrategies)\n        const _allInstances = await c.methods.getAllInstances().call(); \n        _allInstances.forEach(item => {\n            item.instance_id = item.instance_id.toString();\n            item.strategy_id = item.strategy_id.toString();\n            item.strategy_startup_amount = item.strategy_startup_amount.toString();\n            item.stop_loss = item.stop_loss.toString();\n            item.status = item.status.toString();\n            item.tp_rate = item.tp_rate.toString();\n            item.take_profit = item.take_profit.toString();\n            item.id = item.name + Date.now();\n\n            item.statusText = getStatusText(item.status);\n            // item.isExpand = false;\n        });\n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(_allInstances);\n    }\n    setInterval(() => {\n        if (quantContract) {\n\n            loadDataAuto();\n        }\n    }, 300000);\n\n    const new_instance = async (obj) => {\n        console.log(\"new_instance obj: \", obj);\n        const strategy_name = obj.strategy_name || \"\";\n        const strategy_id = obj.strategy_id;\n        const apikey = obj.apikey;\n        const secretkey = obj.secretkey;\n        const passphrase = obj.passphrase || \"\";\n        const exchange = obj.exchange;\n        // const take_profit = obj.take_profit.toString();\n        const take_profit = obj.take_profit;\n        const initial_amount = obj.initial_amount;\n        console.log(\"new_instance strategy_id: \", strategy_id);\n        console.log(\"new_instance apikey: \", apikey);\n        console.log(\"new_instance secretkey: \", secretkey);\n        console.log(\"new_instance passphrase: \", passphrase);\n        await c.methods.new_instance(strategy_id, initial_amount, apikey, secretkey, passphrase)\n        .send({ from: account, value: take_profit })\n        // .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const use_strategy1 = async (obj) => {\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n    }\n\n    const getStatusText = (status) => {\n        return statusTextMap[status] || '';\n    }\n    const changeExpand = (index) => {\n        allStrategies.splice(index, 1, {...allStrategies[index], isExpand: !allStrategies[index].isExpand, id: allStrategies[index].name + Date.now()})\n        // console.log({'i': allStrategies[index]})\n        console.log({'i item.isExpand: ': allStrategies[index].isExpand})\n        // console.log({'i mainLoading: ': mainLoading})\n        // setAllStrategies(allStrategies);\n        // if (allStrategies[index].isExpand) {\n        //     setMainLoading(true);\n        // } else {\n        //     setMainLoading(false);\n        // }\n        setMainLoading(!mainLoading);\n    }\n\n    return (\n        <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\n            {!connected && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <h3>请连接钱包</h3>\n                </div>\n            } \n            \n            {connected && !splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        {/* <p>All Running Strategies in Main</p> */}\n                        {/* <p>All Strategies in Main</p> */}\n                        <h3>所有策略</h3>\n                    </div>\n                }\n            \n            {/* {allStrategies && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>   name: {allStrategies[0].name.toString()}  </p>\n                        <br></br>\n                        <p>   isExpand: {allStrategies[0].isExpand.toString()}  </p>\n                        <br></br>\n                        <p>   expand: {mainLoading.toString()}  </p>\n                    </div>\n                }  */}\n            { allStrategies && allStrategies.map((item, index) => {\n                return (\n                    <div key={item.id}>\n                        <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                {/* <Column title={getStrategyTitleText(\"strategy_id\")} dataIndex=\"strategy_id\" key=\"strategy_id\" width={50}\n                                 />\n                                <Column title={getStrategyTitleText(\"name\")} dataIndex=\"name\" key=\"name\" width={100}/>\n                                <Column title={getStrategyTitleText(\"sender\")} dataIndex=\"sender\" key=\"sender\" width={160}\n                                    ellipsis={ {showTitle: false}}\n                                        render={ sender => (\n                                            <Tooltip placement=\"topLeft\" title={sender}>\n                                                {sender}\n                                            </Tooltip>\n                                            )}\n                                />\n                                <Column title={getStrategyTitleText(\"strategy_startup_amount\")} dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                <Column title={getStrategyTitleText(\"take_profit\")} dataIndex=\"take_profit\" key=\"take_profit\" />\n                                <Column title={getStrategyTitleText(\"stop_loss\")} dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                <Column title={getStrategyTitleText(\"tp_rate\")} dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                <Column title={getStrategyTitleText(\"sl_rate\")} dataIndex=\"sl_rate\" key=\"sl_rate\" />\n                                <Column title={getStrategyTitleText(\"exchange\")} dataIndex=\"exchange\" key=\"exchange\" />\n                                <Column title={getStrategyTitleText(\"status\")} dataIndex=\"statusText\" key=\"status\" /> */}\n                                \n                                {getColumn(\"strategy_id\")}\n                                {getColumn(\"name\")}\n                                {getColumn(\"sender\")}\n                                {getColumn(\"strategy_startup_amount\")}\n                                {getColumn(\"take_profit\")}\n                                {getColumn(\"stop_loss\")}\n                                {getColumn(\"tp_rate\")}\n                                {getColumn(\"sl_rate\")}\n                                {getColumn(\"exchange\")}\n                                {getColumn(\"status\")}\n                                <Column\n                                    title={getStrategyTitleText(\"Action\")}\n                                    key=\"Action\"\n                                    render={(text, record) => (\n                                        <Space size=\"middle\">\n                                        <button onClick={() => changeExpand(index)}>使用策略</button>\n                                        </Space>\n                                    )}\n                                />\n                            </Table>\n                        </div>\n                        {\n                            item.isExpand ? \n                                <div className='strategy-form' >\n                                    <br></br>\n                                    <StrategyUseForm formOption={item} new_instance={new_instance.bind(this)}/>\n                                </div>\n                            : null\n                        }\n                    </div>\n                )\n                })\n            }\n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多Running</p>\n                </div>\n            } \n            {connected && splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Stopped Strategies</p>\n                    </div>\n                } \n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多Stopped</p>\n                </div>\n            } \n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>All Instances: Settled</p>\n                </div>\n            } \n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多 Settled Instances</p>\n                </div>\n            } \n            {connected && splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Instances: Unsettled Instances</p>\n                        <p>未结算 Instances</p>\n                    </div>\n                } \n            {connected && splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <p>更多 Unsettled Instances </p>\n                </div>\n            } \n            {connected && !splitInstance && \n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <h3>所有实例</h3>\n                </div>\n            } \n            \n            { allInstances && allInstances.map((item) => {\n                    return (\n                        <div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        {getColumn(\"instance_id\")}\n                                        {getColumn(\"strategy_id\")}\n                                        {getColumn(\"name\")}\n                                        {getColumn(\"sender\")}\n                                        {getColumn(\"strategy_startup_amount\")}\n                                        {getColumn(\"take_profit\")}\n                                        {getColumn(\"stop_loss\")}\n                                        {getColumn(\"tp_rate\")}\n                                        {getColumn(\"sl_rate\")}\n                                        {getColumn(\"exchange\")}\n                                        {getColumn(\"status\")}\n                                        {getColumn(\"user_address\")}\n                                        {getColumn(\"apikey\")}\n                                        {/* <Column title={getStrategyTitleText(\"name\")} dataIndex=\"name\" key=\"name\" width={100}/>\n                                        <Column title={getStrategyTitleText(\"sender\")} dataIndex=\"sender\" key=\"sender\" width={160}\n                                            ellipsis={ {showTitle: false}}\n                                                render={ sender => (\n                                                    <Tooltip placement=\"topLeft\" title={sender}>\n                                                        {sender}\n                                                    </Tooltip>\n                                                    )}\n                                        />\n                                        <Column title={getStrategyTitleText(\"strategy_startup_amount\")} dataIndex=\"strategy_startup_amount\" key=\"strategy_startup_amount\" />\n                                        <Column title={getStrategyTitleText(\"take_profit\")} dataIndex=\"take_profit\" key=\"take_profit\" />\n                                        <Column title={getStrategyTitleText(\"stop_loss\")} dataIndex=\"stop_loss\" key=\"stop_loss\" />\n                                        <Column title={getStrategyTitleText(\"tp_rate\")} dataIndex=\"tp_rate\" key=\"tp_rate\" />\n                                        <Column title={getStrategyTitleText(\"sl_rate\")} dataIndex=\"sl_rate\" key=\"sl_rate\" />\n                                        <Column title={getStrategyTitleText(\"exchange\")} dataIndex=\"exchange\" key=\"exchange\" />\n                                        <Column title={getStrategyTitleText(\"status\")} dataIndex=\"statusText\" key=\"status\" />\n                                        <Column title={getStrategyTitleText(\"user_address\")} dataIndex=\"user_address\" key=\"user_address\"  width={160}\n                                            ellipsis={ {showTitle: false}}\n                                                render={ sender => (\n                                                    <Tooltip placement=\"topLeft\" title={sender}>\n                                                        {sender}\n                                                    </Tooltip>\n                                                    )}/>\n                                        <Column title={getStrategyTitleText(\"apikey\")} dataIndex=\"apikey\" key=\"apikey\" \n                                            ellipsis={ {showTitle: false}}\n                                                render={ sender => (\n                                                    <Tooltip placement=\"topLeft\" title={sender}>\n                                                        {sender}\n                                                    </Tooltip>\n                                                    )}/> */}\n                                        \n                                    </Table> \n                                </div> \n                            </div> \n                        </div> \n                    )\n                })\n            }\n            \n            { connected && splitInstance && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <p>All Will Settled Instances</p>\n                        <p>已结算 Instances</p>\n                    </div>\n                } \n        </div >\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport \"../css/Navbar.css\"\nimport { useContext} from 'react'\nimport { mainContext } from '../reducer'\nimport { FormattedMessage } from 'react-intl'\nexport default function Navbar(props) {\n\n    const { ConnectAccount, account } = props;\n\n    const { dispatch, state } = useContext(mainContext)\n    const { locale } = state\n    const changeLang = () => { // 改变状态里的 语言 进行切换\n        dispatch({\n            type: 'CHANGE_LOCALE',\n            locale: locale === 'zh' ? 'en' : 'zh'\n        })\n    }\n    return (\n        <nav className='navbar  navbar-expand-xl navbar-dark glassNav'>\n            <div className=\"container-fluid px-md-5\">\n                <Link className=\"navbar-brand mx-xl-0 mx-auto \" to=\"/\">\n                    {/* <img className=\"ml-xl-0 ml-5 img-fluid\" src=\"img/logo2.png\" alt=\"\" /> */}\n                    {/* <h3>Lottery (2 in 4)</h3> */}\n                    <h3>\n                        <FormattedMessage\n                            id=\"nav_quant\"\n                            defaultMessage=\"quant\"\n                        />\n\n                    </h3>\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"fontPara navbar-nav me-auto ms-auto mb-2 mb-lg-0 \">\n                        \n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/main\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_main\"\n                                        defaultMessage=\"Main\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/admin\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_admin\"\n                                        defaultMessage=\"Admin\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/strategist\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_strategist\"\n                                        defaultMessage=\"Strategist\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/user\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_user\"\n                                        defaultMessage=\"User\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/auditor\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_auditor\"\n                                        defaultMessage=\"Auditor\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/rule\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_rule\"\n                                        defaultMessage=\"Rule\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li> */}\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/how-to-play\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_faq\"\n                                        defaultMessage=\"FAQ\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/donation\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_donation\"\n                                        defaultMessage=\"Donation\"\n                                    />\n                                </h4>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/contact\">\n                                <h4 className=\"nav-link\">\n                                    <FormattedMessage\n                                        id=\"nav_contact\"\n                                        defaultMessage=\"Contact\"\n                                    /></h4>\n                            </Link>\n                        </li> */}\n\n                    </ul>\n                    <div>\n                        <button onClick={changeLang} className=\"btn btn-lg\"> <FormattedMessage id=\"switch\" ></FormattedMessage></button>\n                    </div>\n                    <button onClick={ConnectAccount} className=\"btn btn-dark btn-lg\">{account ? `${account.substring(0, 3)}...${account.substring(account.length - 4, account.length)} ` : 'Connect'}</button>\n                </div>\n\n            </div>\n        </nav>\n    )\n}\n","/* \ninstance 状态\n\n// _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n// _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n// _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n// _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n// _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n// _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n// _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n// _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n// _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n// _instance_status == 9 set_instance_status_Settled(instance_id);\n\n1: 策略师认可用户的提交信息。\n2: 策略师中途不同意。\n3: 用户中途不同意。\n4: 策略师提交信息，请求用户确认。\n5: 用户认可策略师提交的信息。 \n6: 仲裁，认可用户正确。\n7: 仲裁，认可策略师正确。\n8: 未结算。\n9: 已经结算。\n*/\n\nexport default {\n    1: '策略师认可用户的提交信息', // UserPreConfirmed\n    2: '策略师中途不同意', // StrategistPreConfirmed\n    3: '用户中途不同意', // UserMidDisagree\n    4: '策略师提交信息，请求用户确认', // StrategistConfirmed\n    5: '用户认可策略师提交的信息', // UserConfirmed\n    6: '仲裁，认可用户正确', // ArbitrateUserWin\n    7: '仲裁，认可策略师正确', // ArbitrateStrategistWin\n    8: '未结算', // Unsettled\n    9: '已经结算', // Settled\n}","\nimport statusTextMap from './statusTextMap';\nimport instanceStatusTextMap from './instanceStatusTextMap';\n\nconst getStatusText = (status) => {\n    return statusTextMap[status] || '';\n}\nconst getInstanceStatusText = (status) => {\n    return instanceStatusTextMap[status] || '';\n}\nconst getPassphraseDefaultText = (passphrase) => {\n    return passphrase.toString() || 'your_passphrase';\n}\n\n// 格式化 allStrategies\nconst formatAllStrategies = (_allStrategies) => {\n    \n    _allStrategies.forEach(item => {\n        item.strategy_id = item.strategy_id.toString();\n        item.strategy_startup_amount = item.strategy_startup_amount.toString();\n        item.stop_loss = item.stop_loss.toString();\n        item.status = item.status.toString();\n        item.tp_rate = item.tp_rate.toString();\n        item.take_profit = item.take_profit.toString();\n        item.id = item.name + Date.now();\n\n        item.statusText = getStatusText(item.status);\n        item.isExpand = false;\n    });\n    return _allStrategies\n\n}\n\n// 格式化 allInstances\nconst formatAllInstances = (_allInstances) => {\n    \n    _allInstances.forEach(item => {\n        item.instance_id = item.instance_id.toString();\n        item.strategy_id = item.strategy_id.toString();\n        item.strategy_startup_amount = item.strategy_startup_amount.toString();\n        item.stop_loss = item.stop_loss.toString();\n        item.status = item.status.toString();\n        item.tp_rate = item.tp_rate.toString();\n        item.take_profit = item.take_profit.toString();\n        item.id = item.name + Date.now();\n\n        item.statusText = getStatusText(item.status);\n\n        item.apikey = item.apikey.toString();\n        item.secretkey = item.secretkey.toString();\n        item.passphrase = getPassphraseDefaultText(item.passphrase);\n        item.instance_status_text = getInstanceStatusText(item.instance_status);\n        // item.isExpand = false;\n        item.isExpand_StrategistPreConfirmed = false;\n        item.isExpand_StrategistMidDisagree = false;\n        item.isExpand_UserMidDisagree = false;\n        item.isExpand_StrategistConfirmed = false;\n        item.isExpand_ArbitrateUserWin = false;\n        item.isExpand_ArbitrateStrategistWin = false;\n        item.isExpand_Settled = false;\n    });\n    return _allInstances;\n\n}\n// export default formatAllStrategies;\nexport { formatAllStrategies, formatAllInstances };\n","import React, { useState } from 'react';\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nimport moment from \"moment\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass Form_StrategistPreConfirmed extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_StrategistPreConfirmed({...values, instance_id: this.props.instance_id});\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_StrategistMidDisagree extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_StrategistMidDisagree({...values, instance_id: this.props.instance_id});\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_UserMidDisagree extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_UserMidDisagree({...values, instance_id: this.props.instance_id});\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nclass Form_ArbitrateUserWin extends React.Component {\n  formRef = React.createRef();\n  onExchangeChange = (value) => {\n    switch (value) {\n\t\tcase 'binance':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'okex':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'ok' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'huobi':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t  strategy_name: 'hb' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t\tcase 'other':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tstrategy_name: 'ot' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t  }\n\t};\n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_ArbitrateUserWin({...values, instance_id: this.props.instance_id});\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\t// strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t// strategy_id: 1,\n\t\t// apikey: \"your_api_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\t// secretkey: \"your_secret_key\"+ moment().format('YYYYMMDDHHmmss'),\n\t\t// passphrase: \"your_passphrase\"+ moment().format('YYYYMMDDHHmmss'),\n\t\t// exchange: 'binance',\n\t\t// take_profit: 2000,\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nclass Form_ArbitrateStrategistWin extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_ArbitrateStrategistWin({...values, instance_id: this.props.instance_id});\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"instance_id\"\n          label=\"instance_id\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_StrategistConfirmed extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_StrategistConfirmed({...values, instance_id: this.props.instance_id});\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nclass Form_Settled extends React.Component {\n  formRef = React.createRef(); \n  onFinish = (values) => {\n    console.log(values);\n\t  this.props.set_instance_status_Settled({...values, instance_id: this.props.instance_id});\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tfinal_amount: 10001,\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n          name=\"final_amount\"\n          label=\"Final Amount\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <InputNumber />\n        </Form.Item>\n       \n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport { \n  Form_StrategistPreConfirmed, \n  Form_StrategistMidDisagree,\n  Form_UserMidDisagree,\n  Form_StrategistConfirmed, \n  Form_ArbitrateUserWin, \n  Form_ArbitrateStrategistWin, \n  Form_Settled, \n};","/* \nconfig\n*/\n\nexport default {\n    contact_address: '0x6ac901316dCe8d39ae1eD1681E363288ca88dF85',\n    admin_address: [\n        '0x93c343af68a897D0024A6d9c638F8E7Bd97B66eB',\n        '0x172Ac62C5CB23eFdD74Cd2a892eb1943291880c9'\n    ],\n    auditor_address: [\n        '0x93c343af68a897D0024A6d9c638F8E7Bd97B66eB',\n        '0xb7DACbA3d06C05aAE50CC4a059Bfd81f85A6197e',\n        '0x172Ac62C5CB23eFdD74Cd2a892eb1943291880c9'\n    ],\n}","import React, { useEffect, useState } from 'react'\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport  { Form_StrategistConfirmed, Form_ArbitrateUserWin, Form_ArbitrateStrategistWin, Form_Settled} from '../common/js/instanceStatusHandleForm';\n\nimport configMap from '../common/js/configMap';\nimport { getStrategyTitleText } from '../common/js/tableTitle';\nimport { getColumn } from '../common/js/tableTitleColumn';\n\nconst { Column } = Table;\n\nexport default function Admin(props) {\n    const { quantContract, connected, account } = props;\n    const c = quantContract;\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allStrategiesName, setAllStrategiesName] = useState(null);\n    const [allStrategies, setAllStrategies] = useState(null);\n    // const [strategyStatus, setStrategyStatus] = useState(null);\n    const [allInstances, setAllInstances] = useState(null);\n    const [splitInstance, setSplitInstance] = useState(false);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const loadData = async () => {\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"loadData _allStrategies: \", _allStrategies);\n        setAllStrategies(formatAllStrategies(_allStrategies));\n\n        const _allInstances = await c.methods.getAllInstances().call(); \n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(formatAllInstances(_allInstances));\n    }\n\n    // 定时自动刷新\n    const loadDataAuto = async () => {\n        // const _allStrategies = await c.methods.getAllStrategies().call(); \n        // console.log(\"loadDataAuto _allStrategies: \", _allStrategies);\n        // setAllStrategies(_allStrategies);\n        // const _allInstances = await c.methods.getAllInstancesOfUser(account).call(); \n        // console.log(\"loadData _allInstances: \", _allInstances);\n        // setAllInstances(_allInstances);\n        loadData();\n    }\n    setInterval(() => {\n        console.log(\"Date: \", Date())\n        if (quantContract) {\n            loadDataAuto();\n        }\n    }, 300000);\n\n    // start strategy handle ---------------------------------------------------------------------\n    \n    const getAllStrategiesName = async () => {\n        const _allStrategiesName = await c.methods.getAllStrategiesName().call();\n        setAllStrategiesName(_allStrategiesName);\n    }\n\n    const getAllStrategies = async () => {\n        const _allStrategies = await c.methods.getAllStrategies().call(); \n        console.log(\"getAllStrategies _allStrategies: \", _allStrategies);\n        setAllStrategies(_allStrategies);\n    }\n\n    // const set_strategy_status_active = async (_strategy_name) => {\n    //     console.log(\"set_strategy_status_active => _strategy_name: \", _strategy_name);\n    //     await c.methods.set_strategy_status_active(_strategy_name)\n    //     .send({ from: account })\n    //     .on('confirmation', (confirmationNumber, receipt) => {\n    //         loadData();\n    //     })\n    //     .on('error', function (error, receipt) {\n    //         loadData();\n    //     });\n    // }\n\n    const set_strategy_status_active = async (id) => {\n        console.log(\"set_strategy_status_active => id: \", id);\n        // await c.methods.set_strategy_status_active(id)\n        await c.methods.set_strategy_status_x_id_status(id, 0)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const set_strategy_status_deleted = async (id) => {\n        // console.log(\"set_strategy_status_deleted => id: \", id);\n        // await c.methods.set_strategy_status_deleted(id)\n        await c.methods.set_strategy_status_x_id_status(id, 4)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const set_strategy_status_stopped_x_admin = async (id) => {\n        // console.log(\"set_strategy_status_deleted => id: \", id);\n        // await c.methods.set_strategy_status_stopped_x_admin(id)\n        await c.methods.set_strategy_status_x_id_status(id, 5)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    \n    const set_strategy_status_deleted_x_admin = async (id) => {\n        // console.log(\"set_strategy_status_deleted => id: \", id);\n        // await c.methods.set_strategy_status_deleted_x_admin(id)\n        await c.methods.set_strategy_status_x_id_status(id, 6)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    const getStrategyStatus = async (_strategy_name) => {\n        console.log(\"getStrategyStatus => _strategy_name: \", _strategy_name); \n        // await c.methods.getStrategyStatus(_strategy_name).call();\n        const aStrategyStatus = await c.methods.getStrategyStatus(_strategy_name).call() \n        console.log(\"getStrategyStatus => aStrategyStatus：\", aStrategyStatus); \n        console.log(\"getStrategyStatus => end\");\n        return aStrategyStatus;\n    }\n    // start instance handle ---------------------------------------------------------------------\n    \n    // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n    // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n    // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n    // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n    // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n    // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n    // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n    // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n    // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n    // _instance_status == 9 set_instance_status_Settled(instance_id);\n\n    const set_instance_status_ArbitrateUserWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_ArbitrateUserWin final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_ArbitrateUserWin instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 6, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_ArbitrateStrategistWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        \n        console.log(\"set_instance_status_ArbitrateStrategistWin final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id); \n        console.log(\"set_instance_status_ArbitrateStrategistWin instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 7, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_Unsettled = async (obj) => {\n        const { instance_id, final_amount } = obj;\n        console.log(\"set_instance_status_Unsettled instance_id: \", instance_id, final_amount); \n        await c.methods.set_instance_status_x_id_status(instance_id, 8, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n    const set_instance_status_Settled = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_Settled final_amount: \", final_amount); \n        const instance_id = parseInt(obj.instance_id); \n        console.log(\"set_instance_status_Settled instance_id: \", instance_id); \n        await c.methods.set_instance_status_x_id_status(instance_id, 9, final_amount)\n        .send({ from: account })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            loadData();\n        })\n        .on('error', function (error, receipt) {\n            loadData();\n        });\n    }\n\n    // helper 函数 -------------------------------------------------------------------\n    // const changeInstanceItemExpand_ArbitrateUserWin = (index) => {\n    const changeExpand_ArbitrateUserWin = (index) => {\n        // allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin, id: allInstances[index].name + Date.now()})\n        allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin})\n        // console.log({'i': allInstances[index]})\n        console.log({'i item.isExpand_ArbitrateUserWin: ': allInstances[index].isExpand_ArbitrateUserWin})\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_ArbitrateStrategistWin = (index) => {\n        allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateStrategistWin: !allInstances[index].isExpand_ArbitrateStrategistWin})\n        console.log({'i item.isExpand_ArbitrateStrategistWin: ': allInstances[index].isExpand_ArbitrateStrategistWin})\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_Settled = (index) => {\n        allInstances.splice(index, 1, {...allInstances[index], isExpand_Settled: !allInstances[index].isExpand_Settled})\n        console.log({'i item.isExpand_Settled: ': allInstances[index].isExpand_Settled})\n        setMainLoading(!mainLoading);\n    }\n\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\"; \n        if (!(configMap.admin_address.includes(account))) {\n        return (<div><div className=\"d-flex justify-content-center align-items-center \"><p>亲，只有 管理员 才可访问哟！ </p></div></div>)\n    }\n    return (\n        <div>\n            <div className=\"row mt-4\"> \n                {!connected && \n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <h3>请连接钱包</h3>\n                    </div>\n                }\n                \n                {/* \n                // 只取策略名称\n                <div className={buttonColClassName}>\n                    <button onClick={getAllStrategiesName} className={buttonClassName}>Strategy List</button>\n                </div> \n                {\n                    console.log(\"-----------------------------\")\n                }\n                { allStrategiesName && allStrategiesName.map((item) => {\n                        const astatus = getStrategyStatus(item);\n                        astatus.then((res)=>{\n                            console.log(res,\"123\")\n                        })\n                        console.log(\" astatus\", astatus);\n                        // console.log(\" astatus end\") ;\n                        return (\n                            <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                <p>{item}</p>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <button onClick={() => { getStrategyStatus(item) }} >A</button>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <button onClick={() => { set_strategy_status_active(item) }} >Active</button>\n                            </div>\n                        )\n                    })\n                } \n                */}\n\n                {/*                 \n                <div className={buttonColClassName}>\n                    <button onClick={getAllStrategies} className={buttonClassName}>All Strategy List</button>\n                </div>\n                \n                {\n                    console.log(\" allStrategies ----------------------------- \", allStrategies)\n                }\n                 */}\n                {connected && !splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <h3>所有策略</h3>\n                        </div>\n                    } \n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Pending Strategies</p>\n                        </div>\n                    } \n                { allStrategies && allStrategies.map((item) => {\n                        return (\n                            // <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                \n                            //     <p>{item.strategy_id.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.name.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.sender.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.strategy_startup_amount.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.take_profit.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.stop_loss.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.tp_rate.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.exchange.toString()}</p>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <p>{item.status}</p>\n                                \n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_active(item.strategy_id) }} >Active</button>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_deleted(item.strategy_id) }} >Delete</button>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_stopped_x_admin(item.strategy_id) }} >Force Stop</button>\n                            //     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            //     <button onClick={() => { set_strategy_status_deleted_x_admin(item.strategy_id) }} >Force Delete</button>\n\n                            // </div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        {getColumn(\"strategy_id\")}\n                                        {getColumn(\"name\")}\n                                        {getColumn(\"sender\")}\n                                        {getColumn(\"strategy_startup_amount\")}\n                                        {getColumn(\"take_profit\")}\n                                        {getColumn(\"stop_loss\")}\n                                        {getColumn(\"tp_rate\")}\n                                        {getColumn(\"sl_rate\")}\n                                        {getColumn(\"exchange\")}\n                                        {getColumn(\"status\")}\n                                        <Column\n                                            title=\"激活\"\n                                            key=\"Action\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_active(item.strategy_id) }>激活</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"删除\"\n                                            key=\"Delete\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_deleted(item.strategy_id) }>删除</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"强制停止\"\n                                            key=\"ForceStop\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_stopped_x_admin(item.strategy_id) }>强制删除</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"强制删除\"\n                                            key=\"ForceDelete\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_strategy_status_deleted_x_admin(item.strategy_id) }>强制删除</button>\n                                                </Space>\n                                            )}\n                                        /> \n                                    </Table>\n                                </div> \n                            </div>\n                        )\n                    })\n                }\n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Running Strategies in Admin</p>\n                        </div>\n                    } \n                \n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Stopped Strategies</p>\n                        </div>\n                    } \n                    \n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Unsettled Instances</p>\n                            <p>未结算 Instances</p>\n                        </div>\n                    } \n                    \n                {connected && !splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <h3>所有实例</h3>\n                        </div>\n                    } \n                { allInstances && allInstances.map((item, index) => {\n                    return (\n                        // <div>\n                        //     <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                \n                        //         <p>{item.instance_id.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.strategy_id.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.name.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.sender.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.strategy_startup_amount.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.take_profit.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.stop_loss.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.tp_rate.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.exchange.toString()}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.status}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.status}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.user_address}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.apikey}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.secretkey}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <p>{item.passphrase || \"your_passphrase\"}</p>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_ArbitrateUserWin(item.instance_id) }} >ArbitrateUserWin 仲裁User对</button>\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_ArbitrateStrategistWin(item.instance_id) }} >ArbitrateStrategistWin 仲裁Strategist对</button>\n                        //         {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_Unsettled(item.instance_id) }} >Unsettled 未结算</button> */}\n                        //         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        //         <button onClick={() => { set_instance_status_Settled(item.instance_id) }} >Settled 已经结算</button>\n                                 \n                        //     </div> \n                        // </div>\n                        <div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        {getColumn(\"instance_id\")}\n                                        {getColumn(\"strategy_id\")}\n                                        {getColumn(\"name\")}\n                                        {getColumn(\"sender\")}\n                                        {getColumn(\"strategy_startup_amount\")}\n                                        {getColumn(\"take_profit\")}\n                                        {getColumn(\"stop_loss\")}\n                                        {getColumn(\"tp_rate\")}\n                                        {getColumn(\"sl_rate\")}\n                                        {getColumn(\"exchange\")}\n                                        {getColumn(\"status\")}\n                                        {getColumn(\"user_address\")}\n                                        {getColumn(\"apikey\")}\n                                        {getColumn(\"secretkey\")}\n                                        {getColumn(\"passphrase\")}\n                                        {getColumn(\"instance_status\")}\n                                        {/* <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\"  width={160} ellipsis={true}/>\n                                        <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                                        <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" /> */}\n                                        {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                                        <Column\n                                            title=\"判用户对\"\n                                            key=\"ArbitrateUserWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_ArbitrateUserWin(item.instance_id) }>仲裁User对</button> */}\n                                                <button onClick={() => changeExpand_ArbitrateUserWin(index) }>仲裁User对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"判策略师对\"\n                                            key=\"ArbitrateStrategistWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_ArbitrateStrategistWin(item.instance_id) }>仲裁Strategist对</button> */}\n                                                <button onClick={() => changeExpand_ArbitrateStrategistWin(index) }>仲裁Strategist对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        {/* <Column\n                                            title=\"Unsettled\"\n                                            key=\"Unsettled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_instance_status_Unsettled(item.instance_id) }>未结算</button>\n                                                </Space>\n                                            )}\n                                        /> */}\n                                        <Column\n                                            title=\"已结算\"\n                                            key=\"Settled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_Settled(item.instance_id) }>已经结算</button> */}\n                                                <button onClick={() => changeExpand_Settled(index) }>已经结算</button>\n                                                </Space>\n                                            )}\n                                        /> \n                                    </Table> \n                                </div> \n                                {\n                                    item.isExpand_ArbitrateUserWin ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateUserWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateUserWin instance_id={item.instance_id} set_instance_status_ArbitrateUserWin={set_instance_status_ArbitrateUserWin.bind(this)}/>\n                                            {/* <Form>\n                                                <Form.Item\n                                                    name=\"final_amount\"\n                                                    label=\"Final Amount\"\n                                                    rules={[\n                                                    {\n                                                        required: true,\n                                                    },\n                                                    ]}\n                                                >\n                                                    <InputNumber />\n                                                </Form.Item> \n                                                <Form.Item {...tailLayout}>\n                                                    <Button type=\"primary\" htmlType=\"submit\">\n                                                    Submit\n                                                    </Button>\n                                                    <Button htmlType=\"button\" onClick={this.onReset}>\n                                                    Reset\n                                                    </Button> \n                                                </Form.Item>\n                                            </Form> */}\n                                        </div>\n                                    : null\n                                }\n                                {\n                                    item.isExpand_ArbitrateStrategistWin ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateStrategistWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateStrategistWin instance_id={item.instance_id} set_instance_status_ArbitrateStrategistWin={set_instance_status_ArbitrateStrategistWin.bind(this)}/>\n                                        </div>\n                                    : null\n                                } \n                                {\n                                    item.isExpand_Settled ? \n                                        <div className='strategy-form' >\n                                            set_instance_status_Settled  {item.instance_id}\n                                            <br></br>\n                                            <Form_Settled instance_id={item.instance_id} set_instance_status_Settled={set_instance_status_Settled.bind(this)}/>\n                                        </div>\n                                    : null\n                                }\n                            </div> \n                        </div> \n                    )\n                    })\n                }\n                {connected && splitInstance &&\n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            <p>All Will Settled Instances</p>\n                            <p>已结算 Instances</p>\n                        </div>\n                    } \n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport { Form_StrategistConfirmed, Form_ArbitrateUserWin, Form_ArbitrateStrategistWin, Form_Settled } from '../common/js/instanceStatusHandleForm';\n\nimport configMap from '../common/js/configMap';\nimport { getStrategyTitleText } from '../common/js/tableTitle';\nimport { getColumn } from '../common/js/tableTitleColumn';\n\nconst { Column } = Table;\n\nexport default function Auditor(props) {\n    const { quantContract, connected, account } = props;\n    const c = quantContract;\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allInstances, setAllInstances] = useState(null);\n    const [splitInstance, setSplitInstance] = useState(false);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const loadData = async () => {\n        const _allInstances = await c.methods.getAllInstances().call();\n        console.log(\"loadData _allInstances: \", _allInstances);\n        setAllInstances(formatAllInstances(_allInstances));\n    }\n\n    // 定时自动刷新\n    const loadDataAuto = async () => {\n        loadData();\n    }\n    setInterval(() => {\n        console.log(\"Date: \", Date())\n        if (quantContract) {\n            loadDataAuto();\n        }\n    }, 300000);\n\n    // start strategy handle ---------------------------------------------------------------------\n\n\n    // start instance handle ---------------------------------------------------------------------\n\n    // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n    // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n    // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n    // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n    // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n    // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n    // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n    // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n    // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n    // _instance_status == 9 set_instance_status_Settled(instance_id);\n\n    const set_instance_status_ArbitrateUserWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_ArbitrateUserWin final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_ArbitrateUserWin instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 6, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_ArbitrateStrategistWin = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_ArbitrateStrategistWin final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_ArbitrateStrategistWin instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 7, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_Unsettled = async (obj) => {\n        const { instance_id, final_amount } = obj;\n        console.log(\"set_instance_status_Unsettled instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 8, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_Settled = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_Settled final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_Settled instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 9, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n\n    // helper 函数 -------------------------------------------------------------------\n    // const changeInstanceItemExpand_ArbitrateUserWin = (index) => {\n    const changeExpand_ArbitrateUserWin = (index) => {\n        // allInstances.splice(index, 1, {...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin, id: allInstances[index].name + Date.now()})\n        allInstances.splice(index, 1, { ...allInstances[index], isExpand_ArbitrateUserWin: !allInstances[index].isExpand_ArbitrateUserWin })\n        // console.log({'i': allInstances[index]})\n        console.log({ 'i item.isExpand_ArbitrateUserWin: ': allInstances[index].isExpand_ArbitrateUserWin })\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_ArbitrateStrategistWin = (index) => {\n        allInstances.splice(index, 1, { ...allInstances[index], isExpand_ArbitrateStrategistWin: !allInstances[index].isExpand_ArbitrateStrategistWin })\n        console.log({ 'i item.isExpand_ArbitrateStrategistWin: ': allInstances[index].isExpand_ArbitrateStrategistWin })\n        setMainLoading(!mainLoading);\n    }\n    const changeExpand_Settled = (index) => {\n        allInstances.splice(index, 1, { ...allInstances[index], isExpand_Settled: !allInstances[index].isExpand_Settled })\n        console.log({ 'i item.isExpand_Settled: ': allInstances[index].isExpand_Settled })\n        setMainLoading(!mainLoading);\n    }\n\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n    if (!(configMap.auditor_address.includes(account))) {\n        return (<div><div className=\"d-flex justify-content-center align-items-center \"><p>亲，只有 审核员 才可访问哟！ </p></div></div>)\n    }\n    return (\n        <div>\n            <div className=\"row mt-4\">\n                {!connected &&\n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        <h3>请连接钱包</h3>\n                    </div>\n                }\n\n                {connected && !splitInstance &&\n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        {/* <p>All Unsettled Instances</p> */}\n                        <h3>所有实例</h3>\n                    </div>\n                }\n                {connected && splitInstance &&\n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        {/* <p>All Unsettled Instances</p> */}\n                        <h3>未结算实例</h3>\n                    </div>\n                }\n\n                {allInstances && allInstances.map((item, index) => {\n                    return (\n                        <div>\n                            <div key={item.id}>\n                                <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                        {getColumn(\"instance_id\")}\n                                        {getColumn(\"strategy_id\")}\n                                        {getColumn(\"name\")}\n                                        {getColumn(\"sender\")}\n                                        {getColumn(\"strategy_startup_amount\")}\n                                        {getColumn(\"take_profit\")}\n                                        {getColumn(\"stop_loss\")}\n                                        {getColumn(\"tp_rate\")}\n                                        {getColumn(\"sl_rate\")}\n                                        {getColumn(\"exchange\")}\n                                        {getColumn(\"status\")}\n                                        {getColumn(\"user_address\")}\n                                        {getColumn(\"apikey\")}\n                                        {getColumn(\"secretkey\")}\n                                        {getColumn(\"passphrase\")}\n                                        {getColumn(\"instance_status\")}\n                                        {/* <Column title=\"secretkey\" dataIndex=\"secretkey\" key=\"secretkey\"  width={160} ellipsis={true}/>\n                                        <Column title=\"passphrase\" dataIndex=\"passphrase\" key=\"passphrase\" />\n                                        <Column title=\"instance_status\" dataIndex=\"instance_status_text\" key=\"instance_status\" /> */}\n                                        {/* <p>{item.passphrase || \"your_passphrase\"}</p> */}\n                                        <Column\n                                            title=\"判用户对\"\n                                            key=\"ArbitrateUserWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                    {/* <button onClick={() => set_instance_status_ArbitrateUserWin(item.instance_id) }>仲裁User对</button> */}\n                                                    <button onClick={() => changeExpand_ArbitrateUserWin(index)}>仲裁User对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        <Column\n                                            title=\"判策略师对\"\n                                            key=\"ArbitrateStrategistWin\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                    {/* <button onClick={() => set_instance_status_ArbitrateStrategistWin(item.instance_id) }>仲裁Strategist对</button> */}\n                                                    <button onClick={() => changeExpand_ArbitrateStrategistWin(index)}>仲裁Strategist对</button>\n                                                </Space>\n                                            )}\n                                        />\n                                        {/* <Column\n                                            title=\"Unsettled\"\n                                            key=\"Unsettled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                <button onClick={() => set_instance_status_Unsettled(item.instance_id) }>未结算</button>\n                                                </Space>\n                                            )}\n                                        /> */}\n                                        <Column\n                                            title=\"已结算\"\n                                            key=\"Settled\"\n                                            render={(text, record) => (\n                                                <Space size=\"middle\">\n                                                    {/* <button onClick={() => set_instance_status_Settled(item.instance_id) }>已经结算</button> */}\n                                                    <button onClick={() => changeExpand_Settled(index)}>已经结算</button>\n                                                </Space>\n                                            )}\n                                        />\n                                    </Table>\n                                </div>\n                                {\n                                    item.isExpand_ArbitrateUserWin ?\n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateUserWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateUserWin instance_id={item.instance_id} set_instance_status_ArbitrateUserWin={set_instance_status_ArbitrateUserWin.bind(this)} />\n                                        </div>\n                                        : null\n                                }\n                                {\n                                    item.isExpand_ArbitrateStrategistWin ?\n                                        <div className='strategy-form' >\n                                            set_instance_status_ArbitrateStrategistWin  {item.instance_id}\n                                            <br></br>\n                                            <Form_ArbitrateStrategistWin instance_id={item.instance_id} set_instance_status_ArbitrateStrategistWin={set_instance_status_ArbitrateStrategistWin.bind(this)} />\n                                        </div>\n                                        : null\n                                }\n                                {\n                                    item.isExpand_Settled ?\n                                        <div className='strategy-form' >\n                                            set_instance_status_Settled  {item.instance_id}\n                                            <br></br>\n                                            <Form_Settled instance_id={item.instance_id} set_instance_status_Settled={set_instance_status_Settled.bind(this)} />\n                                        </div>\n                                        : null\n                                }\n                            </div>\n                        </div>\n                    )\n                })\n                }\n                {connected && splitInstance &&\n                    <div className=\"d-flex justify-content-center align-items-center \">\n                        {/* <p>All Will Settled Instances</p> */}\n                        <h3>已结算 实例</h3>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Form, Input, InputNumber, Button, Select } from 'antd';\nimport moment from \"moment\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass StrategyNewForm extends React.Component {\n  formRef = React.createRef();\n  onExchangeChange = (value) => {\n    switch (value) {\n\t\tcase 'binance':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'okex':\n\t\t  this.formRef.current.setFieldsValue({\n        strategy_name: 'ok' + moment().format('YYYYMMDDHHmmss'),\n\t\t  });\n\t\t  return;\n\t\tcase 'huobi':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t  strategy_name: 'hb' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t\tcase 'other':\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tstrategy_name: 'ot' + moment().format('YYYYMMDDHHmmss'),\n\t\t\t});\n\t  }\n\t};\n  onFinish = (values) => {\n    console.log(values);\n\tthis.props.newStrategy(values);\n  };\n  onReset = () => {\n    this.formRef.current.resetFields();\n  };\n  onFill = () => {\n    this.formRef.current.setFieldsValue({\n\t\tstrategy_name: 'bn' + moment().format('YYYYMMDDHHmmss'),\n\t\tstartup_amount: 10000,\n\t\ttake_profit: 2000,\n\t\ttp_rate: 30,\n\t\tstop_loss: 1000,\n\t\tsl_rate: 40,\n\t\texchange: 'binance',\n    });\n  };\n\n  render() {\n    return (\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n        <Form.Item\n        name=\"strategy_name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"startup_amount\"\n        label=\"Startup Amount\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"take_profit\"\n        label=\"TakeProfit\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"tp_rate\"\n        label=\"TakeProfitRate\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"stop_loss\"\n        label=\"StopLoss\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"sl_rate\"\n        label=\"StopLossRate\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n\t  \t<InputNumber />\n      </Form.Item>\n      <Form.Item\n        name=\"exchange\"\n        label=\"Exchange\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"Select a option and change input text above\"\n          onChange={this.onExchangeChange}\n          allowClear\n        >\n          <Option value=\"okex\">okex</Option>\n          <Option value=\"huobi\">huobi</Option>\n          <Option value=\"binance\">binance</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        noStyle\n        shouldUpdate={(prevValues, currentValues) => prevValues.exchange !== currentValues.exchange}\n      >\n        {({ getFieldValue }) =>\n          getFieldValue('exchange') === 'okex' ? (\n            <Form.Item\n              name=\"passphrase\"\n              label=\"passphrase\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          ) : null\n        }\n      </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n          <Button htmlType=\"button\" onClick={this.onReset}>\n            Reset\n          </Button>\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\n            Fill form\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default StrategyNewForm;","import React, { useEffect, useState } from 'react'\n// import { Modal, Button } from 'antd';\n// import BigNumber from \"bignumber.js\";\n// import { Form, Input, Checkbox } from 'antd';\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport { Form_StrategistPreConfirmed, Form_StrategistMidDisagree, Form_StrategistConfirmed } from '../common/js/instanceStatusHandleForm';\nimport StrategyNewForm from './StrategyNewForm';\n\nimport { getStrategyTitleText } from '../common/js/tableTitle';\nimport { getColumn } from '../common/js/tableTitleColumn';\n\nconst { Column } = Table;\n\nexport default function Admin(props) {\n  const { quantContract, connected, account } = props;\n  const c = quantContract;\n  const [mainLoading, setMainLoading] = useState(true);\n  const [allStrategiesName, setAllStrategiesName] = useState(null);\n  const [allStrategies, setAllStrategies] = useState(null);\n  const [myCreatedStrategies, setMyCreatedStrategies] = useState([]);\n  const [allInstances, setAllInstances] = useState(null);\n  // const [allInstancesOfStrategist, setAllInstancesOfStrategist] = useState(null);\n\n  useEffect(() => {\n    if (connected) {\n      loadData();\n    }\n  }, [quantContract]);\n\n  const loadData = async () => {\n    // const _allStrategies = await c.methods.getAllStrategies().call(); \n    // console.log(\"loadData _allStrategies: \", _allStrategies);\n    // setAllStrategies(_allStrategies);\n    const _myCreatedStrategies = await c.methods.get_all_StrategyInfo_x_strategiest(account).call();\n    console.log(\"loadData get_all_StrategyInfo_x_strategiest _myCreatedStrategies: \", _myCreatedStrategies);\n    // setMyCreatedStrategies(_myCreatedStrategies);\n    setMyCreatedStrategies(formatAllStrategies(_myCreatedStrategies));\n\n    const _allInstances = await c.methods.getAllInstances().call();\n    console.log(\"loadData _allInstances: \", _allInstances);\n    // setAllInstances(_allInstances);\n    setAllInstances(formatAllInstances(_allInstances));\n\n  }\n\n  // 定时自动刷新\n  const loadDataAuto = async () => {\n    loadData();\n  }\n  setInterval(() => {\n    console.log(\"Date: \", Date())\n    if (quantContract) {\n      loadDataAuto();\n    }\n  }, 300000);\n\n  // start strategy handle ---------------------------------------------------------------------\n\n  const get_all_StrategyInfo_x_strategiest = async (strategist_address) => {\n    console.log(\"get_all_StrategyInfo_x_strategiest => strategist_address: \", strategist_address);\n    const _myCreatedStrategies = await c.methods.get_all_StrategyInfo_x_strategiest(strategist_address).call();\n    console.log(\"getAllStrategies _myCreatedStrategies: \", _myCreatedStrategies);\n    setMyCreatedStrategies(_myCreatedStrategies);\n  }\n\n  const set_strategy_status_running = async (id) => {\n    console.log(\"set_strategy_status_running => id: \", id);\n    // await c.methods.set_strategy_status_running(id)\n    await c.methods.set_strategy_status_x_id_status(id, 1)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  const set_strategy_status_stop = async (id) => {\n    console.log(\"set_strategy_status_stop => id: \", id);\n    // await c.methods.set_strategy_status_stop(id)\n    await c.methods.set_strategy_status_x_id_status(id, 2)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  const set_strategy_status_unavailable = async (id) => {\n    console.log(\"set_strategy_status_unavailable => id: \", id);\n    // await c.methods.set_strategy_status_unavailable(id)\n    await c.methods.set_strategy_status_x_id_status(id, 3)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  // start instance handle ---------------------------------------------------------------------\n\n  // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n  // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n  // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n  // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n  // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n  // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n  // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n  // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n  // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n  // _instance_status == 9 set_instance_status_Settled(instance_id);\n\n  const set_instance_status_StrategistPreConfirmed = async (obj) => {\n    // const { final_amount } = obj;\n    const final_amount = parseInt(obj.final_amount);\n    console.log(\"set_instance_status_StrategistPreConfirmed final_amount: \", final_amount);\n    const instance_id = parseInt(obj.instance_id);\n    console.log(\"set_instance_status_StrategistPreConfirmed instance_id: \", instance_id);\n    await c.methods.set_instance_status_x_id_status(instance_id, 1, final_amount)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n  const set_instance_status_StrategistMidDisagree = async (obj) => {\n    // const { final_amount } = obj;\n    const final_amount = parseInt(obj.final_amount);\n    console.log(\"set_instance_status_StrategistMidDisagree final_amount: \", final_amount);\n    const instance_id = parseInt(obj.instance_id);\n    console.log(\"set_instance_status_StrategistMidDisagree instance_id: \", instance_id);\n    await c.methods.set_instance_status_x_id_status(instance_id, 3, final_amount)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n  const set_instance_status_StrategistConfirmed = async (obj) => {\n    // const { final_amount } = obj;\n    const final_amount = parseInt(obj.final_amount);\n    console.log(\"set_instance_status_StrategistConfirmed final_amount: \", final_amount);\n    const instance_id = parseInt(obj.instance_id);\n    console.log(\"set_instance_status_StrategistConfirmed final_amount: \", final_amount);\n    await c.methods.set_instance_status_x_id_status(instance_id, 4, final_amount)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n\n  // helper 函数 -------------------------------------------------------------------\n  const changeExpand_StrategistPreConfirmed = (index) => {\n    allInstances.splice(index, 1, { ...allInstances[index], isExpand_StrategistPreConfirmed: !allInstances[index].isExpand_StrategistPreConfirmed })\n    console.log({ 'i item.isExpand_StrategistPreConfirmed: ': allInstances[index].isExpand_StrategistPreConfirmed })\n    setMainLoading(!mainLoading);\n  }\n  const changeExpand_StrategistMidDisagree = (index) => {\n    allInstances.splice(index, 1, { ...allInstances[index], isExpand_StrategistMidDisagree: !allInstances[index].isExpand_StrategistMidDisagree })\n    console.log({ 'i item.isExpand_StrategistMidDisagree: ': allInstances[index].isExpand_StrategistMidDisagree })\n    setMainLoading(!mainLoading);\n  }\n  const changeExpand_StrategistConfirmed = (index) => {\n    allInstances.splice(index, 1, { ...allInstances[index], isExpand_StrategistConfirmed: !allInstances[index].isExpand_StrategistConfirmed })\n    console.log({ 'i item.isExpand_StrategistConfirmed: ': allInstances[index].isExpand_StrategistConfirmed })\n    setMainLoading(!mainLoading);\n  }\n  // test --------------------------------------------------\n  const bignubmer_to_string = (bn) => {\n    console.log(\"bignubmer_to_string bn: \", bn)\n    // let x = 1; // new BigNumber(123.4567);\n    // let st =  x.toString();\n    console.log(bn.toString())\n    return bn.toString();\n  }\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const new_strategy = async (obj) => {\n    console.log(\"new_strategy obj: \", obj);\n    const strategy_name = obj.strategy_name;\n    const startup_amount = obj.startup_amount;\n    const take_profit = obj.take_profit;\n    const tp_rate = obj.tp_rate;\n    const stop_loss = obj.stop_loss;\n    const sl_rate = obj.sl_rate;\n    const exchange = obj.exchange;\n    await c.methods.new_strategy(strategy_name, startup_amount, take_profit, tp_rate, stop_loss, sl_rate, exchange)\n      .send({ from: account })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        loadData();\n      })\n      .on('error', function (error, receipt) {\n        loadData();\n      });\n  }\n  // new_strategy(string memory _strategy_name, uint256 _strategy_startup_amount, uint256 _take_profit, uint256 _tp_rate, string memory _exchange) public payable returns (bool result) {\n\n  const getStrategyStatus = async (_strategy_name) => {\n    console.log(\"getStrategyStatus => _strategy_name: \", _strategy_name);\n    // await c.methods.getStrategyStatus(_strategy_name).call();\n    const aStrategyStatus = await c.methods.getStrategyStatus(_strategy_name).call()\n    console.log(\"getStrategyStatus => aStrategyStatus：\", aStrategyStatus);\n    console.log(\"getStrategyStatus => end\");\n    return aStrategyStatus;\n  }\n\n  const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n  const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n  return (\n    <div>\n      <div className=\"row mt-4\">\n        {!connected &&\n          <div className=\"d-flex justify-content-center align-items-center \">\n            <h3>请连接钱包</h3>\n          </div>\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 &&\n          <div className=\"d-flex justify-content-center align-items-center \">\n            {/* <p>我创建的</p> */}\n            {/* <p>我创建的策略列表</p> */}\n            <h3>我创建的策略列表</h3>\n          </div>\n        }\n        {\n          console.log(\" myCreatedStrategies ----------------------------- \", myCreatedStrategies)\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 && myCreatedStrategies.map((item) => {\n          console.log(\" item ----------------------------- \", item)\n\n          return (\n            // <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n            //   <p>{item.strategy_id.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.name.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.sender.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.strategy_startup_amount.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.take_profit.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.tp_rate.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.stop_loss.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.sl_rate.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.exchange.toString()}</p>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <p>{item.status}</p>\n            //    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <button onClick={() => { set_strategy_status_running(item.strategy_id) }} >Run</button>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <button onClick={() => { set_strategy_status_stop(item.strategy_id) }} >Stop</button>\n            //   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            //   <button onClick={() => { set_strategy_status_unavailable(item.strategy_id) }} >Unavailable</button>\n            // </div>\n            <div key={item.id}>\n              <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                  {getColumn(\"strategy_id\")}\n                  {getColumn(\"name\")}\n                  {getColumn(\"sender\")}\n                  {getColumn(\"strategy_startup_amount\")}\n                  {getColumn(\"take_profit\")}\n                  {getColumn(\"stop_loss\")}\n                  {getColumn(\"tp_rate\")}\n                  {getColumn(\"sl_rate\")}\n                  {getColumn(\"exchange\")}\n                  {getColumn(\"status\")}\n                  <Column\n                    title=\"运行\"\n                    key=\"Run\"\n                    render={(text, record) => (\n                      <Space size=\"middle\">\n                        <button onClick={() => set_strategy_status_running(item.strategy_id)}>运行</button>\n                      </Space>\n                    )}\n                  />\n                  <Column\n                    title=\"停止\"\n                    key=\"Stop\"\n                    render={(text, record) => (\n                      <Space size=\"middle\">\n                        <button onClick={() => set_strategy_status_stop(item.strategy_id)}>停止</button>\n                      </Space>\n                    )}\n                  />\n                  <Column\n                    title=\"不可用\"\n                    key=\"Unavailable\"\n                    render={(text, record) => (\n                      <Space size=\"middle\">\n                        <button onClick={() => set_strategy_status_unavailable(item.strategy_id)}>不可用</button>\n                      </Space>\n                    )}\n                  />\n                </Table>\n              </div>\n            </div>\n          )\n        })\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length > 0 &&\n          <div className=\"d-flex justify-content-center align-items-center \">\n            {/* <p>我创建的</p> */}\n            <h3>我的 客户/实例 列表</h3>\n          </div>\n        }\n\n        {/* {allInstances && allInstances.map((item) => {\n          if (item.sender == account) {\n            return (\n              <div>\n                <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n\n                  <p>{item.instance_id.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.strategy_id.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.name.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.sender.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.strategy_startup_amount.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.take_profit.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.stop_loss.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.tp_rate.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.exchange.toString()}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.status}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.status}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.user_address}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <p>{item.apikey}</p>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button onClick={() => { set_instance_status_StrategistPreConfirmed(item.instance_id, 10010) }} >StrategistPreConfirmed 参与时确认</button>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button onClick={() => { set_instance_status_StrategistMidDisagree(item.instance_id, 10010) }} >StrategistMidDisagree 中途不同意</button>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button onClick={() => { set_instance_status_StrategistConfirmed(item.instance_id, 10010) }} >StrategistConfirmed 策略停止运行确认</button>\n\n\n                </div> \n              </div>\n            )\n          }\n        })\n        } */}\n        {myCreatedStrategies && myCreatedStrategies.length > 0 && allInstances && allInstances.map((item, index) => {\n          if (item.sender == account) {\n            return (\n              <div>\n                <div key={item.id}>\n                  <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                    <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                      {getColumn(\"instance_id\")}\n                      {getColumn(\"strategy_id\")}\n                      {getColumn(\"name\")}\n                      {getColumn(\"sender\")}\n                      {getColumn(\"strategy_startup_amount\")}\n                      {getColumn(\"take_profit\")}\n                      {getColumn(\"stop_loss\")}\n                      {getColumn(\"tp_rate\")}\n                      {getColumn(\"sl_rate\")}\n                      {getColumn(\"exchange\")}\n                      {getColumn(\"status\")}\n                      {getColumn(\"user_address\")}\n                      {getColumn(\"apikey\")}\n                      {getColumn(\"secretkey\")}\n                      {getColumn(\"passphrase\")}\n                      {getColumn(\"instance_status\")}\n\n                      <Column\n                        title=\"实例运行前确认\"\n                        key=\"StrategistPreConfirmed\"\n                        render={(text, record) => (\n                          <Space size=\"middle\">\n                            {/* <button onClick={() => set_instance_status_StrategistPreConfirmed(item.instance_id) }>仲裁User对</button> */}\n                            <button onClick={() => changeExpand_StrategistPreConfirmed(index)}>实例运行前确认</button>\n                          </Space>\n                        )}\n                      />\n                      <Column\n                        title=\"策略师不同意\"\n                        key=\"StrategistMidDisagree\"\n                        render={(text, record) => (\n                          <Space size=\"middle\">\n                            {/* <button onClick={() => set_instance_status_StrategistMidDisagree(item.instance_id) }>仲裁Strategist对</button> */}\n                            <button onClick={() => changeExpand_StrategistMidDisagree(index)}>策略师不同意</button>\n                          </Space>\n                        )}\n                      />\n                      <Column\n                        title=\"实例运行后确认\"\n                        key=\"StrategistConfirmed\"\n                        render={(text, record) => (\n                          <Space size=\"middle\">\n                            {/* <button onClick={() => set_instance_status_StrategistConfirmed(item.instance_id) }>已经结算</button> */}\n                            <button onClick={() => changeExpand_StrategistConfirmed(index)}>实例运行后确认</button>\n                          </Space>\n                        )}\n                      />\n                    </Table>\n                  </div>\n                  {\n                    item.isExpand_StrategistPreConfirmed ?\n                      <div className='strategy-form' >\n                        set_instance_status_StrategistPreConfirmed  {item.instance_id}\n                        <br></br>\n                        <Form_StrategistPreConfirmed instance_id={item.instance_id} set_instance_status_StrategistPreConfirmed={set_instance_status_StrategistPreConfirmed.bind(this)} />\n                      </div>\n                      : null\n                  }\n                  {\n                    item.isExpand_StrategistMidDisagree ?\n                      <div className='strategy-form' >\n                        set_instance_status_StrategistMidDisagree  {item.instance_id}\n                        <br></br>\n                        <Form_StrategistMidDisagree instance_id={item.instance_id} set_instance_status_StrategistMidDisagree={set_instance_status_StrategistMidDisagree.bind(this)} />\n                      </div>\n                      : null\n                  }\n                  {\n                    item.isExpand_StrategistConfirmed ?\n                      <div className='strategy-form' >\n                        set_instance_status_StrategistConfirmed  {item.instance_id}\n                        <br></br>\n                        <Form_StrategistConfirmed instance_id={item.instance_id} set_instance_status_StrategistConfirmed={set_instance_status_StrategistConfirmed.bind(this)} />\n                      </div>\n                      : null\n                  }\n                </div>\n              </div>\n            )\n          }\n        })\n        }\n        {connected && myCreatedStrategies && myCreatedStrategies.length == 0 &&\n          <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n            <h3>成为策略师？</h3>\n          </div>\n        }\n        {connected && // myCreatedStrategies && myCreatedStrategies.length > 0 &&\n          <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n            <h3>添加一个新策略！ </h3>\n            <h3>填写右边表单</h3>\n            <div>\n              <StrategyNewForm newStrategy={new_strategy.bind(this)} />\n            </div>\n          </div>\n        }\n\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport \"../css/CustomButtons.css\"\nimport \"../css/MainBackground.css\"\nimport { useParams } from 'react-router';\nimport { FormattedMessage } from 'react-intl'\nimport StrategyUseForm from './StrategyUseForm';\nimport { Form, Input, InputNumber, Table, Button, Space } from 'antd';\n\nimport { formatAllStrategies, formatAllInstances } from '../common/js/formatHelper';\nimport { Form_UserMidDisagree } from '../common/js/instanceStatusHandleForm';\n\nimport { getStrategyTitleText } from '../common/js/tableTitle';\nimport { getColumn } from '../common/js/tableTitleColumn';\n\nconst { Column } = Table;\n\nexport default function Main(props) {\n    const { account, quantContract, connected, ConnectAccount, ticketPrice } = props;\n    const c = quantContract;\n    const { referCode } = useParams();\n    const [playerRefferalCode, setPlayerRefferalCode] = useState(null);\n    const [mainLoading, setMainLoading] = useState(true);\n    const [allStrategiesOfUser, setAllStrategiesOfUser] = useState(null);\n    const [allInstancesOfUser, setAllInstancesOfUser] = useState(null);\n\n    useEffect(() => {\n        if (connected) {\n            loadData();\n        }\n    }, [quantContract]);\n\n    const connectToAccount = () => {\n        if (!connected) {\n            setMainLoading(true);\n            ConnectAccount()\n        }\n    }\n\n    const loadData = async () => {\n        console.log(\"loadData\");\n        const _allStrategiesOfUser = await c.methods.getAllStrategiesOfUser(account).call();\n        console.log(\"loadData _allStrategiesOfUser: \", _allStrategiesOfUser);\n        setAllStrategiesOfUser(formatAllStrategies(_allStrategiesOfUser));\n        const _allInstancesOfUser = await c.methods.getAllInstancesOfUser(account).call();\n        console.log(\"loadData _allInstancesOfUser: \", _allInstancesOfUser);\n        setAllInstancesOfUser(formatAllInstances(_allInstancesOfUser));\n\n    }\n\n    const loadDataAuto = async () => {\n        console.log(\"loadDataAuto\");\n        loadData();\n    }\n    setInterval(() => {\n        if (quantContract) {\n\n            loadDataAuto();\n        }\n    }, 300000);\n\n    // start instance handle ---------------------------------------------------------------------\n\n\n    const new_instance = async (obj) => {\n        console.log(\"new_instance obj: \", obj);\n        const strategy_name = obj.strategy_name || \"\";\n        const strategy_id = obj.strategy_id;\n        const apikey = obj.apikey;\n        const secretkey = obj.secretkey;\n        const passphrase = obj.passphrase || \"\";\n        const exchange = obj.exchange;\n        // const take_profit = obj.take_profit.toString();\n        const take_profit = obj.take_profit;\n        const initial_amount = obj.initial_amount;\n        console.log(\"new_instance strategy_id: \", strategy_id);\n        console.log(\"new_instance apikey: \", apikey);\n        console.log(\"new_instance secretkey: \", secretkey);\n        console.log(\"new_instance passphrase: \", passphrase);\n        await c.methods.new_instance(strategy_id, initial_amount, apikey, secretkey, passphrase)\n            .send({ from: account, value: take_profit })\n            // .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n\n    // _instance_status == 0 set_instance_status_UserPreConfirmed(instance_id);\n    // _instance_status == 1 set_instance_status_StrategistPreConfirmed(instance_id);     \n    // _instance_status == 2 set_instance_status_UserMidDisagree(instance_id);     \n    // _instance_status == 3 set_instance_status_StrategistMidDisagree(instance_id);     \n    // _instance_status == 4 set_instance_status_StrategistConfirmed(instance_id);     \n    // _instance_status == 5 set_instance_status_UserConfirmed(instance_id);     \n    // _instance_status == 6 set_instance_status_ArbitrateUserWin(instance_id);     \n    // _instance_status == 7 set_instance_status_ArbitrateStrategistWin(instance_id);     \n    // _instance_status == 8 set_instance_status_Unsettled(instance_id);     \n    // _instance_status == 9 set_instance_status_Settled(instance_id);\n    const set_instance_status_UserPreConfirmed = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_UserPreConfirmed final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_UserPreConfirmed instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 0, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n\n    const set_instance_status_UserMidDisagree = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = parseInt(obj.final_amount);\n        console.log(\"set_instance_status_UserMidDisagree final_amount: \", final_amount);\n        const instance_id = parseInt(obj.instance_id);\n        console.log(\"set_instance_status_UserMidDisagree instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 2, final_amount)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n    const set_instance_status_UserConfirmed = async (obj) => {\n        // const { final_amount } = obj;\n        const final_amount = 0;\n        console.log(\"set_instance_status_UserConfirmed final_amount: \", final_amount);\n        console.log(\"set_instance_status_UserConfirmed instance_id: \", instance_id);\n        // const instance_id = new Number(obj.instance_id);\n        // const instance_id = Number(obj.instance_id);\n        const instance_id = parseInt(obj.instance_id);\n        // const instance_id = 1;\n        console.log(\"set_instance_status_UserConfirmed instance_id: \", instance_id);\n        await c.methods.set_instance_status_x_id_status(instance_id, 5, 0)\n            .send({ from: account })\n            .on('confirmation', (confirmationNumber, receipt) => {\n                loadData();\n            })\n            .on('error', function (error, receipt) {\n                loadData();\n            });\n    }\n\n    const changeExpand = (index) => {\n        allStrategiesOfUser.splice(index, 1, { ...allStrategiesOfUser[index], isExpand: !allStrategiesOfUser[index].isExpand, id: allStrategiesOfUser[index].name + Date.now() })\n        console.log({ 'i item.isExpand: ': allStrategiesOfUser[index].isExpand })\n        setMainLoading(!mainLoading);\n    }\n\n    const changeExpand_UserMidDisagree = (index) => {\n        allInstancesOfUser.splice(index, 1, { ...allInstancesOfUser[index], isExpand_UserMidDisagree: !allInstancesOfUser[index].isExpand_UserMidDisagree })\n        console.log({ 'i item.isExpand_UserMidDisagree: ': allInstancesOfUser[index].isExpand_UserMidDisagree })\n        setMainLoading(!mainLoading);\n    }\n\n    const use_strategy1 = async (obj) => {\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n        console.log(\"use_strategy1 obj: \", obj);\n    }\n\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\n    return (\n        // <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\n        <div className=\"row mt-4\">\n            {!connected &&\n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <h3>请连接钱包</h3>\n                </div>\n            }\n\n            {connected &&\n                <div className=\"d-flex justify-content-center align-items-center \">\n                    <h3>所有策略</h3>\n                </div>\n            }\n\n            {/* { allStrategiesOfUser && allStrategiesOfUser.map((item) => {\n                return (\n                    <div>\n                        <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            \n                            <p>{item.strategy_id.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.name.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.sender.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.strategy_startup_amount.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.take_profit.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.stop_loss.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.tp_rate.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.exchange.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.status}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button>再次使用</button>\n                        </div>\n                    \n                        <div className=\"d-flex justify-content-center align-items-center \">\n                            \n                        </div>\n                        <div>\n                            <br></br>\n                            <StrategyUseForm new_instance={new_instance.bind(this)}/>\n                        </div>\n                    </div> \n                )\n                })\n            } */}\n            {allStrategiesOfUser && allStrategiesOfUser.map((item, index) => {\n                return (\n                    <div key={item.id}>\n                        <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                {getColumn(\"strategy_id\")}\n                                {getColumn(\"name\")}\n                                {getColumn(\"sender\")}\n                                {getColumn(\"strategy_startup_amount\")}\n                                {getColumn(\"take_profit\")}\n                                {getColumn(\"stop_loss\")}\n                                {getColumn(\"tp_rate\")}\n                                {getColumn(\"sl_rate\")}\n                                {getColumn(\"exchange\")}\n                                {getColumn(\"status\")}\n                                <Column\n                                    title=\"使用策略\"\n                                    key=\"action\"\n                                    render={(text, record) => (\n                                        <Space size=\"middle\">\n                                            <button onClick={() => changeExpand(index)}>使用策略</button>\n                                        </Space>\n                                    )}\n                                />\n                            </Table>\n                        </div>\n                        {\n                            item.isExpand ?\n                                <div className='strategy-form' >\n                                    <br></br>\n                                    <StrategyUseForm formOption={item} new_instance={new_instance.bind(this)} />\n                                </div>\n                                : null\n                        }\n                    </div>\n                )\n            })\n            }\n            {connected &&\n                <div className=\"d-flex justify-content-center align-items-center \">\n                    {/* <p>All Instances</p> */}\n                    <h3>所有实例</h3>\n                </div>\n            }\n\n            {allInstancesOfUser && allInstancesOfUser.map((item, index) => {\n                return (\n                    <div>\n                        {/* <div key={item} className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                            \n                            <p>{item.instance_id.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.strategy_id.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.name.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.sender.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.strategy_startup_amount.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.take_profit.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.stop_loss.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.tp_rate.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.exchange.toString()}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.status}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.status}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.user_address}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <p>{item.apikey}</p>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button onClick={() => { set_instance_status_UserMidDisagree(item.instance_id) }} >UserMidDisagree 中途不同意</button>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button onClick={() => { set_instance_status_UserConfirmed(item.instance_id) }} >UserConfirmed 策略停止运行确认</button>\n                            \n\n                        </div>  */}\n\n                        <div key={item.id}>\n                            <div className=\"d-flex justify-content-center align-items-center margin-top:10px margin-rignt:10px \">\n                                <Table dataSource={[item]} pagination={{ position: ['none', 'none'] }}>\n                                    {getColumn(\"instance_id\")}\n                                    {getColumn(\"strategy_id\")}\n                                    {getColumn(\"name\")}\n                                    {getColumn(\"sender\")}\n                                    {getColumn(\"strategy_startup_amount\")}\n                                    {getColumn(\"take_profit\")}\n                                    {getColumn(\"stop_loss\")}\n                                    {getColumn(\"tp_rate\")}\n                                    {getColumn(\"sl_rate\")}\n                                    {getColumn(\"exchange\")}\n                                    {getColumn(\"status\")}\n                                    {getColumn(\"user_address\")}\n                                    {getColumn(\"apikey\")}\n                                    {getColumn(\"secretkey\")}\n                                    {getColumn(\"passphrase\")}\n                                    {getColumn(\"instance_status\")}\n\n                                    <Column\n                                        title=\"User不同意\"\n                                        key=\"UserMidDisagree\"\n                                        render={(text, record) => (\n                                            <Space size=\"middle\">\n                                                {/* <button onClick={() => set_instance_status_UserMidDisagree(item.instance_id) }>User不同意</button> */}\n                                                <button onClick={() => changeExpand_UserMidDisagree(index)}>User不同意</button>\n                                            </Space>\n                                        )}\n                                    />\n                                    <Column\n                                        title=\"策略停止运行确认\"\n                                        key=\"UserConfirmed\"\n                                        render={(text, record) => (\n                                            <Space size=\"middle\">\n                                                <button onClick={() => set_instance_status_UserConfirmed({ instance_id: item.instance_id })}>策略停止运行，确认</button>\n                                            </Space>\n                                        )}\n                                    />\n                                </Table>\n                            </div>\n                            {\n                                item.isExpand_UserMidDisagree ?\n                                    <div className='strategy-form' >\n                                        set_instance_status_UserMidDisagree  {item.instance_id}\n                                        <br></br>\n                                        <Form_UserMidDisagree instance_id={item.instance_id} set_instance_status_UserMidDisagree={set_instance_status_UserMidDisagree.bind(this)} />\n                                    </div>\n                                    : null\n                            }\n                        </div>\n                    </div>\n                )\n            })\n            }\n        </div >\n    )\n}\n","import React, { useEffect, useState } from 'react'\n\nexport default function Banner(props) {\n    \n    return (\n        <div className=\"banner-img-bg mx-md-5 text-light  py-4 \">\n            <div className=\"d-md-flex align-items-center justify-content-between text-center\">\n                    <div className=\"glow-div2 glassBg-box-timer text-center\">\n                        <h2 className=\"my-4\">Play Game</h2>\n                    </div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nexport default function Howtoplay() {\n    return (\n        <div className=\"text-light glassBg-box p-5 m-5\">\n            <h1><FormattedMessage id=\"faq_title\" defaultMessage=\"FAQ\"/></h1>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_risk\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_risk\" defaultMessage=\"answer\"/></p>\n            \n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_1\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_1\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_2\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_2\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_3\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_3\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_4\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_4\" defaultMessage=\"answer\"/></p>\n            <hr></hr>\n                <h3><FormattedMessage id=\"faq_question_5\" defaultMessage=\"question\"/></h3>\n                <p><FormattedMessage id=\"faq_answer_5\" defaultMessage=\"answer\"/></p>\n            \n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\n\nimport Web3 from \"web3\";\nimport QuantJson from \"./abis/Quant.json\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nimport Home from \"./components/Home\";\nimport Main from \"./components/Main\";\n\nimport \"./css/main.css\";\nimport Navbar from \"./components/Navbar\";\nimport Admin from \"./components/Admin\";\nimport Auditor from \"./components/Auditor\";\nimport Strategist from \"./components/Strategist\";\nimport User from \"./components/User\";\nimport Banner from \"./components/Banner\";\nimport Howtoplay from \"./components/Howtoplay\";\nimport Rule from \"./components/Rule\";\nimport Donation from \"./components/Donation\";\nimport Contact from \"./components/Contact\";\n\nimport configMap from './common/js/configMap';\n\nclass App extends Component {\n\n  async componentWillMount() {\n    this.setState({ loading: false });\n  }\n\n  async ConnectAccount() {\n    await this.loadWeb3();\n  };\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      this.loadBlockChatData();\n\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n      this.loadBlockChatData();\n\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n \n  async loadBlockChatData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    web3.eth.defaultAccount = accounts[0];\n    this.setState({ account: accounts[0] });\n\n    const networkId = await web3.eth.net.getId();\n    console.log(\"app.jsx loadBlockChatData networkId: \", networkId);\n\n    // const networkData = LotteryJson.networks[networkId];\n    \n    // if (networkData) {\n    if (networkId === 80001 || networkId === 137 || networkId == 1337) {\n      this.setState({ connected: true });\n      const CONTACT_ADDRESS = configMap.contact_address; //  env: jack.fanya.win10-matic.mumbai-1\n      // const CONTACT_ADDRESS = '0x6ac901316dCe8d39ae1eD1681E363288ca88dF85'; //  env: jack.fanya.win10-matic.mumbai-1\n      // const CONTACT_ADDRESS = '0x5A41E5B354d411968ffB903E75DaF5d8Fe61EC7b';\n      // const CONTACT_ADDRESS = '0x4202E7A3d5947A7A780a0ec2c1A29519342B5Cc2';\n      console.log(\"CONTACT_ADDRESS\");\n      console.log(CONTACT_ADDRESS);\n      // const quantContract = await web3.eth.Contract(LotteryJson.abi, networkAddress);\n      const CONTACT_ABI = QuantJson.abi;\n\t    const quantContract = await web3.eth.Contract(CONTACT_ABI, CONTACT_ADDRESS);\n      const networkAddress = CONTACT_ADDRESS;\n      this.setState({ quantContract });\n      this.setState({ networkAddress });\n      this.setState({ networkId });\n      if (networkId === 80001) {\n          this.setState({ blockExplorerUrl: \"https://mumbai.polygonscan.com/address/\"+networkAddress });\n      } else if (networkId === 137) {\n          this.setState({ blockExplorerUrl: \"https://polygonscan.com/address/\"+networkAddress });\n      } else if (networkId === 1337) {\n        this.setState({ blockExplorerUrl: \"https://polygonscan.com/address/\"+networkAddress });\n      } else {\n        this.setState({ blockExplorerUrl: \"https://polygonscan.com/address/\"+networkAddress });\n      }\n      this.setState({ ticketPrice: \"1\" });\n\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Blockchat contract not deployed to detected network.\");\n      this.switchToPolygonTestNet()\n    }\n  }\n\n  \n  async switchToPolygonTestNet(){\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x13881\" }],\n      });\n      this.loadBlockChatData();\n    } catch (error) {\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: \"0x13881\",\n                chainName: \"Polygon TestNet Mumbai\",\n                rpcUrls: [\"https://rpc-mumbai.maticvigil.com/\"],\n                nativeCurrency: {\n                  name: \"Matic\",\n                  symbol: \"Matic\",\n                  decimals: 18,\n                },\n                // blockExplorerUrls: [\"https://explorer-mumbai.maticvigil.com\"],\n                blockExplorerUrls: [\"https://mumbai.polygonscan.com\"],\n              },\n            ],\n          });\n          this.loadBlockChatData();\n\n        } catch (error) {\n        }\n      }\n    }\n  }\n\n\n  async switchToPolygonMainnet() {\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x89\" }],\n      });\n      this.loadBlockChatData();\n    } catch (error) {\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: \"0x89\",\n                chainName: \"Polygon Mainnet\",\n                rpcUrls: [\"https://rpc-mainnet.maticvigil.com/\"],\n                nativeCurrency: {\n                  name: \"Matic\",\n                  symbol: \"Matic\",\n                  decimals: 18,\n                },\n                // blockExplorerUrls: [\"https://explorer.matic.network/\"],\n                blockExplorerUrls: [\"https://polygonscan.com/\"],\n              },\n            ],\n          });\n          this.loadBlockChatData();\n\n        } catch (error) {\n        }\n      }\n    }\n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      connected: false,\n      account: \"\",\n      gameStartDate: 0,\n      quantContract: null,\n      ticketPrice: 10**18,\n      // ticketPrice: 0.1 * 10**18, // 0.1 matic\n      loading: true,\n    };\n    // console.log(\" this.state \", this.state)\n    this.ConnectAccount = this.ConnectAccount.bind(this)\n  }\n\n  render() {\n    return (!this.state.loading\n      ?\n      <HashRouter>\n        <Navbar account={this.state.account} ConnectAccount={this.ConnectAccount} />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Banner gameStartDate={this.state.gameStartDate} />\n            <Home account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n          \n          <Route path=\"/main\" exact>\n            <Banner gameStartDate={this.state.gameStartDate} />\n            <Main account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/admin\" exact>\n            <Admin account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/strategist\" exact>\n            <Strategist account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/user\" exact>\n            <User account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/auditor\" exact>\n            <Auditor account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} quantContract={this.state.quantContract} networkAddress={this.state.networkAddress} blockExplorerUrl={this.state.blockExplorerUrl}/>\n          </Route >\n\n          <Route path=\"/how-to-play\" exact>\n            <Howtoplay />\n          </Route >\n\n          {/* <Route path=\"/rule\" exact>\n            <Rule />\n          </Route >\n\n          <Route path=\"/donation\" exact>\n            <Donation />\n          </Route >\n\n          <Route path=\"/contact\" exact>\n            <Contact />\n          </Route > */}\n\n        </Switch >\n      </HashRouter >\n      :\n      <div className=\"text-center\">\n        loading...\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const zh_CN = {\n    start: '开始',\n    // switch: 'English',\n    switch: 'EN',\n\n    main_plear_connect_wallet:\"请登录\", // \"请连接钱包登录\"\n    \n    nav_quant:\"Q\", // \"Quant\", // 左上角标签\n    nav_main:\"广场\",\n    nav_admin:\"管理员\",\n    nav_strategist:\"策略师\", // \"策略师\", // \"师傅\", \n    nav_user:\"用户\",\n    nav_auditor:\"审核员\",\n    nav_faq:\"问题\",\n    nav_rule:\"规则\",\n    nav_donation:\"捐赠\",\n    nav_contact:\"联系\",\n\n\n    rule_time:\"规则\",\n    rule_game_rule:\"活动规则\",\n    rule_game_rule_1:\"\",\n    rule_game_rule_2:\"\",\n    rule_game_rule_3:\"\",\n    rule_game_rule_4:\"\",\n    rule_game_rule_5:\"\",\n    rule_game_rule_6:\"\",\n\n\n    faq_title:\"常见问题\",\n    faq_question_risk:\"实例什么时候结束？\",\n    faq_answer_risk:\"实例状态为：5，6，7，8，9 时。\",\n\n    faq_question_1:\"实例状态数值分别代表什么意思？\",\n    faq_answer_1:\"0: 用户参与, 请策略师确认用户提交信息（包含：apikey 与 初始金额）。1: 策略师认可用户的提交信息。2: 用户中途不同意。3: 策略师中途不同意。4: 策略师提交信息，请求用户确认。5: 用户认可策略师提交的信息（包含：最终金额）。 6: 仲裁，认可用户正确。7: 仲裁，认可策略师正确。8: 未结算。9: 已经结算。\",\n\n    donation_title:\"为这次游戏捐赠吧！\",\n    contact_title:\"联系方式\",\n\n    zzz: \"zzz\",\n  }\nexport default zh_CN\n  \n","const en_US = {\n    start: 'start',\n    switch: 'CN',\n\n    main_plear_connect_wallet:\"Please Connect to your Wallet for play game\",\n\n    nav_quant:\"Q\",\n    nav_main:\"Strategies\",\n    nav_admin:\"Admin\",\n    nav_strategist:\"Strategist\",\n    nav_user:\"User\",\n    nav_auditor:\"Auditor\",\n    nav_faq:\"FAQ\",\n    nav_rule:\"Rule\",\n    nav_donation:\"Donation\",\n    nav_contact:\"Contact\",  \n\n    rule_time:\"Rule\",\n    rule_game_rule:\"Rules of the game\",\n    // rule_game_rule_1:\"Rule 1\",\n    // rule_game_rule_2:\"Rule 2\",\n    // rule_game_rule_3:\"Rule 3\",\n    // rule_game_rule_4:\"Rule 4\",\n    // rule_game_rule_5:\"Rule 5\",\n    // rule_game_rule_6:\"Rule 6\",\n    rule_game_rule_1:\"\",\n    rule_game_rule_2:\"\",\n    rule_game_rule_3:\"\",\n    rule_game_rule_4:\"\",\n    rule_game_rule_5:\"\",\n    rule_game_rule_6:\"\",\n    \n    rule_draw_rule:\"\",\n    rule_draw_rule_1:\"\",\n    rule_draw_rule_2:\"\",\n    \n    rule_reward_rule: \"\",\n    rule_reward_rule_1:\"\",\n    rule_reward_rule_2:\"\",\n    rule_reward_rule_3:\"\",\n    rule_reward_rule_4:\"\",\n    rule_reward_rule_5:\"\",\n\n    faq_title:\"Frequently Asked Question\",\n    // faq_question_1:\"\",\n    // faq_answer_1:\"\",\n    // faq_question_2:\"\",\n    // faq_answer_2:\"\",\n    // faq_question_3:\"\",\n    // faq_answer_3:\"\",\n    // faq_question_4:\"\",\n    // faq_answer_4:\"\",\n    // faq_question_5:\"\",\n    // faq_answer_5:\"\",\n\n    donation_title:\"Please donate for this game.\",\n    contact_title:\"Contact\",\n    \n    zzz: \"zzz\",\n  }\nexport default en_US\n  \n","import React, { useContext } from 'react'\nimport { IntlProvider } from 'react-intl' // 包裹在需要语言国际化的组件的最外层，和react-redux的Provider一样 让组件和组件内的子组件都能使用react-intl提供的api和方法\nimport { mainContext } from '../reducer' // 这里使用的是useReducer 简单的在根目录下创建一个 来控制语言的全局状态维护\nimport zh_CN from './cn' // 中文包\nimport en_US from './en' // 英文包\n\nconst Inter = (props) => {\n    // 获取默认的语言设置 也可以配合一些全局状态管理进行结合使用 如redux Mobx或者react自身提供的useReducer等\n  const { state } = useContext(mainContext)\n  const chooseLocale = (val) => { \n    let _val = val || navigator.language.split('_')[0]\n    switch (_val) {\n      case 'en':\n        return en_US\n      case 'zh':\n        return zh_CN\n      default:\n        return en_US\n    }\n  }\n  let locale = state.locale || 'en' // 获取 locale\n  let { children } = props\n  // 包裹子组件 让子组件共享react-intl的api 实现多语言\n  return (\n    <IntlProvider\n      key={locale}\n      locale={locale}\n      defaultLocale='en'\n      messages={chooseLocale(locale)}\n    >\n      {children}\n    </IntlProvider>\n  )\n}\n\nexport default Inter\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nimport { ContextProvider } from './reducer'\nimport Inter from './locale/intl'\nconst Root = () => {\n    return (\n      <ContextProvider>\n        <Inter>\n          <App />\n        </Inter>\n      </ContextProvider>\n    );\n\n};\n\nReactDom.render(\n    <Root />,\n    // <App/>,\n    document.getElementById('root')\n)"],"sourceRoot":""}